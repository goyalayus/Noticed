Directory structure:
└── Noticed/
    ├── blogs.txt
    ├── bot.py
    ├── config.py
    ├── cookies.json
    ├── env.example
    ├── gemini_client.py
    ├── getusertweets.py
    ├── main.py
    ├── requirements.txt
    ├── speaking_style.txt
    ├── state_manager.py
    ├── temp.py
    ├── test_gemini_large_context.py
    └── data/
        └── processed_tweets.json

================================================
File: blogs.txt
================================================
--- START POST: Snabbit vs Urban Company ---
URL: https://manassaloi.com/2025/05/30/snabbit-urban-company.html

No one knows business which model is better long term. And that’s the most honest thing I can tell you about business strategy.
Take Zepto. When they started with their opex-heavy model: local dark stores, pre cooked food, delivery workers almost working like full time employees, always on standby so that they can do 10 min delivery, everyone was like “This is it! Absolute control over the delivery experience. 10 min delivery. This is how you win food delivery!”
They launched Zepto Cafe. Scaled it super fast. Launched it as a separate app. Mostly frozen food in 10 minutes. Zomato followed. Swiggy followed. Standalone companies popped up everywhere trying to copy the model.
Fast forward to today. Zepto’s prepping for IPO and guess what? They’re scaling down ZeptoCafe. Suddenly the “future of food delivery” doesn’t look so futuristic when you need to show profitability to public market investors.
So was Zepto Cafe a good model or not? Nobody knows. And that’s the point.
This same thing will playing out with Snabbit vs Urban Company.
Snabbit’s going full opex heavy - positioning workers (they call them experts) close to high demand areas, treating them almost like full time employees with insurance, providing e-bikes for female staff. They’re promising 10-minute service for daily chores.
Thanks to this model they will have high worker utilisation, low travel dead time, defensible density economics. A stricter ETA forces operational excellence; builds a habit loop around speed and reliability. Though I would argue Urban Company is pretty reliable too.
This is again a case of classic counter positioning. Urban Company operates the light touch marketplace model. Mostly freelancers, mostly low-frequency but high-ticket services like beauty, furniture and electronics repair. They can’t suddenly position their freelancers to fulfil 10 min delivery. For that you need even stricter SOPs, more control over the service workers, and the ability to have more control over their work hours and availability during those hours. Snabbit is going mostly after the home services market.
When Homejoy started (more than a decade back ago), they went after the services market and got destroyed by platform leakage. If someone’s coming to your house every day and the marketplace is taking a cut, what happens is that the supplier builds a relationship with the customer and the transaction moves offline. There are actually 2 cases when this happens:
High frequency, regular matching between the same supply and demand
High ticket size item where the take rate as an absolute value is way too high (this is your airport trip where the driver asks you to cancel your ride and then take the transaction offline)
Why would you pay platform fees for someone you see daily? You wouldn’t. You’d just get their number and pay them directly.
That’s why Uber works so well. You can’t build a relationship with your driver. It stays transactional.
(A friend wrote that Namma lets you favourite drivers now, so that you can get matched again with the same driver, which is possibly the worst feature you can implement as a marketplace.)
I have discussed this concept in detail in my ‘Marketplace for therapists’ post.
Yes, Snabbit experts will cover several adjacent buildings, not one home. And you can ensure that a customer rarely gets the same person two days in a row, so bilateral trust never deepens enough to go off app. But if service quality is similiar and you are happy with someone who you have got allocated 3/4 times, you might want to take that relationship offline.
Yes, these workers will stick to the platform till they keep earning ₹40k per month, but we have all seen how gig economy workers’ earnings drop over time once you stop subsidising the supply cost and cut your incentives.
There are other assumptions too:
Higher utilisation of experts
Repeat orders from customers (so that for incremental transaction you are at least not spending on demand side incentives)
Median distance travelled remains low, people use the e-bikes to travel fast to their next gig
Is Snabbit model better than Urban Company’s? Who knows.
What I do know is that when you counter position against an incumbent, timing is everything. You want to hit them when they can’t respond - like when they’re about to IPO.
Think about it. Urban Company has spent years building a lightweight marketplace. Their entire P&L, their processes, their margins - everything is optimised for that model.
Up front costs (relocation subsidies, insurance, e-bikes) are fine for a young startup because they’re baked into the model. For Urban Company, they just can’t increase opex when they have to IPO.
If they suddenly try to match Snabbit’s 10-minute promise, they’d have to:
Change how they manage supply (from freelancers to quasi-employees)
Restructure their entire margin profile
Figure out how to position supply near demand
Turn part-time gig workers into full time zone based employees
Ride hailing and food delivery has tried zone based supply in the past. It helps in higher utilisation when there is predictable high demand. It also costs you more because unless you have a differentiated fleet who is paid more supply is not going to sign up for the same price, without any added incentives.
By formalising workers with eKYC, insurance, and rapid response safety, Snabbit gets ahead of upcoming gig worker regulation. If laws tighten, Urban Company might face issues while Snabbit will be already compliant.
And if Urban Company is thinking about IPO this year, no way they’re making that change now. Yes, they have launched Insta Help, but I assume it is still more of an experiment than changing their entire company. Similiar to how Swiggy and Zomato launched separate 10 min food delivery apps instead of reinventing their entire company to optimise for that delivery SLA.
Counter positioning is about adopting a model that would destroy the incumbent’s economics if they copied it. So they don’t copy it.
But just because you can counter position doesn’t mean your model is sustainable.
Remember Zepto Cafe? Everyone thought 10 min food delivery is the future until Zepto needed to show better numbers for IPO.
Zomato parent Eternal has already ended its Quick 10 min delivery pilot
The same thing could happen to Snabbit. Sure, they’re treating workers well, providing insurance, keeping them in specific zones. But is this sustainable? Can they maintain high utilisation? If there is high utilisation between the same supply and demand, will there be platform leakage?
What really matters isn’t the model itself - it’s where the company is in its funding cycle and what narrative they need to sell.
A challenger who has the capability to counterposition and win marketshare? Sure, why not take an opex heavy approach. A pre IPO company like Urban Company and Zepto? Maybe not.
And this is why I am assuming there will be a lot of entrants in this 10 min services space, like 10 min food delivery a year back.
tl;dr Perception of business model success = Where you are in the funding cycle × Whether incumbents can afford to copy you.

--- END POST: Snabbit vs Urban Company ---


--- START POST: Don't copy TBPN ---
URL: https://manassaloi.com/2025/05/24/dont-copy-tbpn.html

I saw someone tweet we should build the TBPN for India. As someone who’s followed TBPN from day one, let me be clear: you can’t build TBPN. It’s an N-of-1 product.
This reminds me of when the ‘Derek Guy’ was blowing up on Twitter. People said: “If you want to grow fast today, just do what this menswear guy is doing.” However, the problem is: you’re not him. You didn’t grow up obsessed with men’s fashion since you were a teenager. You didn’t spend a decade watching, learning, critiquing, and fighting with people online. You will never have his deep knowledge of menswear, his biting tone, and years of immersion in fashion.
Yes, you can mimic the TBPN format. You can recreate the delivery. You can copy the lighting, the sound effects, you can even create vibe reels. But you can’t copy the taste of John Coogan and Jordi Hays. You can’t fake their love of startups. Showing up every day to do 3 hour live streams. You can’t manufacture the charisma or the humour or the edge.
Similarly, when the All in podcast was blowing up during the pandemic, a bunch of people tried to replicate the format. Logan Bartlett, Nikita Bier, and Zak Kukoff gave it a shot. They created the 3 Cartoon Avatars podcast. I remember half a dozen other copycats too. Unfortunately, it didn’t land for any of them.
Nikita’s humor, which works brilliantly on Twitter, just didn’t translate to the podcast arena. Their dynamic felt forced. The chemistry wasn’t there. Consequently, the whole thing came off like a weak copy of the All in crew.
Ironically, Logan actually did become a good podcaster — but only after the others left. He leaned into what he’s uniquely good at: his takes as a VC, his ability to ask smart questions, and his access to top tier guests willing to come and share real alpha. That’s when his podcast clicked and it became his thing.
The truth is, just because you’re good at shitposting on Twitter doesn’t mean you’ll be good on a podcast. Every platform amplifies different strengths. Moreover, if you’re just trying to copy a format without knowing what your strengths are, you’ll end up sounding like a knockoff.
It’s a common trap: seeing someone else win and thinking you can just “do that.” However, most formats aren’t plug and play. They’re built around people’s lived experience, tone, chemistry, and voice.
And when that’s missing, the audience feels it instantly.
I would not recommend copying TBPN. It just wouldn’t work.

--- END POST: Don't copy TBPN ---


--- START POST: How n8n counter positioned its way into Zapier's market ---
URL: https://manassaloi.com/2025/05/20/n8n-zapier.html

I was reading about Lindy and noticed they chose to build on top of n8n instead of Zapier.
Here is why they did it (based on Tegus transcripts, summary by NotebookLLM):
Scaling Costs: One of the most important considerations was the potential associated cost with scaling their product to a large number of users. The Former Senior Engineering Manager stated that with Zapier, their cost would grow in a linear way based on the number of users or task executions. In contrast, n8n had a potentially higher upfront cost, but they would not charge Lindy for execution (e.g., per single API request). This fixed-cost model was more favourable for projected rapid scaling.
Performance and Latency: Using n8n, which was embedded as an NPM package on Lindy’s own server, resulted in zero latency overhead. Executing a workflow felt like a direct internal call. With Zapier, there would be extra latency involved in calling Zapier servers, which would then execute the ‘zap’ and potentially contact the third-party integrator.
Open Source Benefits: The open-source nature of n8n contributed to the decision. Specific benefits mentioned included:
The presence of a community supporting the product.
Integrations were quite stable, which was seen as a result of the open-source community contributing fixes. If a bug existed, it was likely that someone in the community had already found and fixed it before Lindy would even notice.
The ability to look into the source code to understand how it worked, which was helpful during the initial integration layer development.
Commercial Agreement Model: Lindy entered into an agreement with n8n, paying a fixed annual amount for a couple of years. This agreement primarily covered a level of support, such as potentially prioritising the development of a new integration. This model differed from Zapier’s projected pricing based on tasks executed. Lindy self-hosted the open-source product.
While Zapier was acknowledged as having significantly more integrations (around 1600 compared to n8n’s approximately 600 at the time), both were considered “champions” among the vendors they researched, having the most horizontal integrations.
It is worth noting that the initial technical integration with n8n was considered a “con” compared to Zapier, requiring about two weeks of engineering time to build a specific adaptation layer. Additionally, n8n had less support for federated OAuth compared to Zapier at the time, which was another downside Lindy experienced later. However, despite these points, the advantages in terms of scaling cost, performance, and open-source benefits led Lindy to choose n8n.
That got me curious. I’ve been seeing more and more n8n tutorials pop up on Twitter and YouTube lately. A lot of people already know about n8n, but I think this is a good opportunity to look at how n8n carved out a niche against a dominant incumbent like Zapier.
(I know Zapier has since changed their pricing model, they also want to grow in the age of AI, but this post is not about the current state, it’s about how n8n was able to counter position and grow over the years.)
Here is how n8n counter positioned its way into Zapier’s market.
Zapier was the unquestioned king in workflow automation. For over a decade, it defined the category of no code automation, enabling millions of marketers, founders, and small teams to automate workflows between thousands of apps.
It was slick, simple, and built for non-technical users.
So how did n8n, an open source, developer first tool launched years later, manage to carve out a fast growing niche in Zapier’s backyard?
It’s a classic case of counter positioning. They offered a fundamentally different product for a different audience, and in doing so, changed the rules of the game.
Zapier was built in the early 2010s for the exploding world of SaaS tools. Its pitch was elegant: “Connect your apps and automate workflows.” Whether you wanted to add Gmail leads to a spreadsheet or send a Slack message every time a new Stripe payment came through, Zapier had you covered. No coding required.
But as the years went by, Zapier grew into a closed ecosystem. Its monetization was usage-based, charging per task or per integration. While this worked well for lightweight use cases, it became increasingly expensive and restrictive for complex or high-volume automations.
At the same time, developers were left behind. Zapier was never built for teams who wanted to write custom code, build loops, or integrate with complex APIs. It was simple, and that simplicity became a constraint.
Enter n8n (node automation), a tool that looked similar at first glance with drag-and-drop workflows, but was fundamentally different under the hood.
n8n was open-source. Anyone could self-host it, inspect the logic, and extend it.
Unlike Zapier, which charged per integration or task, n8n adopted a workflow based model, focusing on orchestration rather than atomic triggers. This unlocked more ambitious use cases without punishing users for high volume usage.
You could write JavaScript directly inside nodes. This meant developers weren’t boxed into pre built connectors. They could manipulate data, build conditionals, and integrate with APIs flexibly.
For companies dealing with sensitive data, being able to run their automation on their own infrastructure was key.
This wasn’t just an alternative to Zapier. It was a reframing of what automation could be.
n8n didn’t try to outdo Zapier at being Zapier. Instead, it positioned itself for a different worldview. Zapier targeted non technical users with a closed, cloud only, task based billing model with very limited customization. n8n went after developers, data and infrastructure teams with an open source, self hostable, workflow-based model where you could code if you wanted to.
Rather than attacking Zapier head on, n8n flanked it by targeting the technical community who wanted power and customization, not just convenience.
And it worked. Today, n8n powers internal automation at companies from startups to enterprises. It’s used to orchestrate entire internal data flows, build data lakes, and even replace lightweight ETL pipelines. From a user experience that looks simple on the surface to what’s under the hood, it’s all about developer level control.
The n8n vs Zapier story is a blueprint for any startup looking to enter a mature category.
Don’t copy the incumbent, change the frame. n8n didn’t say “we’re like Zapier but cheaper.” It said “you can own your automation stack, customize everything, and run it wherever you like.”
Start with underserved users. Zapier wasn’t bad, it just wasn’t built for developers. n8n won by focusing on the power users who needed more control.
Monetize differently. Zapier’s per task model made large scale workflows expensive. n8n’s workflow based and open core model let users scale affordably.
Open source isn’t just a feature, it’s a distribution strategy. By being open source, n8n invited contributions, drove word of mouth, and lowered barriers to adoption. It spread like infrastructure tools often do: organically, from dev to dev.
Zapier is still a great product. But n8n showed that even in a mature market, there’s room to challenge the default if you’re willing to think differently about pricing, audience, and product philosophy.
Most people try to build a better version of what already exists. The smart move is to build something fundamentally different for people who have been ignored by the market leader.
Is this real counter positioning?
It’s a fair question. Everyone loves throwing around strategy terms, but most of the time they’re using them wrong.
What is Counter-Positioning?
Hamilton Helmer defines it pretty clearly in 7 Powers: A newcomer adopts a business model or operating model that the incumbent could technically adopt, but doesn’t because doing so would mess up their existing business.
The key insight is that the incumbent can’t easily fight back without shooting themselves in the foot. The newcomer gets a temporary advantage because they’re operating under a better model for their target segment, while the big player is stuck.
So does n8n fit this?
Let’s look at the three ways n8n positioned itself differently:
Business Model Flip
Zapier charges per task. This gets expensive fast if you’re running high-volume automations. In contrast, n8n offers workflow-based pricing and self-hosting options.
Could Zapier ship this? Sure, technically. But think about what would happen if they offered flat pricing or self-hosted plans tomorrow:
Their cloud margins would tank
Their product would become way more complex for their core non-technical users
They’d lose control over their ecosystem and usage data
That’s exactly the kind of trap counter-positioning creates. Zapier can see what n8n is doing, but copying it would hurt their existing business.
Audience Shift
Zapier built for marketers and ops people who want simple drag-and-drop automation. Meanwhile, n8n went after developers who want custom JavaScript, CLI tools, and extensibility.
If Zapier suddenly pivoted to serve developers with scripting capabilities and complex APIs:
They’d confuse their non-technical user base
They’d need to completely rethink their support and sales approach
Their simple, friendly brand would get muddied
Again, the cost of following n8n is too high.
Open Source vs. Closed Platform
This is the big one. Zapier is a closed platform with proprietary integrations. N8N is open source, enabling self-hosting, community contributions, and custom nodes.
For Zapier to go open source would mean:
Commoditizing their core IP
Losing leverage over their partner ecosystem
Breaking their pay-per-task flywheel
Never going to happen.
But is it perfect counter-positioning?
Not quite. n8n didn’t flip Zapier’s profit formula as dramatically as, say, Netflix did to Blockbuster (rental fees to subscriptions) or Tesla did to traditional automakers (dealer network to direct sales).
n8n is still fundamentally an automation tool. They repackaged the value proposition around developer control and self-hosting, but it’s more of a technical re-segmentation than a complete business model revolution.
They flipped three strategic levers that Zapier can’t easily follow without significant pain.
The real test is this:
Can Zapier easily neutralize n8n’s advantage? The answer is no, not without messing up their core business. And that’s what makes it counter-positioning.

--- END POST: How n8n counter positioned its way into Zapier's market ---


--- START POST: Control or surrender ---
URL: https://manassaloi.com/2025/05/19/control-surrender.html

While transitioning from my last job, I took a small vacation in Sri Lanka and that time I was reading two books and thinking very deeply about both. Two books that couldn’t be more different.
One was Michael Singer’s The Surrender Experiment. The other was Robert Caro’s biography of Lyndon Johnson, The Path to Power.
I realised I was basically reading two opposite instruction manuals for life.
Singer’s story is wild. In the 1970s, he was living in a shed in Florida, meditating, building a small yoga temple. He came across a microcomputer. Taught himself to code, wrote some billing software for a local doctor, and before he knew it, he’s co-founded Medical Manager, a company that ended up dominating physician offices across America, IPO’ed in 1997, and got acquired by WebMD for ~$5 billion in 2002.
Michael Singer swore he never had a plan. He wrote two books about it.
I read his book The Untethered Soul a while back, and both The Surrender Experiment and Untethered Soul serve as play books on how to say yes and surrender to the flow of life. He just kept saying yes to whatever showed up.
While he was busy surrendering, some executives were cooking the books. The DOJ came knocking in 2009. He settled for $2.5 million before charges were dropped. Turns out saying yes to everything has its downsides.
LBJ is the complete opposite. This guy had his path to the White House mapped out while he was a kid.
Teacher’s college, congressional aide, House seat by 28, Senate next, presidency eventually. Every move was calculated. Relentlessly executed.
Caro describes LBJ holding meetings while sitting on the toilet because he couldn’t waste a single minute. The man was pathological about control.
In 1941, he made a rare mistake. During the final count of a special Senate election, he relaxed for once, went to his ranch instead of watching the vote count. Lost by 1,311 votes when his opponent’s team stuffed the last ballot boxes.
This never happened again. In 1948, he won his Senate seat after running his own ballot operation with military precision. Kept climbing until he became the President in 1963.
Reading these books in parallel messed with my head. Two guys who couldn’t be more different, and both reached the top of their fields.
Singer’s openness, and the willingness to say Yes without overthinking, created billion dollar opportunities he never could have planned for. But it also let fraud happen right under his nose.
LBJ’s iron grip got him to the presidency.
Steve Jobs said you can’t connect the dots looking forward, you can only connect them looking backward, once you’ve reached some end point in life and can see how the pieces fit together. But I think LBJ would disagree. You can connect the dots forward. You can obsess over them, and you can will that life into existence. But not everyone is LBJ.
Or even Singer.
We can build our life like Singer, one unexpected opportunity at a time. But some of us also crave LBJ’s certainty, his step by step master plan.
I went from tracking each day of my life, doing yearly OKRs, to now just following my gut. Saying Yes to things I am interested in. No concrete plans.
Yes, there is some vague direction, but no real sense of control. Easy to do now after a decade of saving, building a niche network, and developing a skill set, but Michael Singer did it from day one. For me there is this constant struggle between trying to control everything and letting go.
Maybe there’s a time for surrender and a time for control. The trick is knowing which moment calls for which approach.
Both men, Michael Singer and LBJ had opposite approaches, both led somewhere interesting. For now I am in my Singer mode: say yes, fuck around, see what happens.
I’ll run this playbook for a year and report back.

--- END POST: Control or surrender ---


--- START POST: Namma's one click feature ---
URL: https://manassaloi.com/2025/05/18/namma-one-tap.html

When I posted my thoughts on Zepto’s Swap and Save feature, a few people felt I was overanalyzing a simple feature to drive up ad spend. Some even DM’d to tell me that.
But I believe that if you want to get better at building products, you need to think holistically about how a simple feature can evolve into a platform feature and support multiple use cases. That’s exactly what I tried to do with Zepto.
There’s another example: the one click booking on Namma’s Home. This one click feature is a staple across many products. We had it at Gojek, there’s something similar in Grab, and I think Lyft has it too, though I’m not entirely sure.
The point is, features like this are incredibly useful. When you design a single component that can adapt and serve different needs, you’re able to support multiple use cases without taking up more screen space.
Let’s talk about the one click Booking feature on Namma:
How much space do you want to give the feature on homepage?
What info on this card will drive conversion?
Destination
Date
Pickup date
Service type
Payment method and price
Coupon if applicable
Trade-off between:
Conversion on this card
Intermediate screen to verify all info (info that couldn’t be incorporated in this card)
Cancellation of booking because some assumed input was wrong. This could happen later
Now this same card can have different info and serve different business needs.
Namma can predict with high confidence how you are going and what service type you will take. This is the shortcut one click booking. For the power user.
Continue where you left
(very common feature in ecom)
. Surprisingly most ride hailing companies don’t do it. Extremely high ROI. So many times you cancel because of long ETA. Try competitors. Come back and have to go through the same flows again. This one click experience is far better.
Return booking for office commuters. One tap to return home in the evening. Works for cases where you can predict non commute return trips too.
One tap booking for trips you can predict because you have personal info. Let’s say you have access to the user’s calendar.
Take users to popular places (impossible to do, probably doesn’t work, but when we can predict popular events — let’s say some cricket match in a stadium).
Basically, one platform feature that can support multiple uses and can dynamically transform to show the relevant info to drive up conversion.
I believe we were the only player to build a truly delightful one click feature that scaled (though I might be biased). Our competitors had versions like “Continue where you left off,” and another had “Return Trip.” From what I’ve heard, Uber is now finally building its own One Tap.
We were obsessed with handling multiple use cases, and our implementation of one click was delightful. I’ve heard from many users who said they chose our product specifically because the booking experience was so seamless, all thanks to one click.

--- END POST: Namma's one click feature ---


--- START POST: Writer AI over ChatGPT? ---
URL: https://manassaloi.com/2025/05/17/writer-ai.html

Enterprises are adopting Writer AI for several key reasons, particularly when comparing it to general tools like ChatGPT for content creation:
Data Privacy and Security: Unlike public tools, Writer is designed with enterprise data security and confidentiality in mind. One source explicitly states that they are “not going to be uploading like recaps of recordings or transcripts into ChatGPT, but we can definitely do that in Writer”. This is because everything uploaded into Writer is allowed and the information can be retrieved, whereas ChatGPT typically uses publicly available information. Another source highlights that they found Writer natively passed their network and security protocols, which other tools (like Grammarly, which explicitly stated they would scrape every screen they see) did not. This focus on privacy means that a company’s intellectual property and sensitive data remain theirs when using Writer.
Ability to Use Internal Data and Knowledge: Writer allows enterprises to leverage their own internal data by setting up knowledge graphs that can be used as a RAG (Retrieval Augmented Generation) model. These knowledge graphs can be updated dynamically or through regular polling of internal systems like Slack or internal websites. This enables users to ask questions about their own data or internal developments. This capability is crucial for tasks like internal research, understanding what has been tested or piloted within the company, or asking about product features and release dates using internal postings. This is a significant advantage over tools like ChatGPT which typically rely on publicly available information.
Brand Voice, Style Guide Enforcement, and Consistency: A fundamental use case for Writer is ensuring consistent voice and tone across content, aligning with the company’s style guide. For large organisations with thousands of employees involved in writing, teaching everyone to sound like the company is impossible. Writer’s style guide controls and plug-ins provide tools at the point of need to help achieve this consistency. Implementing style guides and terminology in Writer is a significant amount of work upfront, but crucial for maintaining brand standards across the enterprise.
Enterprise Focus and Scalability: Writer is built from the start for the enterprise. This includes features like multiple style guides, robust implementation support, and enterprise-level security. While other tools (like Jasper) may have started with smaller clientele, Writer specifically targeted the enterprise market. This focus means Writer is designed to handle the complexity and scale of large organisations.
Integration into Existing Workflows: Writer offers plug-ins and integrations for commonly used enterprise tools such as Figma, Chrome Documents, content management systems, Salesforce, internal databases, Outlook, desktop apps, and specific text fields within web pages like Jira tickets or WordPress. These integrations allow the AI tool to be “at the point of need” and “right there at their elbow” while users are in the middle of a task, providing suggestions and access to AI capabilities seamlessly. This makes it significantly more convenient and versatile than tools that might be separate web apps with clunkier interfaces.
Beyond Basic Content Generation: While content creation is a shared use case, Writer is used for a variety of specific enterprise applications. This includes creating documentation for DevOps teams, generating content within design tools like Figma, training chatbots for employee guidance, supporting internal research using knowledge graphs, generating high-quality templatised briefs for external agencies, and even generating fully coded digital assets like HTML files using APIs. These applications often require integration with internal systems and adherence to specific brand and compliance guardrails.
Cost-Effectiveness and ROI: Despite the challenge of funding the platform fee in some decentralised organisations, Writer is seen as cost-effective compared to hiring additional full-time employees or freelancers. One internal estimate showed a saving of approximately $1.5 million by using Writer compared to the time it would have taken employees to do the writing manually. The ROI is assessed by evaluating whether the tool compensates for scale or the need for a new hire. Although user costs may increase in the future as AI tools reach scale, the current cost per user is considered comparable to other business tools, with significantly more power.
Enabling Non-Technical Users: Writer is described as putting a “very powerful and understandable tool” in the hands of non-technical people to learn and drive AI solutions for their teams. It aims to help non-technical users leverage and learn AI. The UI is intuitive and easy to use. They also offer resources like an AI studio with training to help users create their own apps.
Specific Enterprise Needs: Writer addresses specific enterprise needs that general tools may not, such as replacing tools like Grammarly which did not meet security and data handling requirements, handling complex style guide implementations, and managing user access via SSO.
In summary, while tools like ChatGPT are useful for general content creation, enterprises adopt Writer AI due to its enterprise-grade security and privacy features (particularly regarding internal data), its ability to ingest and utilise proprietary internal data via knowledge graphs, its focus on enforcing brand voice and style consistency across a large workforce, its deep integration into enterprise workflows and tools, and its application to a wider range of specific enterprise use cases beyond basic writing, often enabling non-technical users to leverage AI effectively and demonstrating clear cost savings.
[This is a NotebookLLM summary of Tegus Transcripts.]

--- END POST: Writer AI over ChatGPT? ---


--- START POST: Why are enterprises adopting Pigment? ---
URL: https://manassaloi.com/2025/05/16/pigment-adoption.html

Based on the provided Tegus transcripts, enterprise clients are adopting Pigment, despite it being a newer startup compared to larger players like Anaplan, for several key reasons:
Firstly, many clients expressed dissatisfaction with legacy tools like Anaplan, Adaptive Insights, Planful, SAP, and NetSuite. Common pain points included a lack of flexibility, clunky or outdated interfaces, and difficulty scaling with changing business models. Some solutions were perceived as too rigid, forcing the customer to fit into the tool’s structure rather than adapting to their needs. Others required paying for external services or additional implementations for new features, which was undesirable for companies wanting to be primary stakeholders. Long implementation timelines and negative experiences with third-party implementation partners from competitors were also deterrents.
In contrast, clients chose Pigment due to:
Flexibility and Adaptability: Pigment is described as a “blank slate” tool that allows companies, particularly those with mature processes, to build exactly what they need. It is highlighted as highly flexible, especially for companies undergoing constant change or needing to adapt their models quickly. The ability to pick and choose when to use certain dimensions and levels of hierarchy is seen as a significant advantage over tools like Planful. This flexibility is crucial for rapidly growing companies or those with evolving business units and structures, making tasks like reshuffling budgets much easier than with Excel.
User Experience and Interface: Pigment’s user-friendly interface and visual design were frequently praised. It strikes a good balance for both technical and nontechnical users, making it easy to “sell the tool internally”. For users accustomed to spreadsheets, Pigment’s interface, while different, is perceived as having a low barrier to entry and a smaller learning curve than some competitors like Anaplan. This ease of use significantly influences adoption. especially by non-finance teams.
Strong Modeling Capabilities and Features: Pigment offers robust database modeling, which is valuable for handling large amounts of data and creating dynamic reports like filtered P&Ls. Features like easily creating new dimensions and adding complexity or granularity to models are seen as core values. Scenario analysis and version control are also highlighted as valuable features. For some, the cohort analysis and forecasting function is a standout feature, automating previously manual tasks.
Integrations: Pigment offers a range of integrations with other critical systems such as ERPs (NetSuite, QuickBooks), HRIS systems, CRM (Salesforce), and data warehouses (Snowflake). These integrations help centralise data and act as a single source of truth. The ability for FP&A analysts to set up new integrations themselves without needing the Pigment team is also a plus. Pigment’s willingness and speed in building specific connectors requested by clients were particularly impressive.
Implementation and Support: Pigment’s approach of doing implementations in-house was highly valued, especially compared to competitors who use third-party partners. This in-house team was seen as more motivated and aligned with ensuring customer success. Although implementation can be a significant upfront investment in time and resources. potentially taking longer than some competitors, the co-building process teaches customers to be self-sufficient for future maintenance and improvements. The support team is described as incredible, active, helpful, and responsive.
Value Proposition and ROI: Clients perceive a strong ROI from using Pigment, primarily through significant time savings by automating manual tasks, allowing teams to focus on more strategic work. This efficiency gain can effectively save the cost of hiring additional team members. Pigment also provides greater transparency and visibility to executives, helping them understand the financial impact of decisions. While not always the cheapest option, some noted its competitive pricing relative to key competitors like Anaplan, with one client citing a 30% price difference.
Sticky Solution: Pigment is described as being “quite sticky”. Once implemented and integrated into core processes, switching to another platform would require significant effort, time, and resources to rebuild models and migrate data. This stickiness reinforces the long-term value proposition for companies that have invested in the platform.
Regarding the concern of Pigment being a startup, some clients acknowledged this but felt reassured by the founders’ experience, the company’s ambition, responsiveness, and willingness to quickly build features. While some potential customers might hesitate due to Pigment’s startup status, the positive experiences of early enterprise adopters helped build confidence. Being an early large US customer, for instance, resulted in dedicated support and a willingness from Pigment to
“bend over backwards”.
Clients who chose Pigment often did so because they felt it was the “next-gen” solution that better met their evolving needs than the more established, sometimes slower-moving, legacy players.
[This is a NotebookLLM summary of Tegus Transcripts]

--- END POST: Why are enterprises adopting Pigment? ---


--- START POST: Zepto's swap and save ---
URL: https://manassaloi.com/2025/05/15/zepto-swap-save.html

Zepto is now suggest swapping expensive items in your cart for cheaper alternatives.
This isn’t your typical up-sell or cross-sell. It’s actually a “down-sell” through cart swaps. They’re actively encouraging you to spend less money on certain items. Seems counterintuitive.
The UX is super simple too. You see an item, they suggest a cheaper alternative, one tap and it’s swapped. They’re showing this after you’ve built your cart because that’s when price sensitivity kicks in - when you see the final amount.
Why I think they might be doing it:
Testing price sensitivity - They can gather valuable data on how willing users are to switch brands based on price. This is gold for their algorithms.
Moving unsold inventory - Got items approaching expiry date? Get them into carts through swaps.
Clearing overstocked inventory - Rather than discounting everything, target specific overstock items through strategic swaps.
Boosting preferred sellers - If you’re a new challenger brand launching on Zepto, there’s a clear opportunity to accelerate your growth. Zepto can offer you higher sales in exchange for better commission terms. As a preferred seller, you’ll benefit from stronger visibility and improved placement. Additionally, Zepto can leverage Swap to drive up your daily orders, helping you build early momentum and gain traction faster.
Private label -  Tomorrow Zepto will nudge price sensitive users towards their own private label.
Each line item matters - Back at GoMart, Gojek’s groceries delivery product, we used to see drop-offs when packaging fees felt bigger as a proportion to the cart. Users judge the entire order at each line item.
The switched product could be a sponsored product - Zepto reduces AOV by ~5%, impacting their margin on the order by 5%* 10% (0.5%), while the ads revenue might be ~1%. A friend told me about a payment switch in another on demand company, which essentially acted as a sponsored payment product, where if you switched to another bank and did more transactions through the payment method of the bank the on demand company would make more. Brands can bid for these sponsored spots.
Increasing margin, Margin over AOV - Sometimes a lower-priced item might actually have better margins. In grocery especially, small margin improvements compound significantly at scale.
Building trust - This is perhaps the most underrated benefit. When a company actively helps you save money, it creates tremendous goodwill. Users feel like the app is on their side. This also helps counter the narrative around the dark patterns they are accused of deploying across the app.
Avoiding you cross some price threshold - Psychological thresholds matter a lot in commerce. When your cart hits certain price points (₹500, ₹1000), conversion drops. If a single expensive item pushes you over that threshold, you might abandon the entire cart. By suggesting a swap to keep you under that threshold, Zepto potentially saves the entire order.
Conversion to single cart - I don’t use Zepto, so not sure this is relevant, but on Swiggy I sometimes end up with two deliveries because one item lives in a different store. If the small second cart is only there for a pricey cone, I drop it. A swap keeps everything in one basket so the order feels worth the delivery fee. This can be one a way to solve it.
I believe this feature helps with retention. When users feel an app is helping them make smarter purchases rather than just extracting maximum value, they’re more likely to return.
The beauty is in the simplicity. It doesn’t feel intrusive or like a hard sell - just a helpful suggestion that the user can easily ignore.
[Edited by Claude, my editing buddy. It’s time it starts delivering ROI on my $20 monthly spend. It can’t just be a personality hire anymore.]

--- END POST: Zepto's swap and save ---


--- START POST: Ask for more ---
URL: https://manassaloi.com/2025/05/11/ask-more.html

One thing I always tell my founder friends is to get their connections to do more. Engaging people who are incredibly busy, but who can truly help you, is an art.
I remember how much I used to ask Sameer, CEO of CouponDunia, to leverage our connections at Times Internet to seed the CPI deals when I started CashBoss. Later, when I was working at Gojek, I would frequently ask my boss to help prioritize projects from the top, get buy in from others, and rally support from different teams to keep things moving.
Of course, I knew the CPO at the time was extremely busy. So, what we would often do was draft the exact email we wanted him to send in order to get support for key projects.
Additionally, I’m always surprised by how little founders actually use their board members, VCs, or even fellow founders to land their first few customers.
Take Wiz, for example, one of the best startup exits in recent times.
They leveraged Doug Leone, arguably one of the busiest VCs ever, to essentially act as an SDR
.
Furthermore, here are some excerpts showing how many customers chose Pigment specifically because of the support and influence of their investors and board members. These are three examples I found out of a dozen transcripts I’ve read, so roughly 1 in 4. Yes, small sample size, but you get the point.

--- END POST: Ask for more ---


--- START POST: Why starting up in India is so hard right now ---
URL: https://manassaloi.com/2025/05/10/starting-up-hard-vc-founder-mismatch.html

I have been talking to friends who have started companies, I am an unpaid intern in half a dozen of these companies, and I also meet quite a few VCs thanks to “lets exchange notes” catchups, and I can see a stark difference in how VCs used to evaluate founders and markets now compared to a few years back. Previously in SaaS, people would assume that because in India, the team sizes would be lower and costs would be lower, you could price your software lower. This would enable you to compete with foreign SaaS players, capture significant Indian market share, and grow. Maybe you could even compete in the US like Freshworks did.
But now that narrative is over, or at least dying, and many VCs want Indian founders to explain how they will establish a successful US GTM strategy.
SaaS investing is at its lowest (?) globally. The narrative has shifted to AI. And AI agents. Earlier you could argue that your opex will be lower due to lower salaries in India, even though infra cost would have been the same (AWS), but in today’s time the narrative is not lower salaries, but having the fewest employees. Especially in product development. As much so that people are actually showing fewer employees in Linkedin because VCs have started measuring their portfolio companies’ productivity. And sending them memos on how to be AI first. India was always a hard place to sell SaaS vs the US.
The value of an Indian’s time is probably 1/40th of that of a US person. Of course, you can argue this isn’t true for high-value workers. An Indian software engineer might earn around 30 lakhs, which is approximately 35,000 US dollars, while in the US, it might be 150,000, so it’s only ~5 times higher. But people value their time very differently.
For example, if you’re selling some QA automation test suite to someone in the US, they will say, “Sure, this product is saving time for me, and I can’t hire an infinite number of people. I can’t solve problems by throwing people at it. As long as it’s giving me ROI, I would definitely buy it.” Meanwhile, Indians will be thinking, “I can just assign more people to this task.” This approach is very common in India. That’s why many Indians are tired of selling to Indian companies, especially SaaS products. Yes, your sales team will not cost you what a US Sales team would cost, but in India time to close deals will be higher and your ticket size would be lower too. India is a cost advantage market and a breeding ground for lean SaaS is no longer sufficient when thinking about SaaS.
I know some people will get upset when I mention this, including some of my friends. But this is what most VCs want to hear: What gives Indian founders the right to win in the US versus the average Stanford graduate?
If you eventually wanted to sell in the US, earlier you would say, “There is Freshdesk, which is cheaper and almost as good, so why pay for Zendesk.”
But when it comes to AI, if you are an Indian founder wanting to figure out US go-to-market, compete in the US, and have some AI solution for customer support or similar applications, the VCs will ask, “What sustainable repeatable customer acquisition playbook do you have that makes you win in this market?” What’s your GTM wedge? Will you do cold outbound? content? partnerships?
What unfair insight do you have?
Are you just another feature or do you replace a budget line?
Previously, at the pre-seed stage, VCs would simply back founders who were targeting a large market. Founder pedigree is all that mattered. At seed stage, they might look for some signs of product-market fit. But now, people want to see a detailed GTM playbook and much more depth. Investors are concerned about Indian founders not being able to figure out how to sell in the US, thereby capping the their growth.
In the US, AI companies (in every domain) have probably raised millions of dollars. YC invests in dozens of them every batch. So how do you compete in overheated markets?
I know a founder who is building a product in vibe coding that is better than Lovable. Anyone I have asked to test the product says it is probably the best vibe coding product available. But the competition is Lovable, which has scaled quickly to 40 million in annual recurring revenue.
Again, the question becomes, “How can you compete with Lovable and Bolt?” You need to run paid marketing campaigns, create a compelling narrative, and do far more as a later entrant. Your product being 15-20% better probably does not help enough. If you say the market is big, and even 10% of that market can lead to meaningful ARR, it won’t work too, because the VC will ask for every incremental user evaluating Lovable vs your product, how would they know you even exist. Second why are you in consideration. And finally why would they choose you over Lovable or Bolt. The only option is to raise big. Be as unhinged as the Cluely founders. Become generational marketers. And learn how to get cheap distribution and always be top of mind. Most founders are introverted. They won’t even put out their funding PR. I know, I try my best to change them. But again I am an unpaid intern after all.
You have to tell a story of how you will be able to win against Lovable. Just being incrementally better does not help in today’s competitive landscape. US GTM is hard. A VC friend was joking that you have to turn yourself into someone you are not. Embed yourself in networks in the US. Hustle till you can talk US football (not Soccer) with your potential clients. Say the right things. How can you do that as a founder who probably has not even set your foot in the US? Clay took years to reach their revenue. So did Figma.
No Indian VC will wait for you like people did with Clay and Figma in the US.
I know so many founders sitting with 200K USD ARR who are trying to figure out the next steps.
VCs will say “Hey look at this US company that grew to 20 million ARR with 10 people in 12 months”, and ask you to spend money, and 3 months later you will realise they got cold feet because of the sector heating up, change their thesis, and say good luck to you and stop responding to your mails. What is worse is the borrowed conviction. A lot of these VCs won’t even use the products of their portfolio companies, so they are just FOMO investing. It is an extremely tough environment out there. And I sympathise with both my founder friends, but also VCs who will have to figure out their investment strategy for the future. Get ready to answer what is your repeatable US GTM playbook in your seed pitch itself. One off contracts, even in the US, won’t help much. You have to show how you can reproduce your sales. ZIRP is over. The only thing we can do is grind.

--- END POST: Why starting up in India is so hard right now ---


--- START POST: OpenAI buys Windsurf ---
URL: https://manassaloi.com/2025/05/09/openai-buys-windsurf.html

People are discussing why OpenAI acquired Windsurf on x dot com. It’s clearly not for the revenue. A $100 million revenue stream won’t add much value to OpenAI, which is already valued at $300B. While the Windsurf team is certainly talented and acquiring them is beneficial, I believe the main reason is that while OpenAI has become the default application for general chat, they’re lagging behind Claude and the rapidly improving Gemini models when it comes to coding capabilities.
How does OpenAI catch up? When building better models, they typically conduct Reinforcement Learning from Human Feedback (RLHF) through partners like Mercor and ScaleAI who help with labeling tasks and providing feedback on outputs of these models. Imagine you are trying to generate iOS code, you would need a lot of iOS experts from Mercor, Scale AI, and Turing AI to give you feedback on the code generated. There is not enough iOS code out in the wild for foundational models to train on. This becomes expensive and consists of repeated transactions with the human labellers who are not even in a direct relationship with the foundation models and sourced from these third parties who source these experts. OpenAI of course don’t want these operational expenses (additional head counts of experts) on their balance sheets, nor do they want to continually go through third parties that will cut into their margins.
The best approach is to acquire software that enables an ongoing feedback loop. Currently, when people use ChatGPT to generate code, OpenAI receives no feedback about whether users applied the code, used it, what iterations they made, or if they even pushed the recommended code to GitHub. There’s no feedback loop - OpenAI provides output on ChatGPT client and there is no accept, reject button, no response by the user on whether it served the purpose. Users might not even say “thank you, this worked” because that costs additional tokens. And Sam Altman himself has been complaining about how much money OpenAI burns because of these “Thank you”s in general conversations.
With Windsurf, users interact with agents that rely on foundation models and providing continuous feedback. The system tracks user satisfaction with responses and subsequent actions. More importantly, since Windsurf is a wrapper around multiple models, by acquiring Windsurf, OpenAI gains feedback not just on their own models but also on competitor models. This creates a permanent data and feedback loop that will help build better coding agents.
Amjad from Replit has suggested that the key to achieving AGI is having the perfect coding agent, as it can code whatever you want and eventually self replicate. Don’t remember the source though (where he said it, apologies if I misremember). Foundation model companies know this. Claude now has Claude Code, and OpenAI has launched a standalone coding product recently that you can run from your terminal called OpenAI Codex CLI.
However, these products might not be sufficient because they’re terminal based and targeted mostly at professional developers. Yes, Pro devs use IDEs too, but my point is that currently what foundational models have shipped are terminal based coding agents. Windsurf and Cursor have access to much more data because their user-friendly interfaces attract not just professional developers but also novice coders, “vibecoders”— essentially the entire spectrum of developers. This results in significantly higher volumes of data and feedback on response quality. I believe an IDE with the largest base of coders will always outperform the current iterations of Claude Code and OpenAI Codex when it comes to data generation and feedback loops. After reviewing dozens of transcripts from companies like Mercor and ScaleAI on Tegus, I’ve understood the costs these foundation models and application layer products incur to ensure optimal performance in specialised tasks like coding through human-in-the-loop feedback.
Coding is a P0 use case for foundation model companies, and it seems inevitable that Anthropic will also try to acquire a coding IDE. Sundar Pichai following the Cursor account on x dot com has led to speculation that Google might eventually acquire Cursor. There will be significant competition for Cursor though, with their impressive $300 million in revenue, and recent 900 million raise, they likely won’t sell cheaply anytime soon.
Google has recently released their own coding IDE, but I doubt people will adopt it given Google’s history of shutting down products that don’t achieve their desired scale.

--- END POST: OpenAI buys Windsurf ---


--- START POST: ChatGPT Voice to text ---
URL: https://manassaloi.com/2025/05/08/openai-chatgpt-voicetotext.html

I don’t like the new OpenAI voice-to-text input.
The earlier version had a more thoughtful flow:
Active listening indicator: You saw a timer and microphone animation, which gave feedback that it was capturing your voice.
Transcription preview: After you spoke, the transcription was visible before sending. You could edit any mistakes.
Explicit submit step: You were in control of when the message was finalised and sent.
Now:
There’s no clear indication of how long you’ve been speaking. It just says listening, then the state changes to transcribing, and then it just blasts off the query.
It auto sends the transcript without confirmation. And once the response comes you realise it could not understand your accent and wrongly transcribed like 5 critical words that changes the entire context of the query.
If the model mishears you, you can’t correct it unless you manually redo the entire message. Or correct after ChatGPT responds to your first message with typos.
And God forbid it throws errors like “I didn’t catch that”, especially during longer recordings, there’s no option to retry, and you’ll have to repeat everything you just said.
This “faster but dumber” flow works if everything goes perfectly, but when it doesn’t, it’s frustrating. Claude does something similar. No intermediate correction step, does not let you correct the transcription. Thankfully it still shows the timer.
Some PM at OpenAI probably optimised for speed and simplicity (1 tap voice interface), without realising voice messages are different from voice to text query sent to an LLM. The new UX assumes high transcription accuracy and fast LLM turnaround, which isn’t always true, especially with accents, ambient noise, and longer thoughts.

--- END POST: ChatGPT Voice to text ---


--- START POST: Wander ---
URL: https://manassaloi.com/2025/05/07/wander.html

Wander’s Counter-Positioning Against Airbnb & Its Self-Imposed Constraints.
Disclaimer: Never stayed in a Wander, but have been following the company for years ever since Kyle Tibbitts (a marketer I respect) joined as the CMO.
If you listen to TBPN, you must have heard Jordi Hays and John Coogan shout “find your happy place” enough times to google Wander and see what it is. Now they are raising a Series B and the size going would be hit soon on TBPN I guess.
Let’s get back to the real topic: Why I love Wander and why it is another example of counter-positioning done well.
The vacation rental market is interesting. Let’s talk Airbnb. On one hand, you have Airbnb, which has become a verb at this point. On the other hand, you have thousands of horror stories of people showing up to Airbnbs that look nothing like the pictures. Surprise cleaning fees. Hosts who don’t respond. Hard to find locations. Low touch experience at the price of a hotel.
Wander has been deliberately going after this problem. They are a counterposition to Airbnb. They have created a ‘hotelified’ alternative to Airbnb for the top 1%. They’re curating the top 1 percent of vacation homes, professionally managing each one to guarantee consistent, luxury-grade experiences. No surprises, no mismatched listings, no unreliable hosts. This is what Oyo was supposed to be in India. But couldn’t.
Wander is something Oyo could have been if it was a luxury product. “70% of Wander guests are affluent, with net worths exceeding $1M,” according to Wander’s website. “Wander’s audience is primarily composed of CEOs, founders, executives, software engineers, and individuals working predominantly in the tech sector.”
What makes them interesting is their vertical integration. Unlike Airbnb, which is just a marketplace where anyone can list their property, Wander owns and operates everything end to end. Again, like how OYO promised. They buy the properties. They renovate them. They furnish them. They handle the bookings. They manage the properties with their own team.
This creates a moat that Airbnb can’t easily cross without completely changing their asset-light approach. Airbnb’s strength is also its weakness: with millions of properties, they can’t control the experience.
[Check sentiment on the Airbnb experience over the last few years on Twitter.]
There’s an obvious tradeoff. By purchasing, renovating, and operating each property itself, Wander takes on all the principal risk. This capital intensive model makes it harder to expand quickly and limits their selection compared to Airbnb.
It’s a classic case of self-imposed constraints. While Airbnb can add new hosts at internet speed with near zero cost, Wander has to buy and upgrade each property. They’re deliberately capping their total market size in exchange for higher unit economics, stronger brand loyalty, and way better guest satisfaction.
Every property has the same hotel-grade amenities: super-fast Wi-Fi, private pools or hot tubs, gyms, and 24/7 concierge service. No wonder Wander’s guest satisfaction is high (see the testimonials on their site).
They’ve built something called WanderOS, which centralises all property controls into a single app. Door locks, lighting, temperature, even Tesla access. Yes, they provide a Tesla at all their vacation homes.
This appeals to travellers who want the freedom of a private home but demand the reliability, transparency, and service levels of a luxury hotel.
They’ve also got an AI-assisted concierge team that handles guest inquiries with site-specific data, automatically creating maintenance tickets or escalating to humans when needed. This tech investment lets them manage dozens of homes with fewer property managers, delivering consistent quality with higher margins.
Wander isn’t doing the 1% improvements to Airbnb’s model. They’re creating a step function change by completely rethinking the approach.
They’ll never match Airbnb’s scale, but they don’t need to. They’re building a profitable, defensible niche in the high-end segment of the $1.3 trillion lodging industry.
It’s a classic example of counter-positioning. They’re building something that their bigger competitor can’t copy without undermining their own business model.
And they are also capping their growth by constraining their growth.
And I love these kinds of bets. Let the big platforms scale to infinity with lower margins while carving out the premium segment with better economics and happier customers. Not every business needs to be a winner-take-all marketplace.
(To deal with the capital constraints, they launched Atlas in 2022, which they call the world’s first vacation rental REIT. This moves property acquisition costs off their balance sheet while letting them keep operational control. Smart way to unlock investor capital without dilutive funding. You can read the details in an amazing Deep Dive done by Packy McCormick way back in 2023.)
[Post created by thought dump on ChatGPT and then verifying some of the details on Packy’s post and Wander’s own website. Then edited with Claude because Narayana knows I don’t have the patience for it.]

--- END POST: Wander ---


--- START POST: Rapido enters food delivery ---
URL: https://manassaloi.com/2025/05/06/rapido-food-delivery.html

Why Rapido moving into food delivery make sense:
2W is still their core revenue generating business, note revenue not GMV, and we all know the uncertainties around 2W regulations. It makes sense to not be dependent only on 2W mobility and have more revenue lines
When it comes to pricing strategy they say that you should gradually raise your price until your target customer literally laughs — that “laughter” marks the upper bound of what the market will bear. Food delivery businesses have been doing the same. They have been layering more and more fees over time. And now it has reached a state where users are unhappy, restaurants are cribbing about commission, and order growth has slowed. So the WHY NOW is clear for Rapido. They have executed this playbook in 3W and 4W ride hailing businesses and have got meaningful marketshare.
Food delivery business has less regulatory uncertainty. Far fewer regulations too. Restaurants have been doing food delivery for ages. On demand platforms have made it a scalable VC backed business. This means that you have it easy in a lot of things. Driver onboarding becomes easier. Food delivery is moving goods, and not people. So fewer steps in onboarding drivers.
Fewer steps, easier onboarding, faster time to get onboarded to the platform and start earning means that driver supply can be increased and later the same fleet with additional onboarding steps can start doing ride hailing too.
Every company is struggling with driver acquisition and retention. This means the more you help your drivers be occupied, the more you help them earn, the higher the likelihood of retention. You don’t want your drivers to be busy only during peak office hours. You want them to be utilised during lunch hours too. A lot other drivers multi platform anyway. So a driver churning midway during the day because they get busy with other delivery apps might mean they not coming back to your app later. This means supply retention for the entire day becomes harder.
More use cases for your users. Once you acquire them, you can spread the CAC across more products. CAC payback time decreases. You can also afford to pay more CAC because your LTV becomes higher, as users’ usage frequency becomes higher as they now are using multiple products.
Rapido has raised a big round recently and they have money in the bank. While Swiggy and Zomato are both public companies and won’t be able to cut their take rate because they will want to show revenue growth over the next few quarters, especially Swiggy which is quite new to the public markets. Another reason for WHY NOW.
Why it won’t be as easy for Rapido to win marketshare in Food delivery as 3W, 4W ride hailing:
3 sided marketplaces are far far harder to run than 2 sided. Operational complexity increases by a lot.
Onboarding restaurants require a sales team. You need more Ops people. Your Opex increases by a lot.
Most food delivery businesses anyway don’t make money in the food delivery part. 25% take rate leaves extremely low profit margin (if any). So how do they make money? Ads. For Ads you need enough demand. Enough users. You need a merchant ads team, need to build your ads platform. Ads can only be run at scale. So it will take sometime for Rapido to make money from this business.
Delivery time matters. Reliability matters. When Ola acquired food panda they were giving ice cream in 9 Rs. But what is the point of ice cream for 9 Rs if it comes in 1 hour and in a melted state. If you don’t get a rickshaw you cancel. Booking conversion rate for most ride hailing companies in India will be close to 50%. Like you reach your destination 1/2 of the times you press the ‘Book Ride’ button. Here you need 99.99% reliability. You need the food to arrive whenever you order. Else you churn.
You can’t pool orders when there is not enough demand. The only way to cut delivery cost is by pooling orders. Yes, it is not fun to see your delivery person deliver two orders, and yours being the 2nd one, but without that cost of delivery will be even higher. Running a reliable profitable food delivery business is playing the on demand marketplace game at Hard difficulty.
This means you need to have enough margin to run the business well. Subscription just does not let you do that. Remember not 2 sided, this is not just about drivers, you have 3 stakeholders now: Customer, Driver, and the restaurant. So you can’t just change your business model, attack the take rate of the incumbents, and hope this is enough to gain meaningful market share.
It will be interesting to see if Rapido can make a dent in the food delivery space. Even global behemoths like
Amazon have tried and failed in the past
.

--- END POST: Rapido enters food delivery ---


--- START POST: Obsessive learning and reflection ---
URL: https://manassaloi.com/2025/05/05/learning-obsession-reflection.html

My ex boss used to joke that I have a really good memory. Like I remember every little detail from our conversations months ago. The truth? I’m just obsessed with documenting everything. Absolutely everything.
This isn’t normal. I wouldn’t recommend it for most people. But since people keep asking about my learning and reflection process, here’s how I do it.
Not once, just at year end like normal people, but every single day.
The do-learn-improve-do cycle runs at every level. Every interaction, every day, every week, every month. It’s borderline crazy, but it works for me.
After any significant meeting with my boss or senior folks in the org, I immediately write notes. Not just what we discussed, but how they communicated. How they approached problems. How they dealt with pushback. I have notes on tons of senior people. It’s like studying them under a microscope to learn their methods.
When I was a PM, I had this document called “How to act like an SPM”. Every night I’d review whether I actually behaved like one during the day. Before I even started leading a product group, I created “True HOP Principles” - not just wanting the title of Head of Product, but actually performing like one. That’s why I called it “true”.
I maintain a “Don’t Do” doc. If I make a mistake, it goes in there. Like a shame list of work mistakes I never want to repeat. Even major decisions like staying at my current company happened after extensive analysis and documentation.
Any activity gets documented. Poker games? When I started playing Poker, I used to reflect on every hand played.
What worked, what didn’t, what I should have done differently.
For monthly tracking, I follow Sam Altman’s philosophy that “days are long and decades are short”. Every month I document wins, losses, and key learnings. What moved forward, what got stuck. There’s the annual reflections too.
You can read reflections from previous years on this blog.
I use the Streaks app to track daily habits across health, family, work, and miscellaneous categories.
Writing helps too. Twitter threads, blog posts - they force me to clarify my thinking. Teaching others through mentoring sessions makes me articulate lessons I’ve learned and mistakes I’ve made.
Look, I get it. This level of documentation seems insane. But here’s the thing: memory fades, patterns get lost, and lessons disappear if you don’t capture them. My “good memory” is just good note taking.
You don’t need to go this extreme. But if you’re serious about growth, start somewhere. Maybe just end each day with three bullets: what went well, what didn’t, what you’ll do differently tomorrow.
The real insight isn’t in the documentation itself. It’s in the patterns you start seeing when you look back at weeks or months of notes. That’s where actual growth happens.

--- END POST: Obsessive learning and reflection ---


--- START POST: David vs Goliath ---
URL: https://manassaloi.com/2025/04/28/david-goliath.html

I had been trying to ignore
this tweet
since morning. I don’t come a lot on Twitter nowadays.
But this topic is very close to my heart because I literally worked for a company that used David vs Goliath marketing when they launched in Singapore. You can google this. I’ll tell the story so that you can understand what makes business strategy work beyond vanilla oh startups grind hard, how you fight against incumbents, and how you counter position and find gaps in a market.
Let’s go back to the year 2018. Uber had left south east Asia and the leading ride-hailing company there had almost become a monopoly. They decided to devalue their reward points because, of course, they were a monopoly and could do whatever they wanted. Their margins were fat. And they would have monopoly pricing power. In that time, you had that chance to come and disrupt the market.
So, TIMING matters.
WHY NOW needs to be clear.
 
So, what do you do? You position yourself as David vs Goliath. You say, “Hey, don’t worry. We are here. We’ll support you. We’ll fight for the masses. We’ll launch a service which is just as good. But we’ll always be for the community, for the driver, for the rider.” And it was the right narrative. We were always the brand that had more love. We were not as ruthless, which you can debate whether it was right or wrong. But we were definitely the “people’s champion” kind of brand. The leadership truly cared.
But over the years, we were not able to WIN (define however you want) in Southeast Asia. And we have even exited countries. That’s where the interesting part comes in about David vs Goliath, small startup vs incumbent. All of that does not matter. 
What matters is the long-term strategy. What is the counter-positioning strategy? Are you making some change in business model? Do you have the right to win demand? Maybe you have the right to win supply. Maybe you are creating a new category or creating a new position around that category.
Example. Zepto coming in with 10 min delivery. Winning the quick commerce narrative initially. They owned their supply while everyone else was relying on freelancers. Heavy capex and opex model vs incumbents light weight business model.
NEW POSITIONING.
MORE CONTROL OVER SUPPLY.
MORE UTILISATION OF SUPPLY BECAUSE OF MORE FULL TIME WORKERS THAN FREELANCERS.
HIGHER OPEX AND CAPEX, AND WHILE INCUMBENTS FIGURE OUT IF THIS WOULD EVEN WORK, YOU WOULD END UP TAKING SIGNIFICANT MARKETSHARE BY THEN.
Because sure you call yourself the David vs Goliath and you launch with the same product, same margin structure, same business model, acquire similar supply, go after the same demand, and just play on the NARRATIVE, but that does not work in the long run.
NARRATIVE DOES NOT WORK LONG TERM.
So what should we have done differently?
What Namma did. Namma came far later, but attacked the margin structure of Ola and Uber. There are companies in South Asia which have been doing the same playbook from far earlier. There’s this company which launched by saying, “We know that all the ride-hailing companies are expensive. But for the high price point they have highly reliable products. They are premium products. Your car arrive on time. You don’t have to wait longer. And the quality is high, but for that you pay a lot too.”
But it is also beyond the price point that most college students and economy-minded people can afford.
Then what do you do? You go and say, “If you’re willing to wait 10-15 minutes, you can get your car, but cheaper. It will probably be priced at about 50-70% of the most reliable ride-hailing products. You just have to wait longer. Yes, the drivers might cancel sometimes, but you have to be okay with it.”
Especially in Singapore where supply is capped, and other strategies won’t work, you can seed your marketplace supply by cutting commission by a lot.
When you change business model or commission structure, you can do multiple things. The main players are at 25% commission because they want to run a highly reliable marketplace. So you say, “We have 5% commission because we are not a big company. We can afford to have lower revenue initially.” And it is almost like a vampire attack on the supply of the bigger companies. And because they can’t counter immediate to protect their margin, supply moves to you. Not enough that you get high reliability initially, but enough that people can at least get their car in 10 minutes. And you charge 50-60% of the price point.
So what happens? College students move. Economy-minded people move. And then over time, there is enough demand that organically supply also comes. It’s not just about low commission anymore.  This strategy does not work if you want uncapped marketshare and revenue.
You can’t ever get to 50% market share because a lot of people still want high reliability. They want better cars and drivers. And the established players will always play with driver incentives to ensure high reliability and prevent their best drivers from churning. Customers also want customer support. Better safety. They want  better service. More options. But then you’ll be able to capture somewhere between 20 to 30% market share in the long term. Not immediately, but long-term.
And if you see Namma and Rapido in India, of course, their GTV will be same as Ola Uber because AOV is same. But their revenue will be far lower because of the commission structure. Now Uber can’t ever operate this model because they can’t reduce their revenue. They can’t kill their margin. They are a public company. They move slow. They have to report their earnings and for a public company, you can’t show margin/ revenue decline. You want to show your take rate has actually increased because of your platform play.
Yes, Rapido could win in Bike transport.Swiggy could not even operate in that market because as a leader in food delivery you can’t enter regulatory grey areas like Bike transport. You will attract attention of regulators and safety issues would have impacted their IPO plan.
Once the infra for Bike transport is ready, you can use the same allocation logic, pricing systems, playbook to acquire drivers when you expand horizontally to car and auto.
But the real reason Rapido grew was because they had a differentiated BUSINESS MODEL (	almost no demand side incentives, supply paid fixed fee or low commission per ride). As a challenger they would do all of this while Ola and Uber could not.
Now, this is just one example. I can talk about all the examples mentioned here and why some of them have worked. Some of them seem to have worked, but long-term, it’s unclear if they are sustainable businesses. And if I had to build a product that is a challenger to Swiggy, I won’t build the same product with the same supply and demand. I won’t say, “It is the same product, but you can get your food in 10 minutes.”
Because it’s not about getting the food in 10 minutes. It’s also about how you have a differentiated supply strategy and demand strategy. Has the business model changed? Why won’t Swiggy also launch the same 10 minute product? And guess what? They did.
There are more examples beyond on demand space.
Every one is betting on vertical agents. Incumbents are building their own agents. Enso has taken a contrarian bet on horizontal agents at a fixed price for SMBs. They are building an agent marketplace too. Hit on quality and reliability, but instead of complex multiple agent workflow, it is a bet on single task agents and a marketplace approach.
Everyone was betting on bigger foundational models, Nous Research went after fine-tuning open source models. Bet on open source models. Now they are building a decentralized AI training network on Solana.
11X ai and multiple other AI SDR agents were going after the outbound, while it is very easy for Clay (CRM with leads), Apollo (source of leads) to just build the agent that does outbound. They own the source of record or own the leads (first step in the funnel). What Day AI is doing? Completely reimagining the CRM so that source of record argument is not even valid anymore.
Will these companies work and become unicorns? Who knows, but atleast there is an unique play.
Coming back to Tj’s original tweet:
It is not about hustle. It is about counter positioning.
It is not about incumbents being slow, it is about them not being able to kill their margin structure.
It is about a different narrative altogether.
It is about different business model that incumbent will find hard to pivot to.
It is more than a simple David beats Goliath because of David grinding narrative.

--- END POST: David vs Goliath ---


--- START POST: Gojek's multimodal moat ---
URL: https://manassaloi.com/2025/03/16/gojek-multimodal.html

A lot of people don’t know this, but Gojek is the only true multi-modal ridehailing company in the world.
You can book all legs of the journey in a single transaction:
First mile (to the transit hub) using any of our ride-hailing products
Middle mile (train)
Last mile (to your final destination using one of our ride-hailing products)
Every good business should have a business equation. Here is ours:
People booking public transit × % of them booking online × % booking online through Gojek × us upselling the entire journey (all the legs) and converting only the middle mile transaction to a full journey (multi modal) transaction.
First factor is macro. You can’t control it much.
Second is also macro, but you can teach users why booking online is better: simpler, cashless.
You have to build a killer experience for the 3rd factor to happen: seamless integration with transit services.
Last factor requires product integration. How can you make the multi-modal booking seamless? How can users just tap a button to complete the last leg? Can we track the state of the booking (all legs) at all times? Can you let them edit destinations when needed, or change trains if needed?
Over time, you integrate with more public transit options despite regulatory hurdles. This can become your moat.
Commute contributes to 20+% of most ride-hailing apps, so building more flexibility in commute is important. Giving economy options is important.
You also expand your market by onboarding economy users who are used to public transit. Get them on your platform through transit ticket purchases, and later upsell them to non-commute, non-transit regular 2W rides, and then 4W.
You need to integrate all ride-hailing options over time, including premium options of relevant vehicle types and more vehicle types. This isn’t easy because you need to think through pickup and drop-off experiences offline. Bikes can have designated zones to park. More space is needed for cars, and car parking is harder.
I was thinking whether Rapido can do this in India, but the actual bottleneck is auto unions. They won’t let 2W ride-hailing kill their business even though it is far more efficient in traffic and affordable.

--- END POST: Gojek's multimodal moat ---


--- START POST: White Hat Junior 2.0 ---
URL: https://manassaloi.com/2025/03/15/white-hat-2.html

Actually, the best time to build White Hat Jnr was now. It got started ahead of its time.
Instead of call center agents with zero tech knowledge reading computer programs from a script, this time an AI agent would be the personal tutor for your kid.
Human motivation does not change. Parents still want their kids to get ahead in life and get an early start. But 1-1 personal tutoring is finally possible at scale due to AI agents.

--- END POST: White Hat Junior 2.0 ---


--- START POST: Nepotism will be back ---
URL: https://manassaloi.com/2025/03/14/nepotism-back.html

I am very bullish on nepotism making a comeback once AGI is here.
If AGI truly levels the playing field in terms of skill, anyone can perform coding tasks and delegate thinking to a model, then hiring decisions shift from “who’s the most capable?” to “who do I trust the most?”
And trust, historically, defaults to family and close networks.
“Nepo capitalism” in an AGI world makes sense because, if execution is democratized, then access and control become the new power levers. Families will consolidate wealth by hiring within, knowing that any skill gaps can be filled by AI. Instead of Patel family motels in America, it will be Patel family SaaS empire, where every uncle and their cousin will be a “founder” while AGI does the heavy lifting.
(And there will be Leuva Patidar Samaj volleyball tournaments in Dallas, but this time not for motel or gas station owners in rural America, but SaaS business owners in SF. IWKYK.)

--- END POST: Nepotism will be back ---


--- START POST: There is always a queue ---
URL: https://manassaloi.com/2025/03/13/marketplace-queue.html

There is always a queue.
Every marketplace claims to be homogeneous and insists it does not differentiate between its demand and supply, but this is not true.
Marketplaces essentially function as a queue management system, balancing demand (users who want something) and supply (those who provide it).
The goal is to organize demand and supply into clear queues. Once structured, the marketplace can dynamically adjust priority based on users’ willingness to pay and suppliers’ willingness to be utilized.
When many users request rides at the same time, their requests form a queue. Typically, matching a user with a driver takes 10 to 30 seconds.
Jumping the Queue:
Users can move ahead in the queue by showing a willingness to pay more, which can be done through:
Adding a tip
Choosing premium or priority services
Increasing their bid or fare
Waiting to Save:
Some users prefer to save money by waiting longer or booking at off-peak times. By accepting a lower priority, they pay less. Suppliers can choose to accept these users when demand is low or ignore these bids. It is up to them to decide how to maximize earnings per hour. In some cases, as a user you can even negotiate the price down instead of up if there is sufficient competition among suppliers while demand remains low. There are marketplaces where suppliers bid and the users select rather than the other way around. There are ride-hailing companies that even let drivers purchase a small booster that increases their order income by X% for the next Y hours. This is essentially paying to opt into a higher surge or bonus bracket; while it might seem counterintuitive (drivers paying the platform), some drivers use it strategically when they know demand will be high to maximize their earnings.
This principle extends beyond ride-hailing.
Home Services (Urban Company):
Users who pay a premium receive faster service allocation. Others can opt for standard pricing or book during low-demand hours for lower rates.
Restaurant Reservations:
At peak times, users may pay extra (a cover charge or premium) to secure prime time slots. Conversely, restaurants offer discounts during off-peak hours to attract customers when demand is low.
Summary: Marketplace efficiency relies on a dynamic queue system—where a user’s position is determined by how much they’re willing to pay and how long they’re willing to wait. The same applies to suppliers. This is a way to maximize revenue and optimize utilization.

--- END POST: There is always a queue ---


--- START POST: What Makes an AI Company? ---
URL: https://manassaloi.com/2025/03/12/ai-company.html

What makes an AI Company?
A simple test: remove the core AI component - does the company still function well, attract users, and maintain similar revenue growth? If the answer is no, then AI isn’t just an add on.
It needs to be the foundation of the business.
Take Cursor, for example. Its standout feature, Composer, powers the agentic coding experience that vibe coders rely on. Even without Composer, developers might still use Cursor for AI driven chat with their codebase or enhanced autocomplete. But strip away all AI features, and Cursor is just VS Code, its core differentiation disappears.
Now, consider ride hailing. Machine learning has always been a part of it - customer segmentation, supply positioning, pricing models. But if you removed ML (distinct from AI in this case, where AI refers to LLMs), the system would still function. Matching could default to shortest distance allocation, and pricing could rely on deterministic logic based on past data. AI enhances efficiency, but the product doesn’t depend on it.
Look at Apple Notes, Google Suite, and Meta products. They’ve integrated AI, but has it driven explosive user growth or revenue? Not really. Most people would still use them without AI, and few would pay extra for the current AI powered features.
For companies like Cursor, AI isn’t just a feature - it’s the engine behind their insane ARR growth. It attracts users who might have never used VS Code but can now build prototypes effortlessly on Cursor.
That’s the real distinction between an AI company and a company that merely uses AI.

--- END POST: What Makes an AI Company? ---


--- START POST: A cold email I liked ---
URL: https://manassaloi.com/2025/03/11/cold-email-i-liked.html

Related links:
How to do a cold outreach right

--- END POST: A cold email I liked ---


--- START POST: Google's agentic future ---
URL: https://manassaloi.com/2025/03/10/google-agentic-future.html

I’ve been thinking a lot about agentic software lately and how it’s going to transform our workplaces. While everyone’s experimenting with AI assistants and cobbling together solutions with tools like LangChain and Crew AI, I believe Google actually has the best shot at making AI agents a seamless part of our daily work lives. Let me explain why.
Think about Google’s product ecosystem for a second. You’ve got Gmail, Meet, Drive, Docs, Sheets, Slides - all these powerful tools operating on the same layer. But what’s missing is a meta layer above all of these - an orchestration layer that ties everything together. Essentially, an operating system for work.
Picture a knowledge worker (like a product manager) operating primarily from this layer rather than jumping between individual apps. This orchestration view would give you:
A unified task list
Recently updated documents
Contextual recommendations
A single place to instruct your AI agents
Consequently, without this layer, your work remains fragmented across multiple apps, and you’re constantly moving context around manually. With it, you get a cohesive workspace where information flows naturally.
Ultimately, this will be the unified view for the product manager. Not Slack. Not Drive. Not Jira.
How Would This Actually Work?
Let’s walk through a couple of concrete examples:
Example 1: Propagating strategic updates
Your CEO holds an all-hands meeting where she announces a major change: “We’re shifting our revenue growth target from 10% to 20% for the next fiscal year.”
Current workflow: You attend the meeting, take notes, and then manually update numerous documents - your roadmap spreadsheet, business models, planning docs, and presentation decks. You hunt down each relevant file, make changes one by one, and hope you haven’t missed anything.
With an agentic layer: You simply tag the key insight from the Meet transcript: “Growth target increased to 20% from 10%.” Your Google agent then:
Identifies all relevant documents using Google’s powerful search capabilities
Drafts updates to your roadmap in Sheets
Modifies growth projections in your business models
Updates planning documents in Docs
Presents all these changes for your review in a unified interface (it can be inside the Meet client, how you can accept changes inside a file on Cursor, or because it will take time, you can just leave Meet, and just accept the changes at the OS view (equivalent to Composer view on Cursor))
You review the suggested updates, approve them (perhaps with some tweaks), and the changes propagate across your workspace. What might have taken hours now takes minutes.
Example 2: Creating Product Specs on the Fly
Now let’s look at how this might work within Google Docs specifically.
Imagine you’re a product manager tasked with creating a spec for a new feature that will help hit that ambitious 20% growth target. You open a blank Google Doc to start drafting.
Current workflow: You manually gather context from multiple sources - you open your business projections spreadsheet in another tab, pull up design mockups, reference competitor analysis docs, check the technical limitations from engineering notes, and try to keep all this context in your head while writing a coherent spec from scratch.
With the agentic assistant: Just like how Cursor has Composer chat always available on the right-hand side for coding, Google Docs would have an always-present AI sidebar. There you can ask the agent to co-work with you on the spec. You start by telling it:
“I need to create a spec for our new Premium tier feature. This needs to contribute to our new 20% growth target.”
The assistant responds: “I can help with that. What information should we incorporate?”
You reply: “Let’s use the Q3 business projections spreadsheet, the competitive analysis from last month, and those new mockups the design team shared yesterday.” You can even tag the relevant files like you do on Cursor.
The assistant then:
Instantly pulls in the relevant data from your linked spreadsheet
Analyzes the competitive landscape from your previous doc
References the design mockups and their annotations
It then drafts a complete product spec including:
Feature overview
Success metrics (directly tied to the 20% growth target)
Technical requirements
Timeline recommendations
Revenue impact projections (pulled right from your spreadsheet)
You review it section by section, making tweaks and giving feedback like: “The timeline is too aggressive here,” or “Add more detail about the user flow.” The assistant refines its work based on your guidance.
When you’re satisfied, you accept the changes - just like in Cursor Composer - and your polished spec is ready to share with stakeholders, complete with all the right references and metrics aligned to your company’s new growth targets.
Google is uniquely positioned to build this future for several key reasons:
Complete product ecosystem - They already own the full suite of workplace tools where most knowledge work happens
Best-in-class search - Google’s core competency is finding relevant information, which is essential for agents to locate the right documents to modify
Gemini’s massive context window - Unlike competitors, Google’s Gemini can hold multiple large documents in context simultaneously, allowing it to make coherent, cross-document updates. No other model comes close
Native integration potential - No “duct tape” solutions needed - Google can build agents directly into their existing products. Their RAG flow will always be better because they have access to all your relevant documents
Treasure trove of user work data - Google already has access to how you work, collaborate, and use their tools. This data is gold for building agents that adapt to your specific workflow patterns. Sure, you could duct tape together various agentic solutions, but they won’t have this rich history of your work habits to draw from.
This gets even more powerful when you add MCP to the mix. This approach would allow the Google orchestration layer to extend beyond just Google products.
Your agent could use MCP servers to communicate with tools like:
Jira for project management
Asana for task tracking
Dozens of other workplace tools
Slack for status updates
All from that same unified interface. Imagine saying “Update our roadmap to reflect the 20% growth target and make the changes on Asana” and having it all happen automatically.
And for large enterprises with thousands of files? Only Google’s approach would scale. While having a huge context window is helpful, Google’s real superpower is their ability to index, search, and prioritize information at massive scale. Again, they can fetch the files relevant for a particular task. They don’t need new permissions because your data is already with them. Over time their model to predict which files are needed for the task only becomes better because millions of workplaces already use Google.
Furthermore, even if your organization has files spread across hundreds of teams and departments, Google’s infrastructure is already designed to handle exactly this kind of complexity. The search giant would excel at finding the needle in your organizational haystack and identifying the information that needs updating when new information comes in.
For knowledge workers, this represents a fundamental shift in how we spend our time:
Less manual information movement between tools
Reduced busywork updating documents
More time for creative thinking and strategic decision-making
Fewer things falling through the cracks
In essence, the agent becomes your second brain - remembering context, suggesting actions, and handling routine tasks while you focus on the work that truly requires human judgment.
I believe we’re moving toward a world where our digital work life isn’t spread across dozens of disconnected apps. Instead, we’ll operate from an orchestration layer that gives us a cohesive view of our work while agents handle much of the manual labor behind the scenes.
Google, with its integrated workspace, massive context windows, and search capabilities, has everything needed to make this vision a reality. The question isn’t if this will happen, but when - and which companies will be quick enough to adapt.
As these agentic systems mature, the productivity gains will be enormous. The companies that embrace this shift earliest will have a significant competitive advantage. And based on what I’m seeing, Google is perfectly positioned to lead the way.
P.S Yes, Microsoft can build this too. Eventually OpenAI might also figure out long context, and Microsoft has a product suite like Google. Since I have always used Google suite, this was more about how I see my workflow evolving.

--- END POST: Google's agentic future ---


--- START POST: Best time to be a growth PM ---
URL: https://manassaloi.com/2025/03/09/ai-growth-pm.html

There’s never been a better time to be a growth PM for a big company. Every day, I come up with dozens of top-of-the-funnel mini-product ideas. Great for user acquisition, but not quite full-fledged startup material.
A decade ago, I used to get inbound offers to build these for existing companies. Think: a credit score checker as a lead gen tool for a lending app. Back then, the cost of building such products was still high. I was not sure if leadership would be invested in the long term. How many bets would they take? What if they shut down the team after one failed launch? Now with Gen AI, the cost is almost zero.
Actually, it is not just top of the funnel. You can do products for engagement too. Spotify wrapped for other products. Mini-gamified surveys. Endless possibilities.

--- END POST: Best time to be a growth PM ---


--- START POST: Low trust society ---
URL: https://manassaloi.com/2025/03/08/low-trust-society.html

India is a low trust society.
But I have seen some progress over time.
Earlier, after each Unified Payments Interface (UPI) payment, merchants would check your phone to verify. Nowadays, I rarely see auto-rickshaw drivers or merchants wait to verify. They move on to the next customer. Yes, UPI payment confirmation sounds are common. But in auto-rickshaws and similar settings, they don’t have that. It is just that they assume you would not cheat them.
But for every positive step, we have issues like the food adulteration scandals that go viral and make people doubt whether they can trust by default.
Websites have trust markers. They display logos of partners. They show logos of their venture capitalists (VCs).
But I was thinking about what are proxies for offline merchants.
Most local eateries have open kitchens. You know your food is prepared fresh. You can see it made in sanitary conditions. You watch it being prepared in front of you. The fact that the restaurant has spoons in hot water makes me trust them more. If they care about the spoons, they probably care about the ingredients too.

--- END POST: Low trust society ---


--- START POST: Status signaling as a driver for growth ---
URL: https://manassaloi.com/2025/03/07/status-signalling-driving-growth.html

The high-status individuals dictate the communication platform. And what it means for your growth as a consumer app.
I talk about status signaling quite a bit because it is one of the things that comes up more and more when I talk with consumer app founders about distribution.
Distribution is not easy. Especially if you are relying on organic and don’t have a lot of VC dollars to burn. If you are a consumer app starting out, you have to think very clearly about why the user wants to install your product. What motivates someone to try a new thing?
Let’s talk about a new consumer messaging app.
You want to engage someone on Twitter. You reach out to them on DMs. After the initial chit chat, you want to move to another medium and have a longer conversation. Who decides the medium?
Let’s say you don’t even get a reply on your cold DM, and were wondering if there was a way to reach their inbox.
People might seem equal, but they are not. There is always an asymmetry of power between you, the cold DM sender and the person who is responding to you. Imagine the receiver is busy and is high status.
That person might say, “hey I want to talk to you but I am not sure if you are worth my time and I get a lot of DMs already. I don’t want to share my personal phone number and email ID. So there is this third product which you can use to reach out.”
This is the high status receiver deciding the medium of subsequent communication. The low status person will always have to move to the platform of choice of the high status person.
This is why for pitch meetings for a hot founder (hot as in the product being hot), the VC will move to even Microsoft Teams if needed to win the deal.
While a VC might even ignore a DocSend link, and ask to send the pitch as a deck, if they can’t bucket the founder.
Coming back to the messaging app, the new messaging app will take off only if the high status person chooses to be exclusive on that messaging app and there is no other way to reach out to that person.
If you want to talk to Tanmay Bhat on Instagram, you will have to super DM him. Unless you can find someone who can do an intro. What Tanmay Bhat is signaling is that he gets thousands of DMs every day and he wants a separate inbox where he can filter.
[For the rest of the post we will assume Tanmay Bhat has the same super DM link on Twitter instead of Instagram because it makes it easier for me. I don’t have an Instagram account, and I understand only Twitter]
Tanmay Bhat putting super DM as his link in bio is free advertising for the product. Users who want to reach Tanmay must use it, which forces adoption. This creates an organic distribution loop where people learn about super DM not through paid Twitter ads but through necessity, after landing on Tanmay Bhat’s bio.
So one thing I talk to consumer founders (messaging or social) is how they can be the link in bio for Tanmay Bhat (some high status person) who gets a lot of visits on their profile. If your product can insert itself as the preferred mode of communication for high-status individuals, it can gain distribution.
The more people are exposed to a product through high status individuals, the more it propagates naturally.
If you are building a new messaging app:
Can your product be the default link in bio for high-status users?
Can your product help them manage inbound attention (like super DM) or create exclusivity?
Can you create a status-driven loop where adoption itself signals exclusivity?
The earlier in the funnel your product appears (example: as a link in bio), the more discovery happens.
Can you go even earlier?
The game here is about hacking visibility through user-driven placements—bios, profile pictures, and social behaviors.
If your users are on Twitter, then for anyone landing on home you would want them to see the banner of your app. But of course, Twitter is not going to do it for you. They are going to upsell the user to Twitter premium instead. You can’t have that screen estate. So what can you do?
We have discussed the link in bio.
Can you ask them to pin your product’s tweet in their profile? Their banner image?
If you have leverage, and this person is your investor, maybe you can ask them to do that. But that is after someone lands on the profile.
What are the things people see on timeline?
A post. Name of the person. Their profile photo.
Yes, you can incentivize your high status users to post about your product every time they come on Twitter, but they won’t do that.
Biggest win is if you can turn your product into a movement. Bitcoin pulled this off because laser eyes on profile photos became a meme + a status signal. But it is very hard to replicate unless your product has deep ideological backing. And people’s incentives are aligned with the movement growing.
Till then the link in bio will do.

--- END POST: Status signaling as a driver for growth ---


--- START POST: Paying for only status ---
URL: https://manassaloi.com/2025/03/06/status-value.html

I spend a lot of time thinking about status and signaling.
The most interesting thing I have learned about status is that sometimes people pay for status without any benefit.
A person who gets up at 5 AM to run signals youth and vitality. You can’t buy that with money. You have to put in the work. But it also releases endorphins. You feel great afterwards.
A person wearing expensive sneakers signals wealth (hey, I can afford these 20k Nike sneakers) and taste (I know these shoes are cool).
But more important: they also get to enjoy the shoes.
[Gen Z people please ignore the rest of this post because you are too young for it].
What I have never understood is the business of buying caller tunes. That was in the VAS era. Remember that? People used to pay monthly for caller tunes they couldn’t even hear. It was something the caller would hear. There is no benefit to the buyer who is the receiver. No utility.
The only purpose was to say, ‘I can pay for your enjoyment. And I have good taste in music.’
What is the equivalent of that today?

--- END POST: Paying for only status ---


--- START POST: Top 100 people in AI ---
URL: https://manassaloi.com/2025/03/05/top-100-people-ai.html

The person creating the list decides who receives status, implicitly placing themselves at the top of the status hierarchy.
This shows there is still opportunity for someone to create a top 100 people in AI in India list. It builds the brand for the status giver and provides free SEO for them. People will add this newly earned recognition to their LinkedIn bio.

--- END POST: Top 100 people in AI ---


--- START POST: On taste ---
URL: https://manassaloi.com/2025/03/04/on-taste.html

I know I will never go hungry in my life. I just need to post about taste on X.com and I will have hundreds of comments teaching me about taste because everyone has an opinion on the topic.
And the sweet Elon bux will follow. Joke, joke, I have not got any Elon bux (yet).
Why?
It is low status to think people don’t have taste.
Funny thing is there is no way to even define taste.
There is no universal consensus on what is good taste. Yet everyone feels qualified to weigh in as if it’s an objective thing.
Asking what is good taste is the same as asking what is good design. What is a good movie. What is having good taste in comedy?
Let’s take one example.
People share “it insists upon itself” memes on Twitter. The origin of the meme is a comment by Peter in Family Guy about The Shawshank Redemption.
I remember in college, having taste meant having watched The Shawshank Redemption. Is it tasteful thinking The Shawshank Redemption is the pinnacle of cinema still? The number 1 rated movie on IMDb.
Is IMDb rating tasteful? Or do people with taste check out movie reviews on Letterboxd now?
Or do people with taste read books on filmmaking by Hitchcock and form their own opinion about movies like Anurag Kashyap?
Now coming back to Family Guy.
Do you, as a person with taste in memes, think “the it insists upon itself” meme is good or not? If yes, and you think it is funny, you probably think that Seth MacFarlane is funny. A person who has taste in comedy.
Do you know that Seth MacFarlane has made far worse jokes on the show than India’s got Latent?
Watch the episode where Chris shows Stewie his private room for example.
So do people with a taste in comedy like Family Guy or not?
People loved Stranger Things. People loved Louis CK. People loved Kanye. JK Rowling. Do people who have taste in TV, Comedy, Books, Music still love these people?
Probably not. Because taste is not just about the object itself, but what it signals about us. You decide what to like, at what time to like, to be part of various groups that signal your identity.
You can’t love JK Rowling today as a left-leaning person. You will be no more in-group.
When you were from a small town and got to an engineering college, watching Friends was what people having taste did. Then people would discover Seinfeld and move on. Seinfeld is what sophisticated people watched.
And yes, the more obscure the books and movies, the more taste you had.
I remember a road trip in Kerala where my best friend from college and I were debating over the best Malayalam movies. Malayalam movies were high taste at that point. And we were just signaling.
Is there a ladder of taste? Is it the same as the status ladder? It’s not just about what you like, but also the signaling around it. The perceived status.
Remember Lex Fridman’s book list? And the criticism around it? Wow, the books are so basic. It is so funny that when I posted the hard copies I had yesterday, I knew people would post Japanese design books.
Why? Because I have posted In Praise of Shadows so many times myself too.
But the problem with wanting to signal with obscure Japanese books is that their hard copies are too expensive.
I like status. Not as much that I smash my book budget with just one purchase.
And hence whether you think I have tasteful design books will also depend on whether you check out my Goodreads shelf or physical bookshelf.
Kanye wore the same homeless people clothes that I used to wear as a kid who has no interest in clothes and just could not bother dressing up. But when Kanye had taste, dressing homeless was tasteful. Acting like you had no money and wore torn clothes was tasteful. Kanye did not shout at Jews on X.com then. Are your Yeezy sneakers still tasteful?

--- END POST: On taste ---


--- START POST: Zepto doing car delivery ---
URL: https://manassaloi.com/2025/03/03/zepto-car-delivery.html

Blinkit is launching ambulance service. Zepto is launching car delivery.
A viral tweet is saying Indian founders just burn VC money and build their brand, instead of focusing on running a business.
It is easy to understand the game. Not the meta game.
Game
: 10 min delivery.
The meta game
: Knowing when services are almost equivalent, pricing is almost the same, the meta game is being in the news. And creating new anchors.
Zomato has cracked it. We are still discussing the Chief of Staff hiring.
Ambulance service is a critical service. Focus on safety. Needs to be urgent. SOPs need to be perfect.
If a 10 min delivery app can run an ambulance service well, the implication is that they can probably deliver your high ticket items safely too.
If a 10 min delivery app can deliver a car in 10 mins (details don’t matter here), they can deliver your diet cokes too. And other high ticket items like Electronics too. You are now anchoring on car delivery. Every other delivery is easier.
The cost of launching a new product or service is almost 0. But the masses talk about your brand.
This is why on every meme reel you will see Swiggy and Blinkit’s reply on the top. They are not real people. They talk like one.
If you have achieved PMF, there is always an advantage in posting the incremental tweet, the incremental interview, the incremental launch announcement. It is free distribution. And you get top of mind recall. Eventually it leads to brand used most often (BUMO).
The meta-game is knowing that Shark Tank has turned into a soap opera because, when the product is a commodity and distribution is the same for CPG, storytelling (narrative engineering) is what gets you the initial audience.
Founders should pay for theatre lessons rather than advisors.

--- END POST: Zepto doing car delivery ---


--- START POST: Behind the plate ---
URL: https://manassaloi.com/2025/03/02/behind-the-plate.html

Behind the Plate - Swiggy Originals Series
Swiggy should do a series called “Behind the Plate” where they showcase the actual people who make your food. Not those polished chef interviews you used to see on TV, but something raw and authentic. There’s this huge emotional connection with food that most apps completely miss out on.
The idea is simple. Each episode features one chef from a restaurant you order from. Make the chef the hero of the story.
Think of this less like Chef’s Table or Nikhil Kamath inviting restaurant owners to discuss French patisserie techniques. The goal, the audience, and the format are different here. Chef’s Table tells the story of restaurant owners perfecting their craft—not the young cook from UP who moved to Bengaluru with big dreams and now supports his family back home by making chole kulche. This will focus on the latter.
No script, just real conversations about their journey, struggles, and what drives them to cook. 
Show them actually making their signature dishes. Let viewers see the care that goes into the food they order with a few taps on their phone.
I remember eating at this small restaurant in Ubud. It was run by this one old lady with her daughter. The menu had this story about how they started. How they care about the ingredients and how they source them. Made me appreciate the food even more knowing the story behind it.
There are three things this kind of content could do for Swiggy:
First, it builds trust. When you see the actual people making your food, their dedication to hygiene and quality, you’re more likely to order (hypothesis). Food delivery has this trust barrier that’s hard to overcome. With adulteration cases going up, people have started thinking more and more about what they put inside their body. This will also show the kitchen, and implicitly signal how hygienic the place is.
Second, it creates an emotional connection. We all love stories. When you know the chef spent 10 years perfecting that biryani recipe that they learned it from their grandmother, you’re more invested in trying it.
Third, it differentiates Swiggy from every other food delivery app. Zomato, Swiggy, they’re all starting to look the same. Features get copied within weeks. In a space where technology is quickly commoditised, the stories you tell could be a differentiator. This kind of content library? That’s harder to replicate.
Keep it simple, authentic, conversation based. The rough edges make it feel more real. These will be Instagram reels and Youtube Shorts. Restaurants will be happy to support this as Swiggy will be putting in the effort to market them. 
Vibe of the shorts will be a mix of fave.finds.blr’s Koshy restaurant reel + Ranveer Brar’s Kolkata street food reels.
Once you have enough content, you can even showcase this in the restaurant page.
Will this directly increase orders? Maybe not immediately. But it changes how people think about Swiggy. It’s no longer just an app, but a connection to real people making real food. Every order becomes a story, not just a transaction.
I don’t know if Swiggy is thinking about content as a moat, but they should be.
(Another similiar idea I posted was live streaming the inside of a kitchen to build trust. This was during peak covid. That never took off. Maybe this one will.)
Added context:
People on Twitter were commenting saying this is Chef’s Table in replies.
Another series by Zomato.
Nikhil Kamath has done episodes with other restaurant owners too.
But this is not that.
This is not about the owner of a restaurant chain who is telling you how he got a loan to open his first restaurant. This is about the small-town guy from a tier 4 city who moved to Bengaluru with dreams, has a family to support back home, and is now making chole kulche for you at a restaurant with a colorful name like “Ustad ji ras bana rahe hai aur kofta khila rahe hai.” He tells how he adjusted the chole kulche recipe to make it feel like home.
Even better would be a north Indian cook making dosa at some darshini.
It is reels. 1-minute videos. Bingeable content.
Chef’s Table is about how a Michelin star restaurant owner grew his own potatoes. You can’t show this level of detail in a YouTube short or reel. You need an hour. It is niche and not for the mainstream audience.
This is for the masses. People tagging others and saying, “Oh I know this small town where this cook came from. It is close to where I grew up.” It is about nostalgia. It is about connecting with others.
Showing the restaurant kitchen is of course an important but subtle part to signal hygiene. But the storytelling has to be stellar.
The vibe is important. See Ranveer Brar’s Deckers Lane reel. There is this other Pakistani Instagrammer I had seen. She would go around Karachi eating at small street food places. This is mostly like that, but also focuses on the cook.

--- END POST: Behind the plate ---


--- START POST: AI adoption inside companies ---
URL: https://manassaloi.com/2025/03/01/ai-company-adoption.html

AI can:
Help ICs do their current work:
Better.
For a PM, can their spec become better because now they can use tools like Deep Research (OpenAI) for competitor analysis, Deep Search (Twitter) for faster, efficient search? Can AI give insights about customer behavior and point out edge cases that a normal PM would miss?
Can a copywriter now come up with dozens of copy variants that are probably far better than anything they could create on their own?
Faster.
Lead time: Can you cut the lead time to arrive at a spec and prototype? This is easier because you can leverage existing templates, turn notes into first-cut specs faster, and brainstorm with LLMs to think through ideas and stress test them. As a PM, you can work on quick prototypes before you collaborate with a designer on the solution. These will mostly have to be discarded. Tech leads can create their tech specs faster. AI won’t do the complete work for them, but previously the planning stage would take a lot of time. Now it is far faster to brainstorm, go broad, and then narrow in on a solution (diamond).
Cycle time: Here it is trickier. Landing pages for marketing would be far faster. Marketers can probably do these on their own now. Stand-alone pages. You can create copy faster. If midway through the project execs change their mind, instead of the project being on hold until designers change their designs or add more scope, you can quickly use the designs to create a web prototype, make the changes, and show it, instead of making changes on the actual app. [I wish this did not happen, but ask any company, and they will tell you scope changes and design changes, especially in startups, happen quite a bit.] For a senior engineer, tab tab tab works because even in a big codebase, you are not using the agent to make changes across multiple files. Scaffolding is taken care of. Just don’t expect some 90% improvement though. It is not going to happen unless you want to go full Yolo mode and spend months refactoring later.
More.
If you are doing better and faster work, a person is already delivering more. So they can manage more projects at a time and also take less time per project.
Since you can generate potentially infinite variants of copy and designs, you can create far more marketing campaigns than before. You can try many more landing pages. You can test different funnels for different segments. Marissa Mayer used to test 40 shades of blue for a button. AI gives you the same power, without needing the resources of a Google.
Empower an IC to take on completely new work not possible before:
This is the most exciting part of this AI age.
A marketer is now a copywriter.
A PM, instead of waiting for a data analyst for complex queries, can do their own analysis.
A marketer can create designs for their campaigns using various design tools.
A PM can make prototypes while collaborating with their business counterparts or engineers, leaving the designer to do deep work on their current projects.
A backend developer working on an internal dashboard does not need to wait for a designer. They can use v0 for it. They don’t even need to wait for a front-end dev. They can use v0 again. Do note: These tools are good for standalone projects with smaller code bases. You can’t expect these gen AI tools to write scalable code, and as the code base increases, it will hallucinate more and might even want to delete your own codebase for the lols.
Help teams coordinate better:
There are tons of meeting notes and action item products. No meeting should end without a Minutes of Meeting (MOM) now.
People hate writing. An email takes effort. Even a Slack update requires work. Superhuman has autocomplete. Gmail has summaries. You don’t need to wait 3 days to reply to an email going forward. Replies might be templated and get shorter, but people will not become bottlenecks (hopefully).
Enable Push vs Pull:
This is my favorite topic and something I have written a lot about.
Push »»»> Pull.
All PMs pretend to like data. But no one opens Tableau every day to check data. An email update means you are not pulling data anymore, and it is delivered to your inbox. Earlier you would wait for a data analyst to create a new email, but maybe now you can do it yourself. Or the data analyst can be more productive and create a new insights email and not need a week to get it done.
What are the insights people need to do their job better? How can we push them in a timely manner with clear action items? Facebook campaign performance is declining? Is there an email with updates about that, with insights on why that might be happening, along with 5 more suggested campaign ideas?
Push 10X more content on your distribution channels:
Use your distribution to your advantage. Create more AI-generated videos. Create memes. Post replies on other channels. Maybe create a completely new channel with only AI videos.
  More thoughts:
90% and not 100%:
The more specific the output, the harder it is for AI to get it done. It is a next token predictor after all. This is why I can come up with a dozen ideas for a wedding card (yes, I tried this for a friend), and the characters can seem like them, use style and character reference, but for some reason or another, the hands will be messed up on Midjourney. Yes, I can use Replicate and try out more models, but each incremental rerun costs money. This is what companies will learn too. So the best use cases are where you don’t need 100% accuracy, but are okay with 90%.
You might want creative ad ideas.
You might want creative landing pages.
You might want nice graphics.
But be happy with 90%. If you try to make it 100%, you might end up spending as much time as before on Photoshop and you won’t get the productivity gains you were expecting.
Workflows:
I would do an audit of workflow of each person working for my company and understand how they can leverage these tools to do more work at a faster pace, and can take on adjacent work.
Existing tools vs in-house tools:
I tried this experiment a while back. I was trying to see if I can create a MiniManas, use AI to write like me. I have 500 blog posts on my site.
I started with just asking all the chat tools to write like me without example.
I then tried to use better prompts.
Asked ChatGPT to update its memory on how to write like me. Used Claude’s styles.
Then I gave an example in the prompt. Gave some notes.
Then I tried to give examples of drafts vs final output, and played around with the number of examples and final output.
Then with the help of a friend, I fine-tuned a model and tried the same exercise.
Next would have been to use some RAG-based system to create embeddings of all my written content, chats or blogs, store them in some vector store, and then use different LLMs to write like me. I tried the first part, but the embeddings workflow was failing. And I was too poor to use OpenAI’s embeddings API.
I gave up at this point.
My point with the above is that you can try all sorts of solutions. But instead of trying to fine-tune some LLM and creating your own workflows, see if you can use an existing tool. You don’t need to fine-tune some LLM to write code. You are not JaneStreet who needs Ocaml and needs their in-house tab tab tab. You can just use Cursor. Yes, you might have a particular design system and brand guidelines, but that does not mean you need custom loras to generate images for a brand campaign. You can just try prompt engineering and get 90% there. Post an existing brand image on ChatGPT or Grok. Ask them to describe the image. Use the description and reference image to create more brand images on Midjourney. Take it to Magnific AI to upscale. You can even use a mix of Midjourney + Figma. Instead of creating custom in-house agentic workflow, maybe try some off-the-shelf available agent workflow builders.
I particularly love what a founder told me: His goal is to make sure every employee in the middle of the bell curve gets superpowers and can do their job like an A player. I think that is a nice way to think about this transition.

--- END POST: AI adoption inside companies ---


--- START POST: Uber auto's 0 commission model ---
URL: https://manassaloi.com/2025/02/28/uber-zero-auto.html

Uber’s business model change for Auto does not matter. It is too little, too late.
Every strategic move is offensive or defensive.
Rapido launching 0% commission and charging flat platform fee from drivers was an offensive move.
If an incumbent has fat margin structure, you can attack its margin.
Rapido makes money from 2W. So this expanded use cases for Rapido. Gave customers more choices. Supply switched to Rapido.
Even this was a response to Namma who did this first.
Assuming since then a lot of supply has moved to Rapido and Namma, and demand has followed supply to these 2 platforms, then this change from Uber is meaningless.
It won’t attract demand back to Uber. I don’t remember when was the last time I used Uber.
Uber does not even have differentiated supply. Cars have become worse. No quality control issues.
Support is bad.
Support is bad on all of these platforms, and it means for an user there is no clear difference between any of these platforms.
For a premium user there is no need to choose Uber over Namma or Rapido.
This commission/ business model change should have been made much earlier. But they could not. if they had changed the commission structure only for autos, their car drivers would have revolted.
And even if their India business revenue was only 1/2% of global, for a public company it was still meaningful. So they needed their revenue from cabs. 25% take rate is meaningful.
My guess is that Rapido and Namma took market share away from them. Not just in auto, but also Cabs. Rapido is 0% commission even on cabs.
This is a last ditch defensive attempt from Uber to protect GMV (assuming auto rides on Uber’s platform is significant % of their total rides), and give up on revenue.
And Dara made it clear that he is focused on only countries where they can be clear number 1 or 2.
So India will never be a focus for them. Eventually they will move to 0% even for cabs to compete, and run this business with a far leaner team. Just a technology player providing platform service and not a highly managed marketplace.

--- END POST: Uber auto's 0 commission model ---


--- START POST: Progressive disclosure, dynamic interfaces ---
URL: https://manassaloi.com/2025/02/27/adaptive-interface-progressive-disclosure.html

We have spent the last couple of years optimizing funnels. We had to. When your competition has 4X your cash balance, you have to learn to optimize and get more out of everything: your user, your funnels, and from each transaction that happens on your marketplace. How do you think about funnel optimization? You look at each segment and their journey on your product.
New users will always have lower conversion than a mature product. So they need to be treated differently than a mature user. The interface has to adapt to each segment.
A lot of people talk about dynamic interfaces on Twitter. You can take the idea to the extreme: one-time disposable interfaces, on-the-fly generated UI created by AI. But familiarity is important. No user should have to think where the call-to-action button is every time they come to your app. Too much cognitive load for the user. As with most things, the answer is somewhere in the middle. Take all user segments. For all, destination search would be key on the homepage of a ride-hailing app. But the size of the search can change. For a new user, you can use some animation to bring focus on the destination search button. You can hide everything that distracts the new user. Yes, if the user has come from a Facebook ad for rental and then lands on your home, you might want to highlight rental service on the Home Screen, but otherwise you need to make it less prominent vs search. Assume they have come to use your base service.
What matters to the new user? Call-to-action is of course search. They have not even taken a new ride. So they don’t need to have a saved addresses section. There is no one-tap booking because you can’t predict their destination, pickup, service, price, and add-ons. You need to show that they are getting a good deal. So new user vouchers need to be auto-applied. You need to give gratification to the user. Maybe some social proof that they are making the right choice (without disclosing sensitive data, not everyone can be like Zomato telling how many orders they are doing daily).
Once they have taken their first ride and are familiar with your flow, you can start progressively adding more elements on home. An adjacent point: The same component can adapt to do different things too. A card on home can let you do one-tap/quick booking. It can be continue where you left once you drop off and come back to the homepage. It can be return trip booking for daily office commuters. The component adapts based on the use case. Over time your mature users would want you to predict their behavior. Want you to cut the number of steps. Then you focus on power user needs. As I said: One-tap booking, one-tap return booking, etc. can cut the time to book the journey to 1/3 of the time normally needed to book a ride.
Now if you have a user segment service that can return the segment to the client, then you can make the whole journey dynamic. Based on action taken on home, your price estimate and service selection screen can change. You can change what you show on finding driver screen. In order summary screen, you can show different components. If it was the user’s first ride, you can ask them to save their destination once the ride is complete. Show gratification around money saved through the voucher. Even cross-sell other services if you are a super app.
The interface does not need to change based on just the user need. It can be business-driven too. Our service selection screen (that I will call estimate screen going forward) is based on a slot system, basically think of everything on the estimate screen as fitting into slots. You can dynamically change the number of slots. And also information on each slot. And each slot can handle different data types.
The image for the service type can be a gif. Instead of showing details about the service, you can have info around how many people that service type can handle. Everything is fluid. Service ordering can be based on surge, time of the day, previously service taken by the user, popular service in that area, new service you want to promote, trip distance, price, ETA, or any business metric you want to optimize. And you can change anything you want from a config service. No back-end service deployment. No client release.
Now, we are the only ride-hailing company in the world that provides multi-modal trips: by multi-modal I mean you can select services for different legs of the journey and book one single order. Services can be in-house or external. You can take base ride service for first leg of the journey to metro, middle mile metro ride (we have partnerships with public transportation services), and then final leg on ride economy. So our service selection screen needs to handle multi-modal too. We should also be able to upsell all 3 legs. Imagine the complexity.
I can go on and on, but hope this gives you an idea around how to think about different funnels and how your interfaces can adapt to their needs (as well as your business).

--- END POST: Progressive disclosure, dynamic interfaces ---


--- START POST: Taste of Indian founders ---
URL: https://manassaloi.com/2025/02/26/indian-founders-taste.html

I saw a tweet on the taste of Indian founders.
As I wrote in a post earlier, it is one of the most overused words today and everyone thinks they have it.
Fold Money probably has the best onboarding experience anywhere in the world. You can compare globally. We see Family (now part of Coinbase) and think “wow, impressive taste.”
Fold Money does not get the recognition because constantly online valley taste makers will never get their hands on it.
Swiggy and Zomato can compete globally with any on-demand app on taste.
Cred has “taste.” Yes, you might disagree on some of their design decisions. You can discuss UI vs UX. But I know people there. They spend weeks perfecting small details people won’t even notice.
Zerodha products are well designed.
I could list many more examples.
We don’t have Deep Research because of other reasons and not “taste.”

--- END POST: Taste of Indian founders ---


--- START POST: Glass like design system ---
URL: https://manassaloi.com/2025/02/25/ai-design-system.html

I really like the vibe of Nous Research. I collect different design styles out of interest.
I loved
this site
that has a collection of neobrutalism-styled components based on shadcn.
But I am lazy. I am never going to spend time on something like this, building it from scratch.
Then I saw Pietro share how he created a “glass-like” design system in
one shot
, with all the components. I got super excited and tried to do the same thing with Grok-3, Claude 3.5 Sonnet, and O3-mini.
It seemed boring to copy something already done. So I started asking myself what style would be cool. Can I get inspired by Mughal architecture? Can I try some Persian style? Maybe some Japanese style?
After a long discussion with all these LLMs, I came up with a few design systems, but none were as cool as the neobrutalism site. I will probably keep trying these experiments until I come up with something interesting.

--- END POST: Glass like design system ---


--- START POST: Utility and Status ---
URL: https://manassaloi.com/2025/02/24/utility-status.html

Utility and Status: How Jupiter and Cred can compete with banks when it comes to rewards.
Product design is all about segmentation and reward. You start at the bottom, show your proof of work, and then climb the ladder. One-size-fits-all rewards don’t work anymore.
Traditionally, credit cards have focused on utility through:
Discounts: They save you money, but they don’t really shout “status.”
Rewards Points: Useful, but they lack that status appeal.
Lounge Access: It’s both practical and a subtle status signal.
Concierge Support: A bit useful, but it doesn’t show off your exclusivity.
For a while, banks thought that a shiny metal card would do the trick. And sure, it helps - your friends notice you’re using a high-end metal card, mimetic desire occurs, and they might “aspire” to get the same card one day. But without constant online promotion making it clear that the card is for a select few, that desire transfer remains a 1-1 thing. Plus, metal cards in India rarely unlock extra benefits beyond their look. Your metal HDFC Infinia card signals your salary. It signals that you spend X in a year. It gives you a few perks, but nothing that makes you want to post on social media raising awareness about the card.
Here’s the real progression:
Utility: Basic rewards that do the job.
1-to-1 Status Signalling: Physical tokens like metal cards that hint at exclusivity.
Insider Club & Lottery: For top-tier users, it’s about exclusive access to events and people; for the rest: a lottery system that gives memorable, Instagram shareable experiences.
For the top tier, benefits have to be about access – the kind of access you can’t buy even with money. Think of Triton Poker: whales get in, pros are invited by whales, but no amount of skill gets you into the most exclusive events if you’re not invited by a pro. For tech bros, it might be an event as unique as a ‘Buffet dinner through auction.’ You have to get into the auction and pay to play.
Not everyone can spend enough to hit the top tier. That’s where a lottery system comes in. Imagine having a chance to meet an old-school Indian billionaire, a top VC, or a founder who could change your life. Instead of token cash back, this lottery turns rewards into events that people actually look forward to.
Neo banks, which can’t compete with the HDFCs on perks, have an opportunity here. For non-tech bros, the alternative might be a dinner at Mannat with Shahrukh Khan – a reward that far outshines a meaningless 5 Rs cash back. After all, people are more likely to share a tweet about a closed, exclusive event than brag about a few coins earned on an app. Actually the opposite happens today: people tweet about how coins earned on these credit card payment platforms are useless. Yes, I know Cred had rewards. It also does lotteries. But you can read the tweets around it.
[I’m not entirely satisfied with this post. Conversations with a few friends have revealed some gaps in my thinking. I am still sharing it because it might be an interesting framework to think about rewards.]

--- END POST: Utility and Status ---


--- START POST: Shakth Jaw ---
URL: https://manassaloi.com/2025/02/23/sakthjaw.html

One interesting founder everyone should study is Sanjeev Juneja. He created Kesh King, Dr. Ortho, and Pet Safa – each designed around insecurities of middle-aged Indian men. His podcast with Shantanu Deshpande is one of the highest insights-per-minute podcasts I have ever listened to.
I remembered him while listening to this My First Million podcast with a guy who has minted $100 million selling on TikTok Shop. TikTok is not available here, but it is huge in Southeast Asia. Everyone in Indonesia has a side business. You have people selling everything from umbrellas to toys. I know Meesho is trying to help creators monetize better through stores, but I think more people will become influencers in India, and they will monetize through commerce and not just ads.
I saw a fitness influencer on Instagram who is blowing up. He shows up with Ramdev. All videos are of him appearing in small towns. He won’t sell high Average Order Value items to Gen Z in Bengaluru. But he might sell to Gen Z in small towns. So everything from name to branding to distribution can be learned from people like Sanjeev who has succeeded selling in small towns.
In the My First Million episode, they were talking about “lookmaxing” for Gen Z and selling chewing gums for their jawline. What would be a similar product for Indian tier-3 town audience? Need to get Rajkumar Rao to promote the lookmaxing jawline product and sell them at the paan shops. It will be called Shakth Jaw. Distribution will be through popular influencers on Instagram Reels.
Need to create an affiliate program that will make Hustler University seem like kindergarten.
This will happen in the next 2 years.

--- END POST: Shakth Jaw ---


--- START POST: Brunello Cucinelli for X ---
URL: https://manassaloi.com/2025/02/22/brunello-cucinelli.html

Brunello Cucinelli’s playbook with a different product in a different country is a future 100 million dollar company.
Why it will work:
A nationalism tailwind.
High craftsmanship in an increasingly digital world.
Proof of work in the country and not imported from China.
Less automation, more human made.
Story led.
Community first.
Premium price point.
Distribution through storytelling on social media.
Sell to the Nikhil Kamaths of the country first.
Needs legacy (50+ years of craftsmanship). I’m not the one to build this business, but someone will.
I believe in this concept as much as Shakth Jaw for Tier 3 Gen Z audience.

--- END POST: Brunello Cucinelli for X ---


--- START POST: Windsurf marketing ---
URL: https://manassaloi.com/2025/02/21/windsurf-marketing.html

Windsurf’s influencer marketing makes a lot of sense when you understand the meta game behind it. It is important not just to hype up your product before your possible $3B fundraise, but it is also important to counter-position versus the biggest vibe coding tool currently valued at $2B, and thereby using this competitor as an anchor for pricing their next upcoming round. If you saw Friday email’s recent video and how they were subtly counter-positioning versus Superhuman, you will understand the marketing efforts of these AI companies better. Working in Southeast Asia and seeing how Chinese founders operate has made me appreciate The Art of War a great deal, and it is lovely to see various tactics being deployed on our timeline.

--- END POST: Windsurf marketing ---


--- START POST: Will AI take a PM's job? ---
URL: https://manassaloi.com/2025/02/20/ai-pm-jobs.html

A lot of PMs DM me worried about the future of product management. I don’t give specific advice. And I think most advice is just asked to receive confirmation bias. But here is something I have been writing even before AI became popular and people started debating role definitions.
I was a developer 10 years back. I did a 6-month internship as an Android dev, then 6 months as a dev, followed by another year of backend work. But I was a Stack Overflow developer. I did enough that I never got fired. But being good at it would have meant the same amount of effort I later put into PMing. I think about products all the time, while for development, it was always at the higher level of abstraction.
I would see null pointer exceptions a few times on Eclipse and give up. When I had to figure out edge cases, make sure how to take my code to production, and think about scalability, I would give up. But now I am having fun with Cursor, coding random things I wanted. But no one would hire me as a dev. I am not exceptional at coding. But the funny thing is that most people pretending to be exceptional here are not exceptional either.
My question to myself when I was a dev: I had a 6.7 CGPA in my undergrad CS degree at BITS. I was in the middle of the bell curve. I was middle of the bell curve as a dev too. I could have worked hard and become an EM/TL in 10 years, but I did not want a slow path. And again, I was more interested in breaking down landing pages, reading posts on how products grew than figuring out why I could not fix some issue at my day job.
You need to care. Caring is everything. It is what separates the best people from the average ones.
How was it different in product? I have never shared this, but I became a PM 2 years out of college. I knew I would become a Head of Product by the time I was 30. I started getting such offers from startups without even going out to look for jobs. And the people who have worked hard under me had accelerated growth too.
What do I mean by working hard? Here is an example. When I started leading growth and new initiatives for mobility, I wrote a 40-pager with my PM on terms and definitions, got all dashboards made, did growth equations, and broke down how we can grow more. That PM became a GPM after 2 years in product and is now an Associate Director for a soonicorn. A lot of ideas there became part of my “Frameworks to think about growth” series.
When another PM took up pricing, we wrote a comprehensive document on how to think of pricing. I can challenge that there won’t be any doc out there which is as in-depth on marketplace pricing as that one. That person ended up being HOP for Ride hailing under me.
Another PM wrote a 30-pager (maybe more) doc on loyalty. In my 6 years at one of the leading super apps in South East Asia, we have tried almost every program to increase engagement and retention: cash back, points, subscriptions, passes, loyalty clubs, and what not. That PM ended up heading our consumer logistics product.
You are a PM at Razorpay? Think how you will grow Razorpay in international markets. Write a 50-pager doc. Go deep. And I mean really deep. Don’t use ChatGPT. Sit and think.
You are a PM at Zomato? Think about variable pricing. Write a doc on your pricing strategy.
Yes, best is if you are writing these docs that are relevant to your role. But you can do it for anything that you are interested in.
I knew that unlike when I was a dev, if I ever needed a product job I would just write a comprehensive doc, go deep into some particular company, some particular problem statement inside the company, and email the CEO about it. (And yes, that is what I used to do at the beginning of my product career.)
No one knows where the world is headed. There are people who write docs defining functions. And there are people who think deeply about their work and put in the hours. Be the latter.

--- END POST: Will AI take a PM's job? ---


--- START POST: Consumer founders = Pump dot fun creators? ---
URL: https://manassaloi.com/2025/02/19/consumer-pump-fun.html

“I skate to where the puck is going to be, not where it has been.” Pump dot fun. And the end game for software founders.
“I skate to where the puck is going to be, not where it has been.” is a famous quote by Wayne Gretzky, one of the greatest ice hockey players of all time.
Gretzky was highlighting his ability to anticipate the movement of the game rather than just reacting to the current position of the puck. Instead of chasing the puck where it is at any given moment, he positioned himself ahead of time based on where it will be. This quote is widely used in business, technology, investing, and leadership to emphasize foresight and strategic thinking. It encourages people to predict future trends and position themselves accordingly, rather than focusing only on the present situation.
Bitcoin Mining & Proof of Work → Value from Computational Effort.
Early Bitcoin miners had to invest real world energy and computing power to generate new coins. There was proof of work in Bitcoin mining. Value was tied to computational effort.
Meme Coins & Pump dot projects → Value from Attention.
When creating tokens became trivial with cost approaching zero, the value shifted from computation to attention. Tokens stopped representing proof of work; they started representing hype.
Yes, there was a phase where proof of stake replaced proof of work, but it was transitory.
“I skate to where the puck is going to be, not where it has been.” The end state was pump dot fun creators engaging in extreme antics to grab attention because attention = liquidity = price pump.
AI Generated Software → Zero Cost Code Creation.
AI is making it easier to generate software from simple prompts. If this trend continues, entire SaaS businesses could be spun up in minutes.
The competitive advantage won’t be who can build the best product. It will be who can get people to care.
“I skate to where the puck is going to be, not where it has been.” This means the logical conclusion will be that B2B founders will start behaving like pump dot fun memecoin creators, taking dumps in front of a camera to sell software products.
B2B Founders will be Attention Hackers.
If everyone can generate an AI SaaS instantly, traditional GTM strategies will collapse into pure attention hacking.
Instead of carefully planned sales cycles, we would see:
Outrage marketing where founders stir up controversy just to get noticed.
Stunts & viral antics like CEOs live streaming ridiculous challenges just to make their product go viral.
Meme first software launches where the brand/story matters more than the tech itself.
The best software won’t be the most useful, or the one with product moat. It will be the most viral one.
There won’t be any difference between B2B software CEOs and meme-token creators.

--- END POST: Consumer founders = Pump dot fun creators? ---


--- START POST: AI space volatility ---
URL: https://manassaloi.com/2025/02/18/ai-startup-lindy.html

An example
of how volatile and competitive the AI space is. My last job was PMing a B2B SaaS product, and the biggest anxiety customers had was us shutting down. They used to say: “What if we move to your tool, become dependent by building workflows around your tool, and you shut down? It is better for us to rely on something Microsoft/Google provides.” Slack also became stable over time. Yes, every customer is trying every AI tool available today. But soon they will start relying on the stable ones with traction.

--- END POST: AI space volatility ---


--- START POST: Quick commerce price comparison ---
URL: https://manassaloi.com/2025/02/17/quick-commerce-price-comparison.html

I have had people pitch me
this idea
for years now, both for ride-hailing as well as other marketplaces.
It does not work.
All marketplaces already use their competitors’ prices as anchors for their own pricing. If you can scrape prices of items on these apps and display them on a UI, be confident that these players are also doing the same.
However, base price does not determine the final price you pay.
Every user segment (read my differential pricing post from December 8, 2024) will have different add-on fees and discounts.
Therefore, you cannot accurately calculate the final cart value.
Even worse? There is no solid business model here, at least for a quick commerce pricing aggregator. The affiliate model won’t take off. There is a natural friction between affiliate products and merchants. Margins are already low, and merchants will want to own the user relationship. They want users to open their app by default instead of going to an intermediary.
15 years back this model used to work. E-commerce was new. Every site wanted traffic on their platform, so coupon sites were pretty popular. Over time, affiliate commissions declined and many of these products became irrelevant.
Yes, you can run ads, but the revenue won’t be meaningful enough. Additionally, the discrepancy between pricing you show and what users will end up paying will lead to low retention.
It is important to argue both sides. So here is me trying to find reasons this might work.
Let’s say there is an actual shift in user behavior. This is again the kind of idea everyone loves. Everyone loves to talk about aggregators. For a price-conscious user, there is definitely a use case for comparing prices across multiple quick commerce apps.
This is why there was a lot of traction and love on the tweet about this website’s launch.
A few hypotheses:
The product actually works. I explained why it does not work - base price is not the same as cart price. But let’s say it does work. It has some accuracy and users develop this behavior of opening this website first. It captures the top of the funnel for quick commerce.
There is some data on people clicking the prices and they can show that they are influencing user behavior. This is easier on websites as cookie tracking works, but harder on apps. I talked about natural conflict between merchants and affiliate providers, but once the world moved to mobile it became harder to track user behavior across apps. And traffic on web is way too low compared to apps.
Yes, you can provide some coupon code that works on the mobile app. But then why would merchants provide you with a coupon so that you can own the top of the funnel and train users to come to your site to get coupons?
Or merchants create campaigns on some attribution tool and share these campaigns that deeplink the user from the affiliate to the app. And they can see how many users came from the affiliate and ended up purchasing in the attribution tool.
[My knowledge of attribution is a decade old, and I know Apple is making it harder to track users. So ignore if I am wrong.]
Let’s say somehow they figure out how to do that too - use some identifier across the funnel to earn attribution. Then you need to have the power to earn affiliate fees for directing traffic. You should be able to say, “Hey, I own top of the funnel. I show Zepto, Swiggy, Blinkit, Amazon and Flipkart Minutes. If you don’t pay, you won’t be there as an option and will lose a lot of orders.”
Or you get some upstart like Flipkart Minutes that does not have enough traffic yet, does not own the mindshare of quick commerce users, and tell them you would put them at the top of the options, and you can earn some ad revenue from that. Flipkart Minutes or Amazon is not the BUMO (Brand used most often). They are probably not even in the top 3. So they can use this product to position themselves versus the others, show far lower prices, and influence user behavior. And once they get enough users to come directly, they can stop paying this site.

--- END POST: Quick commerce price comparison ---


--- START POST: Zomato Nugget ---
URL: https://manassaloi.com/2025/02/16/zomato-nugget.html

I saw Zomato’s Nugget announcement.
It makes sense that Zomato would want to continue stacking S-curves.
Yes, people might draw parallels with Amazon’s AWS.
An e-commerce company providing B2B SaaS.
Why does it make sense for Zomato?
I think with them renaming their company Eternal it was clear that more products are coming under the Eternal umbrella. And there won’t be brand dilution.
Facebook is Meta now. And Meta is into everything.
Zomato is in the same way Eternal.
B2B sales is also not an issue. I am sure Zomato has a stellar sales team that has been selling to smaller merchants as well as giants like McDonald’s.
Amazon started on-demand cloud infrastructure at scale. Everyone thought what they were doing was a joke. It led to the creation of millions of small businesses over the next 2 decades. Companies did not need to provision hardware anymore. You could scale your infrastructure as your demand scaled.
Amazon had a huge e-commerce business and had already invested heavily in servers to handle peak holiday season traffic. For most of the year, a significant chunk of that server capacity was sitting idle. By offering Infrastructure as a service, Amazon found a way to monetize these underutilized resources. They turned their biggest cost center, server infrastructure, into a profit center.
Bezos made Amazon transform internally into a service-oriented architecture and use their own offering internally. Read: Stevey’s Google Platforms Rant (a classic).
I am sure Zomato has used Nugget extensively over the last 3 years. And the product offering is strong. It is an AI native no-code product that a lot of companies will find value in.
Parallel
2000s
: Cloud took off and Amazon built a trillion dollar new business.
2025
: Zomato riding the AI wave and offering their customer support solution (and who knows maybe driver allocation, pricing, demand prediction, chat, and other tools) in the future to customers to scale.
This would of course make sense if Zomato was sitting on GPUs that they were using to run their AI products, and were underutilizing them, and wanted to spread the operating expenses by providing AI solutions to customers. Turn their cost center into revenue like Amazon did 20 years ago.
I am not sure if this is the case.
I don’t think they have their own infrastructure. They are probably using AWS.
Let’s say the solution is part AI and part human in the loop.
It is not like they have 1000s of call center employees, and operations people, and they are again driving utilization of their resources by offering managed services.
So this is just a traditional SaaS offering. And they are competing with every customer support solution provider who are also going to provide outcome based pricing and leverage AI.
Remember when AWS came in, infrastructure as a service was not mainstream. Pay per use was not mainstream. It was not just a new product offering, but also a new pricing model. There were hosting providers, but AWS made it easy for anyone to start a company without committing to long hosting contracts and provisioning a huge infrastructure.
So yes, I am not sure about the play here.
Stock performance is a function of both narrative and numbers.
Quick commerce market is expanding but there is fierce competition. Consumption is slowing down in India. Discretionary spending in food too? (guess, not backed by data).
This move then helps with the narrative.
Only time will tell if the numbers follow.

--- END POST: Zomato Nugget ---


--- START POST: Nobody cares ---
URL: https://manassaloi.com/2025/02/14/nobody-cares.html

Probably not the right tweet for Valentine’s Day, but this post by Ben Horowitz holds true not just for founders, but for everyone.
I used to have a mentor. She had interviewed me for a job I landed. I used to often reach out to her for advice (but mainly to complain about work issues) until one day she told me to stop crying and figure out how to operate despite the various issues at office (real or imaginary).
All companies are messy. There’s politics. You won’t like everyone. Stop complaining and do your job.
This was roughly the advice.
I was upset then. I felt betrayed. But it was the best thing anyone did for me.
People will think the takeaway is that you should continue in a toxic environment. It is not that. I keep telling people that every company is broken in its own way. You decide what you care about, the things you are willing to tolerate, but also your non-negotiables.
No matter what you decide though, just know that it is your decision. People might give some sympathy. You might get the confirmation bias you want. But no one really cares. Apart from you. Other people have their own battles. Their own decisions to make.

--- END POST: Nobody cares ---


--- START POST: Mahabharata game ---
URL: https://manassaloi.com/2025/02/12/mahabharata-game.html



--- END POST: Mahabharata game ---


--- START POST: Learning path ---
URL: https://manassaloi.com/2025/02/11/learning-path.html

I was telling someone I mentor yesterday: You can decide your own learning path. I am saying learning path, and not growth path because growth has a lot of factors that you might not be able to control (org structure, politics, luck, macro).
Yes, you can ship products as a PM. But you can also read specs of other PMs. Chat with them and understand how they built some of their products.
You can read books on design. You can pull data of your own products, and you can definitely look at data of other products in the organization.
Taking notes is free. Take tons of notes. I have been writing online for 10+ years now. On various platforms.
Every time I write, I have to think. And repetition matters.
So you can have a far higher learning velocity than most people. This might not lead to an accelerated career, but you will have less imposter syndrome at your job.
Now coming to growth path. You can hack it too. I have joked to my managers in the past that I have notes on all of them. I know when people gaslight me. I know the games people play at the top. I look for signs. [Don’t do it in poker, but in real life.] I try to predict what games people are playing, and see if I am right. I tell myself I don’t need to play unnecessary games myself because what is the point of reading a thousand books, thinking and writing so much, if you just turn yourself into a 30-year-old Indian Robert Greene for that extra promotion. But I can. If I want.
So yeah, try to separate learning from your day job. It will lead to an interesting life for you.

--- END POST: Learning path ---


--- START POST: People will shit on you anyway (part 2) ---
URL: https://manassaloi.com/2025/02/10/people-shit-part-2.html

If you are a manager, your reports will probably talk negatively about you on grapevine.
If you are a CEO, your managers will criticize you on Glassdoor.
If you are a VC, your (as well as other) founders (as well as anonymous strangers) will criticize you on Reddit.
The fun part is anyone can make anything up.
The realization you have after spending time on social media is that a lot of people are just waiting to pull you down.
I know if I end up becoming even semi-successful, a lot of anonymous users will mock me too.
Sam Altman can’t escape it. Elon can’t.
At this point, you can’t even write Chamath is probably not an idiot and has some smart takes. He is far more successful than most of us on Twitter.
Did he dump his SPACs on retail? Yes. People were also greedy and jumped on the stocks to make a quick profit.
So you probably can’t escape this. The rise and fall of a person used to take time. Now cycles are shorter.
One piece of advice someone gave me is to be low status and never tie your social media account and public persona with your self-worth.
Have I joked about Naval? Yes. It is just funny sometimes. Would I swap my life with Naval’s? Yes.
Same with a lot of other successful people. It is okay to accept that we all have that critic inside us. The problem is when you think your criticism is actually justified and is not mimetic theory playing out.
I still remember the time when I made a comment on some internal Slack thread saying ‘we are overindexing on the input from one user and we can’t change our entire roadmap based on one user’ or something like that, and some person leaked it to the biggest corporate meme page in Indonesia. And a post came out saying ‘Indian PM says users don’t matter’ or something similar. This is how the world works.

--- END POST: People will shit on you anyway (part 2) ---


--- START POST: Why is Facebook's stock ripping? ---
URL: https://manassaloi.com/2025/02/09/facebook-stock.html

Someone on Twitter asked: Why is Facebook’s stock rising despite no innovation?
Here is my answer. Before we start, a gentle disclaimer: I have been shilling Facebook stock for a while now. I would have put far more money into Facebook if I had money, if it was easy to remit outside, if I trusted these US stock investing apps more, and if there were no estate tax in the US. I regret not being able to put more money on Facebook when it was down.
But here is why I had invested in Facebook: Most people do not understand this simple thing: Any big move, regulatory or platform, probably affects the rest of the market far more than the leaders who already have different moats and capital to navigate the change. If hosting open source models is banned in the US, if there are stricter regulations around AI, the incumbents with their army of lawyers, their ability to lobby and help shape the regulation, their army of developers who can figure out alternatives, and their existing data, would actually help them and crush new competition/the ones who can’t afford the same. Even with GDPR, big tech players ended up strengthening their position while smaller players struggled. When Apple made it far harder to use identifiers to track users citing privacy (but actually to increase their own non-hardware revenue due to slowing sales), Facebook simply used their vast data on users, not just internal, but across the web, to identify without the identifiers most advertisers rely on.
Did ad performance degrade a bit? Maybe. But if earlier you were using Snapchat and other platforms to run ads, spreading your marketing dollars, you would see even worse performance in these other platforms, and you would just invest all your ad dollars in Facebook: the platform that can still give you high return on ad spend. Facebook is the best growth machine ever invented. A D2C founder if they get $2 out of $1 spent will just keep investing until they squeeze the last dollars out.
Facebook across all its products has massive TAM. Most founders can’t be masters at all channels: SEO is hard, Google keeps changing the rules, organic depends on various factors and not every founder is capable of building their brand like Deepinder, so you want a channel where you can keep spending money each month and hit your growth targets. Yes, Google is also decent, but ask most founders and they rely on Facebook ads to grow.
This means Facebook would still win. More ad dollars flowed because other ad platforms were not able to adapt to Apple’s changes. New platforms won’t even bother competing now on ads. They don’t have enough data. They don’t have enough smart developers who can figure out how to track after all these changes. Facebook’s position is stronger than before these privacy changes. Yes usage is a bit stagnant for the core products and TikTok could have come and taken their share of revenue, but with the uncertainty around TikTok now, Meta will continue to print money. Meta has also perfected copying anything that comes out of other players like Snapchat, TikTok etc. No one can copy as well as Zuck.
VR/AR are still cost centers. I think it will take time to see how these play out. AR has not taken off, but Apple AR also was a dud. So no scare about a new platform coming in from Apple or Google that Facebook can’t control and has to pay tax on. Meta’s AR project looks cool. And now that Oculus is finally at the price point of a cheap Android phone, VR might actually take off. Papa Zuck won’t slack this time. He will want to own the next platform. And he is young. Adapts fast. See his persona change over the last 2 years. His relationship with Trump and Elon now. If nothing, he can just lay off people from time to time and make the stock pump. Especially when he needs to send the signal to Wall Street that they are serious. I am bullish on Meta.

--- END POST: Why is Facebook's stock ripping? ---


--- START POST: South East Asian app design ---
URL: https://manassaloi.com/2025/02/08/south-east-asian-apps.html

I was joking with someone that Southeast Asian apps feel a bit schizophrenic because they mix Western (US), Eastern (Chinese), and Indian sensibilities. He brought up the topic, but it is something I have personally observed too.
Founders study in the US and initially build an app that feels like a product built in the valley. Clean UX. Focus on visual elements over text. Over time they look towards the east for inspiration because a lot of cutting-edge stuff in consumer technology is led by China. So the aggressive engagement playbook is adopted. Focus on UGC and gamification becomes important. Every empty space on the UI needs to be filled.
Meanwhile, the PMs adapting most of these ideas from the East and West for the Southeast Asian audience are mostly Indian. They are also using their experience with Indian products to drive UX decisions.
My friend was joking that you can look at different flows in these apps and figure out the inspiration behind them.
It is a beautiful mess.

--- END POST: South East Asian app design ---


--- START POST: Topmate discourse ---
URL: https://manassaloi.com/2025/02/05/topmate-discourse.html

Topmate Discourse Summarized: A founder with $50 million networth selling a UseIntro slot for $5K on how to fundraise is equivalent to someone 2 years out of college, with $25K savings selling 200 rupee slot on how to get a referral.
Topmate’s issue is that it is low status. UseIntro is not. The high number on UseIntro, even if the proportion of cost/networth is the same, makes people feel they are getting premium access. Also assume these successful people are using it as a filter for top of the funnel access.
The low number on Topmate causes a visceral reaction. You are selling your time for the cost of a meal on Swiggy? This leads to questions around legitimacy. Though some of these people might be using a price barrier as filter too, so that only serious people reach out to them.
This is similar to Cameo. Initially everyone was excited to get birthday messages from celebrities. Then they started asking which tier of celebrities will be doing greetings for 100 dollars. Instead of it being a high status thing to get a message from these celebs, it became low status. “Wow, the best you could do was this C-grade old TV actor doing birthday greetings?” This is why Cameo’s growth also plateaued. A fun gimmick. Nothing more.
This is a pretty interesting problem statement for marketplace PMs. Marketplaces want to lower cost so that there is more demand and market expansion.
This is why Swiggy had Swiggy Pop.
Zepto has their own version of DMart sale.
And of course they then upsell on the flow. Try to increase your frequency of purchase. Layer on more fees later. Give less discount. And try to extract more from its power users.
In marketplaces with the status angle, high-ticket items (Shreyas Doshi) won’t participate with a PM with one year experience selling referrals. So most supply will be homogeneous (in terms of their experience, status in the eyes of demand, and skillset). Demand side (referral and career advice seekers) will be homogeneous too. You can’t segment them more and extract more LTV. A middle manager hoping to be an exec is probably not looking for mentoring on Topmate.
So maybe treating this marketplace like Fiverr is the way to go. Low status. No one is proud of selling referrals for so low. Question is as supply becomes high status do they churn? Do they stop putting Topmate links on their bio? This would decrease top of the funnel for Topmate. In the future will it become low status for even early employees to have a Topmate profile?

--- END POST: Topmate discourse ---


--- START POST: AI coding workflow ---
URL: https://manassaloi.com/2025/02/04/ai-coding-workflow.html

I spent 5 hours on Cursor today. Here are some of my findings. Might be obvious to some. But this is the way I will do my next projects to save a lot of pain later.
Make a project plan. Get help from O1.
Go to design inspiration sites. Find a few you like.
Bring them to v0 for inspiration.
Don’t take the screenshots to cursor and ask for one shot generation.
Do it step by step.
Define the grid system first.
Create a brand playbook with details on font, colour, spacing, sizing info.
Think responsiveness. Mobile optimised from day one.
Add cursor rule to check existing files before creating new files for every small thing. Example: All css must be on the existing scss file already generated by jekyll. Explain to Cursor what each file does. Maybe add the details to the cursor rules file.
Ask cursor to explain and then code. Especially complex layout pieces.
Before each prompt, ask it to explain the flow. Where is the element defined: which html page, where is the css for this element defined, etc. If there is any JS involved, ask where it is defined again.
Otherwise Cursor will just create a lot of duplicate classes and get confused later.
If styling is not applied, it is probably because of clashing css.
If stuck, use repoprompt and copy/paste the entire codebase to O1 and ask.
Hallucination is a real problem. You’ll get stuck in endless loops if you don’t understand the details.
Take screenshots of the generation that are not good, ask  Cursor to compare it to the image you were trying to copy, and ask it to explain the difference between the two. Then ask it to code.

--- END POST: AI coding workflow ---


--- START POST: Transparency paradox ---
URL: https://manassaloi.com/2025/02/03/transparency-paradox.html

The paradox of transparency in the COT of reasoning models and why OpenAI plans to show a summary instead of the real COT:
Deepseek provides full transparency into how R1 thinks:
This leads to users trusting their model more because they know exactly how the model arrived at its output.
BUT
It also leads to mistrust because you can see the model self-censoring in real time (Tiananmen Square) and the biases and inconsistencies in its thinking are also exposed.
Do you trust a model’s output more when you can see all its flaws and make better decisions based on more information? Or do you rely less on the model because you know it is like any human being: flawed.

--- END POST: Transparency paradox ---


--- START POST: Fat vs Thin AI startups ---
URL: https://manassaloi.com/2025/02/02/fat-thin-ai-startups.html

Whenever I talk to VCs, I tell them  that I don’t think thin-wrapper AI products from India are venture scale products. Unless they are world class. Because the cost of inference is the same whether you serve customers in India or the US.
Your CAC may be lower if you acquire users here, but the opex remains the same. The opex of the tier-1 companies from India that have gone public in the recent past is a lot of offline costs. Hence business models that have not even worked in the US and Europe has crushed it here. In South East Asia, everyone is asking how can we like Swiggy, Zomato and Zepto. Yes, Zoho has also won, but they have been grinding for decades and they win on lower costs.
So in AI, you either stay small, bootstrap and build something like Basecamp. OR go big. Own the underlying asset. Roll up hospitals. Call centres. Cut costs by using AI. Take more risks.
Now everything has changed with deepseek and the step change of lower cost and the ability to adopt open source. Low LTV, price sensitivity of users, and lower free to pay conversion in India doesn’t matter as much when CAC and opex is low too. Yes, you are still competing with the US  AI companies, but they will always price higher to compensate for their high CAC. So you can win on cost again.

--- END POST: Fat vs Thin AI startups ---


--- START POST: Uber charged me more ---
URL: https://manassaloi.com/2025/02/01/estimate-actual.html

I saw the
this tweet on x dot com
. Here is my take:
A ride-hailing marketplace must balance the needs of both sides: users and drivers, while earning enough revenue for the value provided.
Most drivers prefer pricing based on actual distance and want platforms to incorporate time-based factors, especially during peak hours with heavy traffic. This approach aligns closely with how traditional taxis operate.
The estimated fare combines a surge multiplier (based on historical data and real-time supply-demand data) with the standard base fare (government regulated). The final fare is calculated using total time and distance.
Drivers see the fare labeled as an estimate. They believe they should earn more if they provide additional service beyond the estimate. However, ride-hailing platforms already incorporate surge pricing.
Notably, traditional metered taxi rides often generate less income for drivers compared to ride-hailing apps. Uber implemented this pricing model likely in response to driver feedback, particularly in Western markets where hourly wages are higher and freelance drivers expect better time-based compensation.
Users, however, prioritize pricing predictability. They interpret the estimated price as fixed rather than approximate. They avoid surprises at trip completion – if they wanted price negotiations, they would opt for street-hailed transportation.
The challenge extends beyond expectation setting to trust preservation. When users perceive pricing as arbitrary or deceptive (even if it isn’t), their sense of fairness diminishes. They assume the platform’s system already accounts for traffic conditions dynamically.
Drivers also value earnings predictability. They prefer upfront pricing to evaluate trip worthiness but welcome additional compensation for extra effort.
These marketplace dynamics affect internal company operations as well.
Different departments – Business, Operations, Driver Support, User Experience, Strategy, and Customer Support (managing refund decisions) – often have competing priorities.
The solution requires educating both sides and setting clear expectations through standard operating procedures.
Implementing transparent fare breakdowns in the app can reduce frustration, while proactive refund mechanisms help maintain trust.
However, this remains a complex challenge.
The core issue isn’t about pricing models but user psychology: once customers feel deceived and that perception spreads among users, explanations alone cannot restore trust.

--- END POST: Uber charged me more ---


--- START POST: Ackchyually, Quick-commerce is damn hard ---
URL: https://manassaloi.com/2025/01/31/quick-commerce-hard.html

I know people generally post things on Twitter mostly for bait, so I should not think too much about this, but it makes me really sad to realise how much people undermine quick commerce in India. All the tweets about India’s innovation being 10-minute delivery and astrology and the engagement they get show people don’t understand how difficult it is to run delivery at scale.
E-commerce is all about low prices, wide selection, and fast delivery.
It’s an extremely difficult challenge to provide all three elements. This challenge is similar to the blockchain trilemma of ensuring all three aspects - scalability, security, and sufficient decentralisation - are addressed.
No one has solved it yet.
People might argue 10 min delivery is not as complex as deep tech, building a foundational model, but it is truly challenging. I understand this challenge’s complexity because I’ve worked on marketplaces for six years and have had countless conversations internally and with VCs and founders from both India and Southeast Asia.
After two decades, after building fulfilment centres across the U.S. and achieving over 70%+ Prime penetration in U.S. households, Amazon still can’t match the convenience we enjoy in India. Some can dismiss our achievements and say oh it is just cheap labor in India, but that’s incorrect. Labor prices determine delivery unit economics, but they don’t account for the thousands of micro-decisions and supply chain optimisations needed to make 10-minute delivery possible.
Previously, no one attempted it, before Zepto shown it is possible, and now we have multiple quick commerce companies doing 10 min deliveries, and other e-commerce players have followed.
In India, we have managed to achieve
10-minute delivery
at a
reasonable
price [I had written
right
earlier, but then remembered people will complain about their 10 min Dhaniya being twice the price as the neighbourhood kirana store], and all quick commerce players are now trying to expand their selection. Once you establish how to deliver Diet Cokes in 10 minutes and create the supply chain infrastructure, and SOPs, you can extend it to medicines and other essentials.
These companies are have also entered so many tier-2 and tier-3 cities. Previously, in these cities, fast delivery was unimaginable. Services catered only to premium customers, as if convenience and speed were luxuries only high earners deserved. But now, even people who never imagined getting items delivered in 10 minutes receive them at
reasonable
prices. And I think they deserve a lot of credit and not memes comparing their accomplishments to Deepseek.

--- END POST: Ackchyually, Quick-commerce is damn hard ---


--- START POST: Should ChatGPT allow pinned chats? ---
URL: https://manassaloi.com/2025/01/30/chatgpt-fav.html

I have been using this prompt that I found on Reddit for editing my blogposts. In the past, I have tried editing workflows for turning my Twitter thoughts into blog posts, but most models would just rewrite the entire post. It wouldn’t sound like me, how I write, and people would easily tell it was written by AI, even though most of the ideas were my own thoughts. But this prompt is a bit different. It would just fix typos and grammar, add transition words, and if there are redundant words, it would remove them.  Sometimes it makes mistakes. For example, when I wrote a post about AI funding in India, there was a line about Donald Trump, and it rewrote that line to suggest Donald Trump was not the president, which was pretty suspicious.  And for the first time, someone asked if I use ChatGPT to write, which I wasn’t. I know an easier way would be to finally read books like Word Power Made Easy and  Wren and Martin, but let’s face it, I’m too old now. And I am way too lazy to improve my writing.  Okay, now back to the main point.
I was thinking, since I have this prompt and it works well, I wish there was a way to ‘fav’ or ‘pin’ this chat tab.  Then, I could just keep dumping my twitter threads and raw thoughts into it, instead of keeping the prompt in Apple Notes and copying and pasting the content into new chats each time. In the past, I’ve given more subsequent instructions to the model to get the exact result I want. It doesn’t get it right in one try. I have to keep trying and improving it, doing the same process many times. This means every time I use the edit flow I have to give instructions again. I would be repeating myself.  I thought, if I could ‘fav’ it, like ‘pinning’ it, it would be much easier to access this editor on the left sidebar. But here’s the thing, this is what I want to do.  When designing something, you have to think about both the user (me) and ChatGPT (OpenAI). So, I want to fav my chat because it would be easier for me to pin these workflows and continue the conversation. But let’s think about it from ChatGPT’s perspective. Why haven’t they added a ‘pin chat’ button yet? The first question is: how does ChatGPT see our chats?  Are they like  -stand alone messages on WhatsApp (one off messages with a few replies). - message threads on Slack (thread where multiple adjacent discussions can happen but over a topic). - one-on-one chat window like on WhatsApp with a contact that has a permanent history of all your conversations.
 As a company, they care about what users want, but they also want to guide users to behave in a way they desire.
Now, let’s assume that the framework I have of my interaction with any chat product is -  one off chats (mostly).
workflows where I am using the model to act as a specific person, my editor, my nutritionist, my advisor, my sparring partner. Do I name my chats as these folks? And go to them for my job to be done.
 Also what is the frequency like? Do users end up creating their workflows, have dedicated chats with their  or do they take each chat as a standalone chat.
People are saying in the future agents will do the work and there will be separate agents workflow. But for now agents are just the same model as brain, ability to function call, and with a longer memory.
Let’s assume most users won’t move to
agents
platforms anytime soon, and will rely on the normal chat apps.
Does OpenAI intend for chats to be long and ongoing, with users returning to the same chat? That is when pinning/ fav’ing a chat comes in.  The problem with this approach is that foundational models perform worse as chats become longer. The context window increase. The models
forget
. And instead of blaming the increase in context size, a normal person will probably blame chat GPT itself and say that it is not good enough.
Even the cost of serving the user, the inference cost, becomes higher with the increase in the number of input tokens. Every additional token requires more computation.  WhatsApp chats, Slack channels get pinned because users want an easier way to access them and continue the chat.  Here you probably don’t want to continue the chat.
How would you fix that? 
For a long time, I have wondered what is the best UX for when it comes to get users to move to a new chat when you are working on coding projects on Claude.
With Claude projects you can share more context, you can upload files, and the model performs better when you have provided additional context.
However, the challenge is that after a while, Claude repeatedly prompts you to start a new chat.
Currently, people have figured out solutions, such as asking the model itself to explain and give a summary of the current chat window, and then copy-pasting the summary as context for the new chat they have to start.  But it is time-consuming. And not intuitive enough.  People might not write the right prompt to summarise the chat, and we know how much the model can fail to accurately summarise a previous discussion. Therefore, the question is, where do you build a summarizer? How do you improve this workflow?
Ideally, in a good workflow, the solution to fix the model’s decreased performance as the chat window grows should be require input from the user.  If I am working on a coding project I would probably want that chat window to continue. It is not easy to go through past chats. It is not fun to leave midway and start a new chat. Have multiple chat windows for the same project.  Yes, you can break down your work. Create smaller tasks. Have a chat open for each task. Move to a new chat for the next chat. But again it is sub optimal.  I don’t want Claude to repeatedly prompt me to start a new chat. 
 How can we have a single view?  Each chat has a unique identifier (chat ID), and when you start a new chat, it’s treated as a completely new session, with context limited to that specific conversation—not your entire chat history for that project. But what if there were a middle layer to manage this transition more seamlessly?
It will be an automatic summarisation layer.
Imagine a system where users can continue working within a single long-form chat, but behind the scenes, the conversation is periodically summarised and stored. Rather than opening a new chat when Claude suggests starting fresh, the system could generate a summary, start a new chat in the background with a new chat ID, append the summary, and pass that condensed context forward. This way, the model retains relevant information without overwhelming its context window, and users don’t have to worry about managing multiple chat sessions.
This approach could significantly improve the user experience—keeping conversations fluid while ensuring model performance remains stable.
While this is a high-level idea, it would be interesting to see how Claude and OpenAI are thinking about solving this problem.

--- END POST: Should ChatGPT allow pinned chats? ---


--- START POST: Why Indian VCs won't fund foundational models ---
URL: https://manassaloi.com/2025/01/29/ai-funding-india.html

There are three ways to fund an ambitious project like a foundational AI model:
1/
Free Cash Flow from an Existing Business:
Xerox PARC was a hub of innovation in the 1970s, pioneering cutting-edge technologies (though it did not commercialise them). Many companies, including Apple, took inspiration (stole) from PARC. It attracted some of the brightest minds in computer science, actively recruiting from top universities. Today, DeepSeek has emerged from a quantitative hedge fund, leveraging its financial resources to develop AI models. Some speculate that DeepSeek is backed by the Chinese government, but assuming it has sufficient GPU resources and follows the past research from OpenAI’s, its progress is plausible. While Google, Microsoft, and others are investing heavily in AI (e.g., Gemini and Phi), India lacks trillion-dollar companies capable of independently funding foundational AI research, ruling out this option.
2/
Venture Capital (VC) funding:
Venture capital works well in the US, where investors take higher risks and operate under a portfolio strategy, rarely investing more than 10% of their fund in a single company. Large-scale AI projects require mega funds to co-invest—OpenAI and Anthropic are prime examples.
Since Indian VCs are more risk-averse, they tend to invest in startups that have a path to a liquidity event, chances to raise follow-on capital from bigger US funds (as well as sovereign funds). US funds and sovereign funds won’t invest in Indian foundational models because they can easily deploy in market leaders like OpenAI and Anthropic. They have global TAM, lead in usage, and have the willingness and ability to build better frontier models.
This is why Sarvam is the only model that has a chance because they have come up with their own model. They have one co-founder who was the Chief Project Manager of Aadhaar and another who was teaching GPU programming at IIT Madras in 2018. They are probably the only ones who have a chance to make it as a VC-backed Indian foundational AI company. Even then, when I meet VCs, a lot of them question if their TAM is big enough (Indic languages focus vs English where global players can win). I would bet they will be the ones working with Government of India, like Anduril and OpenAI in the US.
Krutrim, I will ignore. You can’t compete with OpenAI and Deepseek when it is not your major focus.
3/
Government sponsorship and funding:
This is where it gets interesting. Look at the success of ISRO as an organisation. Consider major projects like UPI and Aadhaar. When the government commits to an initiative and provides adequate funding, large-scale projects can succeed. The question is: will they do it?
I believe they will. Modi’s government needs a major success in its third term. After two decades of patriotic sentiment, people are now questioning: why are we so far behind the US and China in every domain? The US was always ahead, and when Sam Altman dismissed India’s AI capabilities, people acknowledged that we haven’t historically produced frontier AI talent—India has primarily been a service-based economy. But now that China has demonstrated the ability to build next-generation AI models using past frontier research, the question is no longer if but when India will develop its own competitive AI model.
Donald Trump remains unpredictable. It’s unclear what AI-related regulations he might introduce. India has had access to top AI models so far, but with growing fear-mongering about China allegedly stealing US technology and rapidly closing the gap, we cannot predict how US policy might shift.
What will it take for us to get there?
Government funding. Invest as much as we do in ISRO—around $1-2 billion per year. Instead of another welfare scheme or monument, allocate this budget to AI development.
A world-class research center. Create a “Xerox PARC”-style AI hub to attract India’s brightest talent.
Talent. Encourage AI researchers from Silicon Valley to return home by tapping into national pride. Position this as India’s most crucial technological mission, build momentum. ISRO has already shown that with the right support, India can compete in cutting-edge technology. ISRO researchers likely earn far less than OpenAI engineers, yet they work with deep passion and national pride.
Aspirational positioning. Everyone in college should aspire to be part of this organisation than becoming an IAS officer or going to the US for their MS.
Strong leadership. Just as Bob Taylor led Xerox PARC (read Accidental Empires for more on this) and Nandan Nilekani spearheaded Aadhaar, we need a visionary leader to drive India’s AI revolution.
It will take time, but we have to start somewhere.
Someone asked the following question on Twitter: “This is probably ignorant since I dont really understand the working on the indian chaebol but is there a reason Adani/Ambani/Tata/Infosys couldnt foot half the bill - with the gov doing the other half - to train a frontier model?”
My response to that was: “Good point. A joint project between one of these companies and the Indian Government can happen because they are close to the government and the Government wants to work together on this. However, for most service companies, it makes more sense to improve existing free AI models and use them for their clients. Making products has never been their strength. If they were good at making products, they would have already built products to compete worldwide using their extra money. Risk taking is also limited in these service companies.”

--- END POST: Why Indian VCs won't fund foundational models ---


--- START POST: ChatGPT Gov and Deepseek ---
URL: https://manassaloi.com/2025/01/28/openai-deepseek-gov.html

Most US government contractors make a lot of money. They are on cost-plus contracts: Cost + Margin.
This means OpenAI through ChatGPT Gov could have made a lot of money by working with the Government over the next few years.
However, Deepseek arriving now is bad timing for them.
Imagine finishing deals with Biden and Kamala, then Trump and Musk win, with Musk wanting to reduce Government spending, and then Deepseek also arrives with their training costs. Not a great week for OpenAI especially when they would have wanted to celebrate their ChatGPT Gov launch.
P.S I learned about US defense contractors and their margins by listening to many hours of 20VC podcast episodes about US American Dynamism startups. Take a look at how well US defense contractor stocks have performed in the last ten years to verify how good of a business defense contracting is.

--- END POST: ChatGPT Gov and Deepseek ---


--- START POST: Deepseek's consumer app ---
URL: https://manassaloi.com/2025/01/27/deepseek-app.html

“Oh, Deepseek is pushing their app instead of focusing on their web and API. It is a sneaky way to collect more user information.” - X dot com.
There is a reason to push the app.
The most important design principle is: Out of sight, out of mind.
For example, I pay for both ChatGPT and Claude.
ChatGPT is a native Mac app. While Claude’s desktop app is a very buggy Electron app that crashes and freezes frequently, so I use Claude only on the web and phone.
As a result, I almost never use Canvas (Artifacts) on ChatGPT because it is only available on the web version. The user experience is also poor. You have to select it, unlike Claude where it appears automatically in the right sidebar.
This shows why Claude has Projects even on the mobile app, even if people might not create projects on mobile. When you open the sidebar on the mobile app, you see Projects listed.
My ChatGPT usage is far higher, even though Sonnet is a better model for coding or writing because I work on my laptop. I just open ChatGPT more often because it is easily accessible in my Mac’s dock.
The only place I use Sonnet more than the latest GPT models is in Cursor, where it is selected by default.
Likewise, I would probably even use Google’s AI Studio more, but they don’t have a native app.
Not everything is a conspiracy. Sometimes it is product management 101.
You need to reduce the time and steps to get value.

--- END POST: Deepseek's consumer app ---


--- START POST: India needs its own foundational model ---
URL: https://manassaloi.com/2025/01/26/indian-ai-model.html

The last decade has demonstrated how the United States, as the world’s leading power, can exercise significant economic control against nations it thinks of as competition. They removed Russia from international payment rails. Similar pressure has been applied to China through various measures: new tariffs, product bans, and other restrictions, marking an escalation of tensions between the two nations. The new Cold War.
China is also not far behind when it comes to exerting global influence. See what they are doing in Africa.
And now that India is trying to catch up in manufacturing they are doing this.
As AI becomes increasingly crucial over the coming decades, nations must consider their technological sovereignty. Owning and controlling foundational AI models becomes a necessity.
The key is developing AI models trained on a nation’s own data. See Sarvam’s approach. You need to align your model to your values and perspectives. I am sure the Chinese and US models have been fine-tuned to give different answers to particularly sensitive topics. See the screenshots below. Yes, the question is controversial, but both ChatGPT and Claude give a balanced answer while Deepseek refuses to respond.
Nations need to invest in developing their own AI models that align with their national interests and strategic objectives.
Yes, Deepseek is amazing, and I am happy how open source is catching up. I love using Advanced Voice on ChatGPT and Claude for my random side projects.
But if I was Modi, I would start a Manhattan Project scale project in AI. It is far far important to not do so.

--- END POST: India needs its own foundational model ---


--- START POST: Consumer intent ---
URL: https://manassaloi.com/2025/01/25/consumer-intent.html

“Stupid question why would users on ride hailing apps be high intent and on food delivery apps be medium intent”
Someone asked me the above on x dot com. Here is my response:
Yesterday I had to go to Koramangala. I don’t have a car. So I opened Namma and booked an auto. I could not decide to go two hours later in case I got a better deal than that time. I could not go to Marathalli because it was probably showing a cheaper ride. Yes, I could open Rapido if I saw the price on Namma being too high, or there were supply issues. But my destination will not change. My timing will not change. I cannot decide not to go if there is a higher price when it is busy.
Compare this with food. How many times have you decided not to order because you felt the price was too high and you were not getting good value for money. There is tiredness from making choices. Oh, I selected chai, but it does not meet the minimum order value, so now I need to add more items. Do I add a samosa? Maybe I don’t want to eat a samosa. Maybe I will skip snacks and then order dinner instead. I do not have any offers. I see some random packaging charge and now I feel the total is much higher than the menu price. Maybe I just went to the place myself yesterday, and the items are marked up 100%, and I feel I can write a tweet about food delivery being absolutely the worst model that does not serve anyone and get a few hundred likes instead. And so on.
From ride-hailing to food ordering to ordering a t-shirt that I don’t need, but if I get a good deal on the shopping websites I will buy, there is a range. If the purpose is strong, it is easier to get people to buy.
You can compare how many people actually buy from ride-hailing versus food delivery process (I can’t share both due to obvious reasons) versus shopping websites (2%) and realize how much purpose matters.

--- END POST: Consumer intent ---


--- START POST: Why does Swiggy have a promo banner? ---
URL: https://manassaloi.com/2025/01/24/discount-poster.html

“Genuine q: do many people see/interact with the banner on an app’s homepage? Doesn’t seem like a great use of prime real-estate. For me whenever I open an app it’s a muscle-memory scroll/search to where the useful stuff is.”
I saw someone post the above on x dot com. Here are my thoughts having worked on on demand marketplaces for 6 years now:
A significant number of users in low to medium intent products are “promo hunters”.
Remove all banners around affordability and price perception and you will start seeing behavior change. Their frequency of ordering drops.
Start polling these users a few months later and they will say “competitor x has far better price”, while when you compare final price on checkout for both they will be more or less the same. It is the discounting/ promos that drive that perception.
Giving a good deal is important for conversion.
Even more important: Making users feel like they are getting a good deal.
Users want to feel that they are getting a good deal from your platform.

--- END POST: Why does Swiggy have a promo banner? ---


--- START POST: When will people use your product? ---
URL: https://manassaloi.com/2025/01/23/when-user-use.html

One important thing to consider for B2C founders: Ask when will people use my product. The cost to creation is at an all time low thanks to AI, but people have enough products for their dopamine addiction.
Are users using your new AI driven metaverse app when they are commuting to office instead of scrolling reels on Instagram?
Are they listening to your AI driven text to audio app instead of podcasts when they are working out?
People don’t just adopt new apps just because they are cool - yes, they will try them out maybe, but long term adoption happens only because they fit into an existing behavior or replace an old behavior more effectively. If your product doesn’t have a clear time slot in people’s routines, it’s likely to be ignored.
For B2B founders: It is about figuring out how your product will integrate in a team’s workflow.
Yes, your AI recruiter is cool, but recruiters are already on Lever. So are you complementing Lever, how does your product integrate in their workflow? Are you replacing Lever or are you building a complement?
Focus on solution is nice, but understanding the current workflow of your customers is even more important.
Workflow understanding > Problem - Solution fit.
A product isn’t useful unless it replaces or fits into an existing habit/workflow.
(I have talked to a dozen founders last week. This is probably the thing that came up most often.)

--- END POST: When will people use your product? ---


--- START POST: Midjourney UX is anti-pattern ---
URL: https://manassaloi.com/2025/01/22/midjourney-antipattern.html

I love Midjourney.
But Midjourney’s prompt always feels like an anti-pattern to me.
We all started using Gen-AI tools beginning with ChatGPT.
So we are naturally used to the:
Give task -> Text to Text Model -> Output.
The input (Prompt) is describing the task.
While on Midjourney you have to clearly describe the output instead.
Output you want (Prompt) -> Text to Image Model -> Image.
In both cases (text -> text and text -> image) the type of model determines the prompt.
This works for creativity. And it is a favorite tool for an art-based audience who want to generate visually compelling images.
Unlike other text-based Gen AI tools that you can use as a copilot, there is no iterative approach with Midjourney, you can’t engage in a back-and-forth approach to refine your output. It simply regenerates new variations based on a new prompt. Even the Edit feature of Midjourney does not work.
It is not Midjourney’s fault though.
It is how text -> image diffusion models work. These models refine random noise into an image based on the text input. The model does not “construct” an image the way a human designer would. It doesn’t understand a layout or a structured set of requirements.
For product design it does not understand the concept of layers, buttons, or grids.
It just translates text descriptions into a visual output using statistical correlations.
So it is useless if you want control over the output. And I feel this is the main reason I know so many designers who have canceled their Midjourney subscriptions over time.

--- END POST: Midjourney UX is anti-pattern ---


--- START POST: V0's new community page ---
URL: https://manassaloi.com/2025/01/21/v0-community-page.html

I am super happy that v0 has this new community page out on home.
If everything is a remix, and very few people have original design ideas or content, then the ability to remix helps you get far more users than expecting them to come up with something new.
This is why I always felt Twitter should have a remix button. The grok button is nice, but a remix button, rewriting some content in a different tone/voice, and posting it as an original tweet will 100X the creation on the platform.
If this idea makes you cringe, just know that most popular accounts just rewrite content.
I see the same tweets paraphrased and then posted for far wider distribution than the original tweet.
This is democratizing content. Slop machine at scale.

--- END POST: V0's new community page ---


--- START POST: Elon Musk and Beerbiceps: The meta game ---
URL: https://manassaloi.com/2025/01/20/elon-beerbiceps.html

I was discussing Elon Musk with a friend.
I know saying someone who is worth half a trillion is probably not dumb is not exactly a hot take, but people still think Elon lucked out and is an idiot.
Yes, the whole discussion started because someone wrote a thread saying exactly that.
The meta game of Elon is using Twitter and his influence to win an election and then influence policy. What he spent on Twitter does not matter in the long run. He is worth half a trillion now. He literally won a US election. He got Vivek out based on Twitter outrage. Trump needs him because he saw Elon’s power. He probably hates how much influence Elon has but is playing it carefully.
Xai came after Twitter. Both Xai and Twitter valuation combined is much more than what he paid for Twitter. Has revenue declined? Yes. Initially most advertisers left. But he cut operating expenses by a lot too. Everyone was like Twitter would shut down soon. No one can run Twitter with so few people. All the left-leaning people said good byes. What happened? Everyone is still on Twitter all day. It is the only platform that still matters.
Elon is literally running the US.
Elon is literally running polls on Twitter to make HR decisions for DOGE (the team deciding how US spends money). He controls HR (hiring and firing of federal workers), and he controls spend (money is power).
And so of course Twitter does not matter. It is irrelevant now.
When you are worth half a trillion, have built multiple decacorns, you play other games. While people are thinking you are a loser, an idiot, only reached where you are because of your father’s emerald mine, you are literally deciding the fate of countries.
It is okay to not like Elon as a person. He has way too many character flaws. But people doubting he is a capable person is what bothers me. Most people are not capable of AND thinking. Someone has to be a loser, an idiot, because he is not a good person according to them.
While someone can be someone you do not like but they might have accomplished more than most people ever will.
True alpha comes from knowing this simple thing: AND, not OR.
Forget Twitter or Xai. Take the combined valuation of Elon’s companies, pre and post election.
He took a bet. Went all in. Kamala winning would have probably ruined him.
Do the same for the valuation of all the companies of all his network. See who all helped him in his takeover of Twitter and what access they have got in this new administration.
Now let us move to Beerbiceps.
Okay, before we move to Beerbiceps, let’s start with Warikoo. Another person every intellectual loves to hate. People joke about buying YouTube Premium just to not see his ads.
But what do you do when you run a courses business and have figured out that your courses LTV is far higher than the CAC through YouTube Ads? You just run more ads. People hate it? Yes. But hate does not let you earn a few million dollars every year. You play the meta game of running ads.
You can hate his content. You can say he gives generic advice. Why pay for his content? But people do. And that is what matters.
Same for Kanye. Earlier you had Adidas for distribution. You created sneakers. Adidas marketing dollars were behind your products. Every time anyone saw an Adidas store and went inside they would see your shoes.
Now forget competing with Adidas and Nike, global giants, you are competing with every D2C brand.
How do you get audience to your store? Sell your products? You dial up the craziness. Announce you are running for president. Make up enemies. Do beef marketing (read up on Basecamp’s beef marketing).
As I wrote in an earlier post, distribution is all that matters. Every incremental tweet is free. Every controversy is free marketing. Being relevant is what matters. And he has perfected the game. He is happily posting sales figures of his online store after hate tweeting all day.
People are quote tweeting, dunking on him. Does it matter? No. Adidas deal is gone. He is on his own. His tweets will sell more sneakers. He is playing the meta game.
I was talking to someone and he was saying that so many influential people go to Beerbiceps’ podcasts. It is a way to reach the masses.
At this point his “maut ke baarein mei soche ho” is not too different from Rogan’s “Jamie pull up the video of the bear doing backflips.”
Will he pull a Satya Nadella or Sundar Pichai? No. The masses won’t care anyway.
The masses want entertainment. The masses by dunking on him give him more reach.
The more meme-able the content, the more it spreads.
CPM on YouTube does not depend on whether it is a hater or a fan watching his content. Beerbiceps earns the same amount either way.
The more niche the content, the higher the intellectualism (not even sure if it is a real word), the lower the TAM.
I am sure he knows what he is doing. From a trainer who used to DM Tanmay, to becoming friends with him to running a podcast to running an influencer agency, he is not dumb to not know what people think about him.
But the audience wants the awkward face expressions. The “kabhi Aapko Mann kiya hai ki kisiko Pelo” questions. So he gives it.
Naval says if you are so smart why are you not rich and successful.
I ask the same question when I have this urge to automatically assume someone is an idiot because I can’t figure out their meta game.
By the way, do you know even Naval is playing his own meta game?
I remember hearing an exec at Twitter telling this story about how Naval used to tweet very differently before figuring out the meta of being a Buddhist monk on Twitter.
And yes, I went back a decade or so and read all his old tweets. The right time to understand a person is before them figuring out the meta game.
10 years back Naval did not tweet pithy one-liners. Had this sureness about him. He was also confused. He used to tweet at other people. Joke. Be a normal human. But then path dependence happened and he has been tweeting like a Buddhist monk ever since. Read my old post on path dependence.
Chamath went to Stanford business school. Told the world his game plan. And he just executed his plan to make generational wealth and got his seat at the big boys table.
Elon did it at a scale no one has ever been able to do before.
These people are not idiots. They are far more rich than successful than you and me ever will.

--- END POST: Elon Musk and Beerbiceps: The meta game ---


--- START POST: AI Agents' onboarding ---
URL: https://manassaloi.com/2025/01/18/ai-colleague-copilot.html

Last week I was sitting with a friend of mine who is working on an AI co-pilot for X startup.
(I know, I know. A lot of my posts start with “I was sitting with a friend”. This is a gentle way of signalling that I have friends. These are real people, people. And real discussions).
We were discussing agents. I have never let my basic knowledge of things stop me from forming opinions. So why stop now. So this is what I shared with him.
This may not be new to people who are deep into AI and agents. But for an average product person it might be interesting.
There are 2 types of agents.   Agent as colleague. Agent as copilot.
Colleague agents are much more expensive. Take Devin for example. He is supposed to be a junior developer who you can also delegate tasks to and he
works independently
, while Cursor Agent (Composer) and Replit Agent are examples of copilots. They take some tasks off you, but I assume they enhance your ability as a developer rather than working independently.And they are priced accordingly.  500 dollars a month for Devin versus 20 dollars for Composer.
So how do you work with each type of agent?   I told my friend that if you think of Devin as a real colleague, an employee in your organisation, then its onboarding should be like a real colleague.  Let’s take the example of a new agent.   We have decided to buy Jagan, a data analyst agent created by Data Friend Labs.  What should the workflow look like?
In an ideal scenario. This may already be happening with some agents today, but let’s say we don’t know of any and we’re using some good old-fashioned
first principles
thinking.   How do you onboard an agent?
A regular employee joins. They have a manager. They have an onboarding buddy. They get an email id. They have a slack. They have an onboarding checklist created by their manager.   Now suppose you want this colleague, Jagan, to be as useful as a human employee. How would you do its onboarding?
A normal human would probably do 1-1s with key people. Read a lot of documentation.   If they have questions, they could ping their onboarding buddy or manager. Do some onboarding projects. At Facebook, you might even do your first PR on your first day.
No human is going to remember every word of every document they read during their onboarding. They create an onboarding folder. Bookmark all the Google Doc links. Take notes from the 1-1s with key stakeholders.  Is the process the same for Jagan?   What is Jagan anyway? His brain is powered by some LLM. His memory (local) is the docs he has read. There will be some RAG based system to extract relevant information depending on the task. He will have access to tools. Use of tools. This means his account would be created on Tableau, Metabase, Amplitude, Appsflyer, Google suite, (all relevant tools he needs to do his job). 
Do we really need stakeholder interviews? Will employees be interested in talking to an AI colleague to provide context? Will we just create the relevant documents to give Jagan context on each stakeholder?
A normal employee would work pretty independently, only going to their manager when they get stuck.  I expect Jagan would be stuck a lot. LLMs are good, and with each new generation they get more and more capable. But the context window is still limited. Yes, you can RAG and get relevant information from the docs, but we have seen cursor agents mess up so much.  Especially during onboarding, do they keep going back to their manager when they get stuck? Remember that most LLMs today work on pull rather than push. ChatGPT never pings you or sends information itself. You ask ChatGPT. You tag some files and ask the cursor to do something. Even the Agents platform mostly takes a request from a user and completes the task.   Do we have a progress md file for Jagan, where he writes after each interaction? People recommend using a progress md for Cursor, where you update the progress, so that when you ask Cursor, it is always up to date on what is happening with the project. Jagan can have many interactions during the day. A human colleague does that. So does it write everything? How does it know what information to write? Find out what is important to discuss on Slack.   Does Jagan attend the standups? Does it even have a performance review? Devin was an interesting experiment in how AI colleagues will coexist with human workers. But the reviews aren’t great. And the price means that at least people like me can’t just try it out for fun.  Also, Devin has been more like Cursor agent than an actual colleague. People tag Devin to help with PR. And menial tasks as far as I can see on X dot com.  You don’t tag your human colleague like that. They work as equals. A manager decides which tasks are assigned to them based on their maturity, skills and experience.
Copilot is also interesting. Copilot is broad. Used by every employee. So shared context.  Example: Copilot for a data analyst, let’s call him Data X, needs to understand the schema. Understand the data pipeline. Which data should be retrieved from which table. But setting up the copilot takes time. Even for Cursor, a lot of people just read something on Twitter and figure out how to make Cursor better. Cursorrules, progress md, product description md, asking Cursor to go through the steps before executing, all came from random Twitter users. Democratised learning.  But coding is mostly dependent on the language you write code in. So .cursor has rules for different languages.  Collecting data and creating artefacts is much more nuanced. For example. GMV may be GTV in some companies. Sales can be calculated differently. I remember reading a report on the state of food delivery from Momentumworks and they have so many disclaimers saying note that Grab’s revenue is calculated this way, Shoppee’s this way and what not. GAAP is only for public companies. And real companies have many more definitions and terminologies.  So how do you set up Data X?
Here you are getting onboarded to Data X (employee onboarding done on a new platform) vs new employee (Jagan) getting onboarded to your company.
Do you start dumping documents to it?   Do you need the company (let’s say Data Inc) to come in and create a middle layer to map how you would give tasks to the copilot in natural language vs how it would query? Or can you platformise it somehow? For example, let it ask questions in the first week and get context about your business? You can start throwing documents at it.  You need Data Inc to come in and set up the RAG system. You need FDEs, as in the case of Palantir. Palantir is high ticket and the cost structure allows it, but maybe not for a bottom-up Data copilot.  How much can you abstract away? Context windows will get bigger.  Maybe you will use fine-tuned open source models instead of the frontier models, but every company is unique and you will still need a lot of manual work to set up Data X. I spent so much time on onboarding because onboarding is important. The quicker the onboarding, the smoother the process, the quicker the aha moment, the more likely people are to be wowed by these AI products and actually use them to augment or replace their employees.  I think if I were a PM trying to get into AI, I would be obsessed with how to master onboarding.  Onboarding PMs, or PMs for activation, was an important role in web2. It’s going to be even more important for people building AI products.

--- END POST: AI Agents' onboarding ---


--- START POST: Stop doing product courses ---
URL: https://manassaloi.com/2025/01/17/stop-pm-courses.html

To get better at product, you don’t need to take more product management courses or read more product management frameworks from Reforge. You need to use more products,
think
more about various product decisions, and actually ship stuff.
I’ve seen PMs I’ve worked with post on Linkedin about the latest course they took, but they barely cared about their jobs, nor would they spend any time getting better at the craft of building products.
I’ve met founders who bitch about the PMs in their companies, people who’ve never had a new idea in their lives, can’t write a strategy document to save their lives, don’t care about design, don’t care about data, don’t spend time tinkering on side projects. This is why many developers and designers hate PMs.
You don’t need another course. You just need to care more.

--- END POST: Stop doing product courses ---


--- START POST: Aha moment for agents ---
URL: https://manassaloi.com/2025/01/16/agents-aha-moment.html

Since I wrote
this post on aha moments
, I have been thinking about ‘aha’ moments for AI agents.
The best ‘aha’ moment post I have ever read is
this one
by Fred Wilson on Twilio’s seed pitch.
One principle when it comes to communicating products is ‘show, don’t tell’.
What I see: Every agent website and video shows complicated workflows with flowcharts.
The only good demo/launch video I have seen is Alex Cohen’s Hello Patient.
A good demo of an imaginary product: You are a founder building an insurance voice agent product and you want to sell it to HDFC. Go to their call centre. You probably have a local LLM running on a truffle (simpforsatoshi) like device. You open your briefcase. Take it out. No data leaves. You start making calls. Sell more insurance than the best agent in the call centre. Far higher productivity. Lower costs.
A new form factor is interesting. Of course you can use cloud providers.
I know that is not possible today. You would need to get data from actual prospects before making that call. You would have to follow HDFC’s guidelines (build a RAG solution) and then also fine tune your model to better suit HDFC. And the fine-tuning itself would take time. And they would not share it without signing a contract. So the ‘aha’ moment is not immediate. Nobody’s mind is going to be blown immediately. And that the a problem.

--- END POST: Aha moment for agents ---


--- START POST: A standalone snacc app ---
URL: https://manassaloi.com/2025/01/11/snacc.html

“O Manas, why did Swiggy launch Snacc? Isn’t it an admission that having multiple brands might be a better plan?”
I have had people DM me this after Swiggy launched their new Snacc app.
Snacc is a separate app because you can’t directly compete with the restaurants you serve (one side of your three-sided marketplace) in the same Swiggy app.
If you’re positioning SNACC as a solution to expensive food delivery, long wait times, and excessive fees, you can’t effectively do this by placing the SNACC icon next to traditional food delivery options on Swiggy’s homepage.
Customers need to think of SNACC as a distinct service for quick, reheated frozen food delivered in 10 minutes. Mixing dark store food with restaurant offerings in the same app could confuse the value proposition.
Consider this: If a customer has a bad experience with a reheated samosa from SNACC, they might question Swiggy’s entire food delivery business.
Additionally, restaurants would likely object to having their offerings displayed alongside reheated frozen food, given the perception issues.
(Though one could argue that restaurant food is also frequently reheated packaged food.)
The app separation also helps manage customer expectations. You can’t effectively promise both 10-minute and 50-minute deliveries in the same app. The goal is to train users to use SNACC specifically for quick snacks, while using Swiggy for restaurant food – even if it means paying more and waiting longer.
The separation enables different demand and supply strategies.
On the demand side, having both quick, cheap SNACC items and restaurant food in one app creates competing user flows. For example, a customer looking for a samosa on SNACC might compare it with a nearby restaurant’s samosa on Swiggy, which could be cheaper despite the 25-minute delivery time. Separating the apps eliminates this direct comparison.
Supply-side operations also differ. Dark store delivery workers handling 10-minute deliveries may require different incentive structures, necessitating a separate supply spending strategy.
Finally, organizational dynamics play a role. A separate app gives the SNACC team autonomy. They don’t need to compete for visibility on Swiggy’s home screen or negotiate with the design team about animations and features. They can move quickly, ship features rapidly, and maintain independent control over branding, communications, and overall product development.
This illustrates a key advantage of multiple apps. However, it comes with challenges: building a user base from scratch, training customers to use multiple apps, and managing cross-platform features. For instance, I still can’t use my Zomato wallet money from an Infinia gift card on Blinkit, nor can I earn and use points across their product portfolio.
Both approaches have their merits and drawbacks.
Having said all this, no one really knows the exact rationale behind this decision. Based on my decade-plus experience in tech, most decisions ultimately stem from CEO preferences and influential stakeholder input, shaped by various biases – recency bias, confirmation bias, and many others – plus competitive pressures. The true decision-making process often remains opaque.

--- END POST: A standalone snacc app ---


--- START POST: Akshay Kumar ---
URL: https://manassaloi.com/2025/01/10/akshay-kumar.html

It was ~15 years ago. I was in Kota, staying in a paying guest accommodation, cramming organic chemistry before a placement test at Bansal’s that would determine my batch assignment for the next few months.
I still remember the day clearly. I was hanging out with a couple of guys from the PG accommodation. We were talking about movies. I had never been a big movie enthusiast - not the kind of person who would go for first-day-first-show screenings.
But like all teenagers, I had opinions. I remember one of them bringing up an Akshay Kumar movie. I mentioned casually that I thought the movie was bad and made a comment about Akshay Kumar.
Immediately, I saw the mood shift. One of them got upset, and things escalated from there. Coming from the east, where people don’t typically engage in hero worship, it was my first time seeing someone get so upset over something so external. I couldn’t understand why he got so agitated over an offhand remark about Akshay Kumar. He was apparently a big fan, and it wasn’t acceptable to say anything negative about his idol. He was defending his hero’s honor.
Until the end, it seemed like satire. Surely, I thought, he must be joking. Why would someone get so upset?
Our relationship never recovered. Over time, this incident, along with other issues, led to us avoiding each other. There was always tension between us.
I’ve been supporting Liverpool since 2002 and was a big Sachin Tendulkar fan. But I would never take offense if you said anything about Sachin or Mohamed Salah.
After all, I don’t personally know Salah. He doesn’t even know I exist.
This is why I find the culture of hero worship very strange, whether it’s actors, politicians, or political parties. I’ve never understood it.
At least Akshay Kumar doesn’t get paid from taxpayer money - you vote for him on Friday when his movie releases, with your wallet.

--- END POST: Akshay Kumar ---


--- START POST: If I moved to Hubli ---
URL: https://manassaloi.com/2025/01/01/miss-you-no-status.html

It’s that time of the year again. End of year reflections.
I was thinking about this podcast I heard a few years back. This valley founder who had it all - the headlines, the success, the network. Then his company started going downhill. And suddenly, all those people who used to hang around? Gone. He talked about how he had never felt more alone. Eventually packed up and left the SF startup scene altogether. Spent years trying to find himself while rebuilding his company from scratch.
Makes me wonder sometimes. What if I moved from Bengaluru to Hubli tomorrow? Left this whole startup bubble behind. No more fancy meetups, no more “what are you working on” conversations, no more startup ecosystem drama. If work wasn’t my identity anymore, how many people from my current circle would actually stay in touch?
Not asking for LinkedIn engagement or Twitter DMs. Just genuine “hey, how are you doing” calls. People who’d want to talk because they enjoy our conversations, not because there’s something to gain or lose.
In Bengaluru your worth is tied to what you’re building, what company you work at, what your designation is. Take all that away and who really cares about grabbing that coffee just to catch up?
Maybe I’m being cynical. Maybe I’m overthinking. But these thoughts hit different during December when everyone is posting their year-end achievements and goals for next year.
Not that I’m planning to move to Hubli tomorrow. But it’s a good thought experiment. Makes you think about what really matters, who really matters.
Anyway, I’ll also be back to posting about product and growth next week. Let me have this moment of existential crisis.

--- END POST: If I moved to Hubli ---


--- START POST: Coimbatore food recommendations ---
URL: https://manassaloi.com/2024/12/28/coimbatore-eats.html

Sourced on Twitter and cleaned up using Claude.
Restaurants in Coimbatore
Vegetarian Restaurants
Annapoorna
Known for excellent South Indian breakfast, coffee, and their signature rose milk
Nagercoil Arya Bhavan
Specializes in traditional vegetarian meals
Anandhaas
Popular for vegetarian dishes and bakery items
Original Tiffin House
Traditional South Indian fare
Non-Vegetarian Restaurants
SMS Restaurant
Shahi Grill
Parotta Factory
Dindigul Thalappakatti
Famous for their biryani and chicken dishes
Hotel Kannappa
Venu Biryani
DR Biryani
Burma Bai
Known for their parotta and pepper chicken
Cafes & Contemporary Dining
On The Go
Serves North Indian cuisine and their signature mud soufflé
That’s Y Food
Popular for mud soufflé
Living Room
High Joint Cafe
Sticksy
Boomerang
Coffee & Quick Bites
Velan Coffee
Valarmathi Mess
Pillar 129
An underrated local favorite
Street Food
Various shawarma joints throughout the city
Traditional Home-Style Dining
Ammayi Veedu
Serves home-style meals
Bengaluru list for anyone interested.

--- END POST: Coimbatore food recommendations ---


--- START POST: 2024: A year in review ---
URL: https://manassaloi.com/2024/12/27/year-review-2024.html

[Cut off date: 25 January 2024]
A bunch of folks asked on x dot com how I put together this year-in-review thing. Figured I’d dump my brain here – might be useless for designers, but maybe the non-design crowd will find it interesting?
Lately, I’ve been kinda fixated on companies and how some of them feel like straight-up cults. Been wondering if there’s a link between that vibe and having super strong, clear cultural values.
So, naturally, I started digging around for examples of company values. Then I remembered Facebook’s red book.
I really liked the texture of those pages. Just got me thinking – could I use that as a background for something I’m designing?Separately, I had this whole booklet thing going on in my head. Like, wouldn’t it be cool to have a website where it felt like you were flipping through a booklet to see someone’s journey? A digital booklet, where you turn the pages and the content changes.
At the same time, I was just messing around with Midjourney, making random images and trying to pull colors from them to create some kind of brand palette.This random anon account had been bugging me about doing my year in review. He was super persistent. And I do it every year anyway.
So, I was like, “Okay, let’s just do it.” And that’s how it started yesterday.My first idea was to just smash those two things together. Make a website that looks like a book, where you flip the pages and see my year laid out. That’s why the first page kinda looks like a book cover.I really wanted to use that Facebook red book texture. Make it feel like you’re holding an actual old booklet, seeing how the year went down.In the background, I also had this idea of building a theme around this one initial Midjourney image I created. Using the same vibe, the same environment, and then making more images that fit that.
More ideas just keep popping up. Like, what if instead of just saying where I travelled, I made little fridge magnets in Midjourney? And then had a picture of a fridge on one of the pages, and if you clicked a magnet, more photos and details about that trip. Go full skeuomorphism.
After a while though I was like, “Do I really want to spend so much time on this?” So I just went with the Figma thing and got it done in a couple of hours. Quick and dirty.Most of the time went into just cleaning up the text. Had to take out some personal stuff. And then, of course, the usual rabbit hole of trying out different fonts and gradient backgrounds.
I learned some new stuff. Found out a  paper texture generator that uses code. Turns out, a lot of those fancy noise and gradient plugins are just wrapping this kind of thing. And that Midjourney has a ton of gradient backgrounds already built in. The backgrounds for the monthly views? Yep, straight from Midjourney.
Ended up collecting more textures, more images. Finally feeling like I got my money’s worth out of that Midjourney subscription.

--- END POST: 2024: A year in review ---


--- START POST: Making memories ---
URL: https://manassaloi.com/2024/12/26/making-memories.html

I visit my in-laws and parents once a year. That’s it. Two trips. So I’ve been thinking about how to make these visits more than just obligatory check-ins.
The thing about memories is that they’re made up of moments that stand out.
My MIL loves cooking for us. The way her face lights up when we dig into her biryani – that’s priceless. In return, I’ve made it my mission to explore new places to eat around Coimbatore with my in-laws.
We finally ticked off that Guruvayur temple trip they’d been planning forever. Spent a day there, roamed around Thrissur. Sometimes the best gifts are experiences. Speaking of which, I got my brother’s FIL (who’s a massive Shiva devotee) a small idol from Guruvayur. He’s always hosting us for dinner when we visit my hometown, so it felt right.
I’ve started sneaking in some health stuff too. Got my in-laws kettlebells and resistance bands. Started them on light functional training.
The Fuji Instax printer I had bought turned out to be a hit. We printed old photos – some just of us, others with the extended family. There’s something about holding physical photos that makes memories feel more real. Watching them relive those moments.
My FIL has this thing where he gifts me clothes every time I visit. I barely shop for clothes otherwise, so this has become another ritual.
Just like how Anandhaas and Annapoorna visits are non-negotiable now.
For me, one of the best holidays here was just reading graphic novels all week. This was a couple of years back. Now I try to squeeze in some graphic novels to read every time I am here.
I also read a few design books because I can’t completely switch off. Working on Figma, doing random classes, keeping up with AI –  it feels different doing it here. It is so peaceful. No one to distract you.
Life is long, but these visits are short. When I look back, I want each trip to have its own highlight reel. Something that makes me go “ah, that was the time when…
“Nobody on Twitter might disagree, but not all in-laws are bad. No nazar please.
I highly recommend this book:
The Art of Making Memories - Meik Wiking
I got some backlash from some people when I posted the above on x dot com. ‘oh techbros trying to optimise everything’.
I say yes, optimise everything you can. Make memories.
Got promoted? Instead of just calling your parents and telling them, take them out for a nice dinner. Make it memorable. Have a date night. Celebrate other people’s victories. On your last day at work, go to that shady bar nearby.
Treat yourself. And treat those close to you, too.
Life is short. I could have a heart attack and die next year. I want my annual reflection to include enough things that it feels crazy to look back and wonder how I got so many things done. Try more things. If you have the time and can afford it.
Or ignore all of the above and just do you. I can only live my life the way I want to!

--- END POST: Making memories ---


--- START POST: Why google bought Character AI ---
URL: https://manassaloi.com/2024/12/23/character-ai-goole.html

A friend was telling me the other day about why Google snapped up Character AI. Apparently, the big deal wasn’t just the cool AI girlfriends everyone were chatting to, but that they’d cracked the code on running these things without costing a fortune. Like, doing the AI magic – the “inference” part – at a scale that wouldn’t bankrupt you.
The adoption curve of any new tech usually starts with porn and parasocial relationships. Look at any list of GenAI products with the highest MAU - most of them are about curing loneliness. AI girlfriends, AI companions, AI therapists. But running these services is expensive. Like really expensive. The inference costs can kill you before you even figure out product-market fit.
This is what made Character AI special. They could serve millions of users without bleeding money on each conversation. And Google probably saw this and went “hey, this is exactly what we need for Gemini”. Now that massive amount of money they paid for Noam Shazeer has started to look like a pretty good investment.
Think about it. Google is now giving away these flash models for free on AI Studio. You can’t do that unless you’ve figured out how to make inference really cheap. Cheap enough that you can offer it as a free product without destroying your unit economics.
Pre-training has hit diminishing returns. Everyone knows this. That’s why you’re seeing this shift towards chain-of-thought prompting and inference-time optimizations. It’s probably why Anthropic is working on improving Sonnet instead of launching something bigger. And OpenAI is launching O3 and not GPT 5.

--- END POST: Why google bought Character AI ---


--- START POST: Taste ---
URL: https://manassaloi.com/2024/12/22/developing-taste.html

Follow these people on x dot com: samdape, luusssso, FonsMans, mariapicasso, hanslorei, laurentdelrey, realvjy, marty, rjonesy.
Pages: spottedinprod, viewportui, makerstations, LogoArchive, 60fpsdesign, eightbitstories, 4AAAAart.
Places to discover new art and designs: arena, cosmos, mobbin.
Take photos. Create on Midjourney. Read books. Try to copy and then remix things you find interesting.

--- END POST: Taste ---


--- START POST: Do I need to understand gradient descent as a PM? ---
URL: https://manassaloi.com/2024/12/21/ai-product-manager-gradient-descent.html

I was having this interesting debate with a friend recently about whether product folks need to go deep into the AI weeds. His argument was pretty straightforward: the fundamentals of product management - understanding users, driving activation, figuring out monetization, running experiments - remain the same whether you’re building web2, web3, or AI products. Why not just focus on what we’re good at?
I see it differently. I could make better product trade-offs (scope, impact, effort) because I was once a developer. I’ll admit it, I used to totally gaslight people about how long my dev work would take.
Since then I have worked in product for more than a decade.
So I’ve been on both sides.
Here’s the thing that’s been bugging me lately: I had this conversation about an interaction on our Android app with a developer. He started talking about something called RecyclerView and why what we were discussing would take ages on Android because of some reason. I was not even sure if what they were saying made sense or if they were just throwing technical jargon at me knowing I wouldn’t catch their bluff. My Android development experience was from a decade ago - back when people used Eclipse, and we only worried about Activities and Fragments. RecyclerView? No clue what that does.
Now, do I need to know everything? Nah, probably not. But I gotta know enough to, you know, smell BS when I see it. To figure things out for myself.
Whether you’re founding an AI company or working as a product person at an AI startup, you can’t skip having some baseline knowledge of the domain.
This is why if you look at my Twitter, you’ll see me sharing random AI stuff. There’s no structure, no clear project, just disconnected ideas floating around. And that’s fine. I’m in my exploration phase. I’m okay looking dumb because what matters is whether I understand things better over time or not. Do I need this as a senior product person who doesn’t do much IC work? Probably not. But learning and doing new things is what keeps life interesting.
It’s like when I didn’t know you needed to use Frames instead of Groups in Figma. Now I can create simple design systems too. It’s never too late to learn new things.

--- END POST: Do I need to understand gradient descent as a PM? ---


--- START POST: Zepto's aha moment ---
URL: https://manassaloi.com/2024/12/20/zepto-aha-moment.html

I was talking to a friend yesterday about AHA moments in products. He is working on the strategy for a late stage unicorn startup. His management feels they have a solid enough product already, they just needed to package it better, explain it well, help users reach that magical AHA moment faster.
My point to him was: not every product has an AHA moment.
Remember when everyone in product was obsessed with finding their North Star? Facebook made it seem so simple - get users to add X friends in the first Y days, and boom, they have enough content to stay engaged. Their growth team spent years decreasing the time to add X friends. Cut all friction. Reach the AHA money earlier.
But that was Facebook. Connecting to your friends and sharing your life updates was novel.
What if you’re building the 10th fintech app?
Unless you can genuinely show users why this is revolutionary - make them go “wow, I never realized I could do this” or “I always needed this” - you probably don’t have an AHA moment.
What are some companies that nailed the AHA moment?
Zepto. We’ve had on-demand delivery forever. Swiggy and others were doing 40-minute delivery. So what made Zepto different? A VC friend explained it perfectly - it changed his behavior. Earlier, if his friends came over, he’d stress about getting drinks or snacks. The thought of waiting 40-50 minutes for a diet coke or going down to buy it yourself. But with Zepto? It takes 5 minutes to get things deliver to your home. No need to plan what snacks to order in advance. That’s the AHA.
Another friend completely stopped grocery planning. No more budgeting, no more meal prep anxiety. His cook comes in the morning, they discuss breakfast and lunch, and groceries appear in 5 minutes. Imagine the reduction in cognitive load. No planning the night before, no stress. Just wake up and decide what you want to eat. The groceries arrive while your cook is kneading the atta. It’s amazing.
Then there’s Superhuman. Their AHA moment was different - it was about realizing you could use shortcuts for the fastest email experience ever. But they didn’t wait for users to discover it. They made you sit through a mandatory 1-hour onboarding. Sometimes you can force the AHA moment. It’s more extrinsic than intrinsic, but it works.
I remember our obsession with finding our North Star when building a Slack-like enterprise app in my previous product role. We thought if people sent X messages, created Y channels, and added Z colleagues on day one, they’d reach their AHA moment faster. We kept adding hooks to drive these actions.
But here’s what we missed: correlation or causation? People who love your product will do these things anyway. You don’t need 50 hooks in the app. Plus, Slack already existed. Was there really a strong reason to choose us except pricing?
When Slack first launched, they had a genuine AHA moment. Enterprise communication tools like Yammer were pretty bad. Everyone was stuck with emails and endless sync meetings. Slack changed that.
But the 5th Slack clone? Probably not.
Same with Nubank in Brazil. Banking there had terrible NPS scores. They came in with an amazing experience - clear AHA moment. But if you’re launching a new online bank in India today, what’s your AHA moment? Why would people go “this is so much better than what I had before”?
Sometimes what feels like a positioning problem might actually be an existential one. Not every product needs to change the world. But if you’re chasing that AHA moment, make sure it’s real.

--- END POST: Zepto's aha moment ---


--- START POST: AI product ideas ---
URL: https://manassaloi.com/2024/12/18/ai-product-ideas.html

The future of content and AI is going to be wild, and nobody is talking about it enough.
I was watching this episode of the My First Million podcast, and they were talking about these 1-minute serialized video reels. You know, the kind you see all over Instagram. Basically, TikTok dramas. I’ve seen a ton of them, and I know they’re huge in China. I know people who’ve actually paid to watch them.They’re always about some crazy, over-the-top storyline. Like, the boss falling for his secretary, or someone getting dissed by their rich relatives. But then there’s a twist – the guy getting humiliated turns out to be a secret billionaire. Forbidden love, revenge, the whole nine yards. It’s basically like those Chetan Bhagat novels or those Ekta Kapoor TV shows, but instead of stretching a scene for half an hour with five different camera angles, the story moves at lightning speed. Same actors, different shows. It’s wild.And it got me thinking. With AI video generators like Sora and Kling getting better every day, it’s not hard to imagine some dude in Hanumangarh pumping out these videos and making bank. I mean, yeah, you need consistency with the characters and more control over the video instead of just generating a single shot, but this feels like the first big way to make money with video generation. Forget about making entire movies – that’s probably still a decade away. This is something that could happen much sooner.
Speaking of regional content going global - Black Myth: Wukong showed that if you take a regional story and execute it well, the whole world will pay attention. I won’t be surprised if we see a AAA game based on the Mahabharata or Ramayana in the next 10 years. Sure, we might not have the game dev talent today, but as AI makes game development cheaper and faster, these IPs become more accessible. Just imagine playing as Arjuna in the Kurukshetra war or Hanuman leaping across the ocean to Lanka.
The education space is also going to change dramatically. Forget about White Hat Jr with their call center teachers reading from scripts. Imagine AI tuition centers where both your teacher and classmates are AI. The AI teacher adapts to your learning style, your AI classmates ask questions you’re too scared to ask, and nobody judges you for being slow.
You will have your copilot for interviewing who will be managing your own personal job-hunting army. They will help you through the entire application process. You tell your copilot what kind of jobs you want, and it orchestrates everything - one agent crawls job sites, another tailors your CV, another one applies, and another handles interview scheduling. The whole “spray and pray” approach to job applications will be replaced by targeted, personalized outreach at scale.
VR is about to get interesting too. The Oculus 3 costs as much as a cheap Android phone now. Meta is desperate for content. There’s never been a better time to build VR apps. Imagine a game where you’re Oberyn Martell fighting the Mountain in the Colosseum. (Though hopefully with a better ending for Oberyn this time.)
The future is going to be weird. But it’s also going to be full of opportunities. And I, for one, am excited to see what happens next.

--- END POST: AI product ideas ---


--- START POST: GPT Advanced voice needs to be a true Assistant ---
URL: https://manassaloi.com/2024/12/15/advanced-voice.html

I have been using advanced voice AI a lot lately. Like everyone else, I am fascinated by how natural the conversations feel. But there is this weird UX problem that keeps bothering me.
You are having this deep conversation with the AI about some problem you are trying to solve. The AI gives you a bunch of steps or recommendations. Now you want those steps in text form because who wants to listen to a 5-minute-long response again and again?
Your only option? Exit the voice chat, go to regular chat, and ask the same question again. But wait, you were in the middle of brainstorming something. Now you have to start a new conversation. Explain the whole context again.
It’s like talking to someone who has the memory of a goldfish. “Hey, remember that thing we were discussing?” “Nope, who are you?”
I mean the Advanced Voice is really cool for chatting, but it kind of misses the mark when you actually need it to be, you know, useful. It’s more like a conversation buddy than an assistant.
I feel the ideal product would let you switch between voice and text seamlessly. Having a conversation but need something written down? Just ask for it in text. Want to continue the discussion? Pick up right where you left off.
The real dream is having an AI that can actually execute those steps for you. But for now, I would be happy with an assistant that does not force me to choose between voice and text.
Add web search to this and we might actually have something interesting. Which I am guessing is coming soon anyway.
The more I think about it, this could even be a separate product. An AI that lets you have natural conversations but also sends you text when needed. Like that friend who follows up your deep discussion with bullet points on WhatsApp.
P.S. Every time I write about AI products, I wonder if six months from now this post will look silly because someone has already built this. But hey, that’s the fun part about writing about tech, right? Everything becomes outdated so fast.

--- END POST: GPT Advanced voice needs to be a true Assistant ---


--- START POST: AI pricing ---
URL: https://manassaloi.com/2024/12/13/ai-pricing-sierra.html

So, I’ve been thinking a lot about Sierra recently. If you don’t know, Sierra is this AI startup that’s got Bret Taylor at the helm. And I’ve got to say, I’m pretty bullish on what they’re doing around AI agents.
I also found myself nodding while reading
their post on pricing the work of these agents
.
How do we actually validate what these AI agents produce?
Take customer success. On the surface it looks straightforward - count the number of tickets closed. But it gets messy real quick. Let’s say you’re a customer success manager. You’re using an AI agent to help you close tickets. The agent closes 100 tickets in a day. Is that a good outcome? It depends.
What if the agent closed 100 tickets, but they were all low-value tickets? What if the agent closed 100 tickets, but the customer satisfaction score went down? What if the agent closed 100 tickets, but the customer churn rate went up?
And this is just customer success - arguably the easier case. When you move to development and design, it becomes even more complicated. How do you define a “good” outcome?
If Replit’s AI agent creates a UI that looks like it’s from the 90s in its first attempt, is that the outcome we measure? Or do we look at what finally goes to production after multiple iterations and feedback loops? What if the agent wrote 1,000 lines of code, but it was all buggy? What if the agent wrote 1,000 lines of code, but it was all unreadable? What if the agent wrote 1,000 lines of code, but it didn’t meet the requirements? These are all valid questions. And they’re all hard to answer.
Now let’s say you’re a designer. You’re using an AI agent to help you create designs. The agent creates 10 designs in a day. Is that a good outcome? You guessed it. It depends. What if the agent created 10 designs, but they were all ugly? What if the agent created 10 designs, but they were all unusable? What if the agent created 10 designs, but they didn’t meet the requirements?
How do you price something when you can’t even properly define what success looks like? It’s like trying to price a product when your north star metric keeps changing direction.
I don’t have the answers. But I’m excited to see how this space evolves. And I’m excited to see how PMs tackle this problem. It’s going to be interesting. And it’s going to be hard. But it’s also going to be important. Because AI agents are the future. And we need to figure out how to price them.

--- END POST: AI pricing ---


--- START POST: Figma vs Devin pricing ---
URL: https://manassaloi.com/2024/12/12/figma-devin.html

A few days ago, I was thinking about how pricing works for software products, especially in tools like Devin that depend heavily on AI. It’s not the same as something like Figma, where the cost of serving an incremental user is pretty negligible. Once you’ve built the product and infrastructure, every new user is just another account on the system—there’s no real extra cost. That’s why I’ve been hoping Figma introduces regional pricing at some point. Right now, a lot of people in regions with lower purchasing power are likely to churn to cheaper alternatives like Sketch or Penpot. If Figma doesn’t adapt, it feels inevitable.
But Devin is a whole different beast. You can’t do regional pricing easily because every new user burns through expensive GPUs. It’s not like regular software companies, which can rely on high margins to scale. AI-based tools, especially ones that serve developers or professionals, have costs that are way more linear.
Here’s why: if Devin is running its own model (and I think they are), then serving costs remain high no matter what you do. Even if you batch requests efficiently to maximize GPU utilization, the cost per customer doesn’t drop the same way it does for traditional software. And we haven’t even talked about the inference cost. Every time the model processes something, there’s a tangible expense tied to it. Compare that to something like Figma, where an extra user is mostly free to serve once the infrastructure is in place.
So, the big question is whether Devin is actually better than hiring a ₹45k/month fresher from a tier 3 college and training them. Sure, Devin is fast, efficient, and doesn’t take sick days, but at that cost, it’s a real decision companies have to make. At $500/month, Devin has to deliver enough value to justify its cost. Otherwise, wouldn’t you just train someone for a fraction of that?
There’s also the idea of cheaper models. Once Devin collects enough user data, they could distill their larger, more expensive models into smaller, cheaper ones. It’s something we’ve seen with GPT models over time: GPT-4 -> GPT-4 Turbo, GPT-4o -> GPT-4o Mini. Google’s Gemini models are doing the same thing, like Gemini Pro -> Gemini Flash. These smaller models are more affordable to run, and they can serve users at lower price points.
But here’s the catch: cheaper models are usually for free or low-paying users. If I’m paying for GPT, I’m sticking with the full-powered version. I’m not settling for a smaller, distilled model that cuts corners, even if it’s cheaper to serve. And Devin is targeting pro users—developers who need performance and reliability. Are these users really going to settle for anything less than the best? I doubt it.
At the end of the day, tools like Devin have a tricky balancing act. Their costs are high because they’re solving complex problems, and the user base is sophisticated enough to demand top-tier performance. But as AI infrastructure evolves and costs (hopefully) start to drop, maybe we’ll see these tools become more accessible. For now, though, regional pricing and cost efficiencies are easier said than done. Until then, companies and users will have to make some tough calls.

--- END POST: Figma vs Devin pricing ---


--- START POST: Differential pricing ---
URL: https://manassaloi.com/2024/12/08/differential-pricing.html

So I was scrolling Reddit and stumbled upon this thing about Zepto doing differential pricing: charging people different prices for the same stuff. But get this - it’s based on the price of your phone. Seriously?
Like, what is this, amateur hour?
If you’re gonna do differential pricing, at least do it right. Go big or go home. Here’s how I’d do it:
Phone Model: Obviously, right? iPhone 15 Pro Max? You’re paying extra. Older, smaller screen? Still paying extra, but maybe a little less.
Location: This is a no-brainer. Defence Colony folks can afford to pay more. Murugeshpalya, maybe not so much.
Society: Living in Adarsh Palm Retreat? Yeah, you’re definitely paying a premium.
Credit Card: HDFC Infinia? Get ready to shell out more.
Floor Number: Higher floor = higher price. Simple as that.
View: This is where it gets interesting. Diamond District, but your view is of a nala? Discount for you. Agara Lake view? Cha-ching! Pool view in your society? Pay up.
Peer Group: Your contact list is full of high-rollers? You’re one of them now, at least in terms of pricing.
Battery Percentage: Low battery? You’re desperate. And desperate people pay more. Charge your phone, then order.
Life Stage: Just had a baby? Congrats! Now you’re paying the convenience tax. Because, let’s face it, you’re not going anywhere anytime soon.
But why stop at device data? Let’s get the delivery guys involved. They’re already going to your house, right?
The Delivery Guy Audit: They deliver your stuff, and while they’re at it, they fill out a quick form on the driver app. How do you look? What’s your house like? Can they peek into your living room? Based on that, they can categorize you: loaded, middle class, poor. Easy peasy.
The Maintenance Fee Guessing Game: Delivery guys should also guess your society’s maintenance fees. Just another data point to fine-tune that pricing.
Workplace Intel: You tagged your location as “work”? Where do you work? Appraisal season just ended? How’d it go? People happy? Prices go up. Your company just raised a ton of money? You’re paying more. Engineering department? You guys are paying more than customer support. Layoffs? Okay, maybe you get a discount.
Look, if you’re not doing all of this, you’re leaving money on the table. It’s as simple as that. Zepto, you’ve got some catching up to do. And maybe, just maybe, this whole thing is a joke. But in a world where data is king, you never know.

--- END POST: Differential pricing ---


--- START POST: Saturday morning thoughts ---
URL: https://manassaloi.com/2024/12/07/saturday-morning-thoughts.html

The best part about joining a new company, especially a startup, is that it’s like hitting the reset button. You get a blank slate. You can be whoever you want to be. It’s not like getting promoted within your current company where people still see the old you.
Let’s say you’re a designer, good at your craft, but maybe not seen as a leader. Maybe your voice lacks confidence. Now you’re joining a new place as a design lead. You can just choose to be the most confident design leader there is. Use ChatGPT’s Advanced Voice, practice with the AI, and ask it to rate your delivery. Work on sounding confident.
This got me thinking about an AI product idea - something that helps you level up from an individual contributor to a manager. It could help you improve your presentation skills, teach you strategic thinking, and how to use the pyramid principle in your comms. I didn’t build it because I couldn’t figure out how it would be better than just using the latest GPT model with advanced voice features.
Cal AI went viral, thanks to TikTok, but I think its real success was due to simplifying calorie tracking. Snap a photo, and bam, structured data, daily calories logged. It cut out so many steps, so much friction. A lot of people start calorie tracking but never stick with it. Trust me, I know. I have tracked mine for two years now. A friend questioned if it can ever be truly accurate. Maybe not, there’s always a chance of hallucination. But, many people are happy with directionally accurate data rather than absolutely accurate data that requires a dozen steps. What are some other simple ideas like this?
There’s Pump.fun. It is making millions daily. Seems so obvious in hindsight. Binance got huge compared to Coinbase because they had a higher risk appetite for listing, let’s say, “interesting” coins. What if you had an even higher risk appetite?
Increasing intensity on one dimension is a cool framework for building new products. I saw a tweet about how people keep adding more caffeine to drinks, and it works. Coke -> Red Bull -> Panera Charged Lemonade.
If you’re building products with the same capital expenditure regardless of who you serve, you’re probably better off targeting high LTV users. Let’s say you want to build an AI astrology chatbot for Indian users and compete with Astrotalk. I’d say build a tarot card reader for white midwest Americans. Your costs are basically the same - fine-tuned Llama or prompting GPT. So why not target users who are more likely to pay what you need to cover your infrastructure costs?
Look at app revenue. The same app makes way more on the App Store than the Play Store. It’s not even close.
This is different from, say, 15-minute delivery. That could have probably only worked in India because of lower service and real estate costs compared to the US or Europe. I remember this 20VC podcast on quick commerce with all the big founders in the space. They debated whether to serve high LTV, high AOV customers who are okay paying for convenience, even with higher operating expenses (US/Europe), or if the model would succeed in India (lower AOV, lower service costs). It’s clear now it’s only really taken off in India. I think the other place it might work long-term is Dubai - people have the money, and there are enough service workers to keep costs lower than the US or Europe, though not as low as India.

--- END POST: Saturday morning thoughts ---


--- START POST: AI UX ---
URL: https://manassaloi.com/2024/12/02/ai-ux.html

I was talking to a friend the other day. He works at an AI startup, and we got into this whole discussion about how we’re actually going to use AI in our everyday lives: the real everyday things, like booking a flight.
Right now, if I want to book a flight, it’s a whole process. I’ll probably open up Google Flights or Skyscanner. Maybe Makemytrip or Cleartrip if I’m feeling fancy. Or, if I’m really trying to maximize those credit card points, I’ll go through Smartbuy. It’s a bunch of steps, filters, and hunting for offers.
But what if we could just tell an AI, “Hey, book me a flight to Mumbai on Sunday morning. I don’t want to spend a fortune, but one stop is fine. And avoid AirIndia - they’ll probably lose my luggage.”
There are a few ways I can see this playing out:
The Chatbot Scenario: You prompt Claude (or whatever AI you use). It knows your preferences, has your card details, and can book directly through the OTAs because they’ve opened up their data. Maybe it asks a few follow-up questions in the chat, or maybe it just presents a few options, and you pick one.
The “Take Over My Computer” Scenario: This one’s a bit wilder. Imagine an AI like Claude Computer that literally takes control of your computer and goes through the same booking steps you would. No need for direct data access from the OTAs. Maybe it still needs your approval at certain points. It could show options in the Claude chat, or maybe there’s some kind of overlay on your screen where you hit “approve.” And for payments, maybe it can even read your OTP if needed.
The Siri Scenario: This is where Apple (or Google Assistant) might really shine. They could do everything - book, pay, read OTPs, the whole shebang.
The In-App Agent Scenario: What if OTAs integrated with agent platforms like Sierra? You could chat directly within the OTA app to book, get support, and even get upsells. Imagine the agent suggesting a rental car or travel insurance right in the chat instead of those annoying follow-up emails.
The Hybrid Scenario: Maybe it’s a mix of all of these. Your Claude Computer could be prompting inside the OTA’s chat, which is powered by Sierra, creating this whole agent-to-agent interaction to complete the booking.
This kind of high-intent, specific workflow seems ripe for automation. It’s like that one-tap booking on Namma Yatri - just skip all the steps.
But then there are things like food ordering. That’s more discovery-based. You’re not just looking at price; you’re browsing restaurants, cuisines, checking vouchers, and maybe deciding the delivery fee is too high because it’s raining and you’ll just make Maggi instead.
Look, no one knows exactly how this will pan out. These are just some random thoughts I’ve been having. But it’s a fun thought exercise, right? How will AI change the UX of the most basic things we do. Will these be better or worse. Only time will tell.

--- END POST: AI UX ---


--- START POST: Learning 3.0 ---
URL: https://manassaloi.com/2024/11/24/education-new.html

I remember a discussion with Nikhil(one of the best thinkers in the fintech space, btw, and og UPI crew) about utility bill payments, and he pointed out how it has evolved.
Bill payments 1.0: You would get a physical electricity bill. You would then go to the office of the electricity company to pay it. (You can imagine how cumbersome the process was).
2.0: Instead of a physical address, you went to the website, very primitive technology, not great UX, but if the website worked that day, you could at least save a trip to the electricity board.
3.0: You don’t go anywhere, be it a physical office or a website, the bill comes to you. Push versus pull. All the complicated details are abstracted. Within 5 seconds (two, three taps) you are done. A single experience for all payments: electricity, water, phone, internet bills.
Now you know that boy has a weakness for frameworks. So I started to see everything in these phases.
The latest being learning.
Learning 1.0: You have bought a new piece of software. Let’s say Adobe Photoshop. You would go to an offline class to learn graphic design (and the Photoshop tool).
2.0: You took online courses to learn Photoshop. Maybe you watched a few YouTube videos. You are still getting information.
3.0: Your teacher comes to your tool and teaches you. Push versus pull. The teacher knows how you like to learn. The time it takes you to understand a new concept. They can see you using the tool. Teaches you better ways to use it. This teacher is the new Gemini and ChatGPT that can access your screen in real time: the multi-modal mode.
It is still early days. But I see a world where you just start using a new tool and instead of reading an onboarding document or going through an onboarding flow, you just start using the tool with Advanced Voice (your new teacher). Imagine the possibilities. This is probably the most exciting time in human history when it comes to learning new skills. You’ve always had Youtube, but this is much, much better.

--- END POST: Learning 3.0 ---


--- START POST: Sarvam AI ---
URL: https://manassaloi.com/2024/11/23/sarvam.html

I was catching up with a friend the other day, and we ended up going down this rabbit hole about AI, new consumer apps, and somehow, Sarvam popped up. You know, the guys who built the only foundational model in India?
My friend, who’s pretty plugged into the tech scene, didn’t even realize it was a foundational model. He just assumed it was some fine-tuned version of Llama or Qwen. And honestly, I wasn’t 100% sure either until another friend confirmed that, yeah, it’s the real deal. Apparently, they put in a ton of work creating synthetic Indic data to train it.
That got us talking about the market size. I mean, for any product to take off, it really boils down to being one (or ideally all three) of these:
Better
Faster
Cheaper
Let’s stick to Indian use cases for now. Take something like those calls from banks about loans. Could Sarvam power AI agents that call up customers offering consumer loans?
Now, Sarvam (at least according to their blog posts) seems to be way better than other small models at understanding the nuances of Indic languages. So, if they can do this job cheaper than actual call center agents, and the performance is just as good, then it’s easy to see a bunch of banks jumping on board.
But here’s the catch: will these banks use a mix of LLMs? Like, maybe OpenAI or Gemini for English and Sarvam for regional languages? Or will they just go all-in on Sarvam? Or, and this is a big one, will OpenAI just get so good that their AI agents can flawlessly speak Oriya, Assamese, and every other language, making Sarvam kind of irrelevant?
Sarvam’s whole thing was generating a boatload of synthetic Indic tokens so it could outperform global LLMs that are mostly trained on English. Will a smaller, cheaper model actually be better in the long run? Only time will tell.
If this is a real market, how big is it actually? OpenAI can go global. Sarvam’s strength is in regional languages. They’ve done a good job training their model on a budget (which they had to, given their funding). And if this approach works, and they can keep fine-tuning, they might actually have an edge in regional use cases.
But again, how big is that market? If you’re talking about lending, an English-speaking customer is probably a higher-value customer than someone who wants to chat with an AI agent in Oriya.
Inference is another piece of the puzzle. Sarvam claims their inference is 4-6x faster than larger models, while matching or even beating their performance on Indic language tasks. But we don’t know about the cost. Could smaller, fine-tuned Llama or Qwen models be cheaper for inference? I mean, these big companies are probably pouring money into R&D to lower inference costs, and they can spread those costs over a much larger customer base. We just don’t know yet.
And what about globally? What if Sarvam’s approach is the right one? What if a ton of synthetic local data really does help build a better model for regional languages? Could they sell their tech to other countries that want their own native LLM (maybe for patriotic reasons, national security, or privacy)? Sure, OpenAI will probably support more and more local languages, but there’s a long tail of languages and countries they might not bother with because the scale isn’t that exciting. Could Sarvam build a sales team that goes out and sells custom models to these countries?
So basically are the questions:
Can they generate synthetic Indic data in a way that gives them a real moat? (Not just a technical one, because Facebook could do the same with Llama, but they probably won’t because a smaller regional model isn’t a priority for them).
Will this model actually outperform smaller models on specific tasks?
Can they export this tech to other countries?
Just like when we’re building products, asking the right questions is crucial when evaluating companies.
I’m super pumped to see a regional player in this space. And I really hope they can go toe-to-toe with the global giants. But honestly, Sarvam seems to have dropped the ball on their PR. I had to dig through Hugging Face and their blogs to understand their approach. And every time I bring up Sarvam, people ask if their model is even out yet and if they have any real customers. Compare that to the buzz OpenAI, Claude, and others get whenever they release something new. They need to up their game for sure.

--- END POST: Sarvam AI ---


--- START POST: The new AI wrapper products pipeline ---
URL: https://manassaloi.com/2024/11/22/ai-products-pipeline.html

The AI video gen products are messy. Heygen has probably the largest collection of AI avatars, but the generated videos look “AI” and not human. Captions AI is decent, probably the only one that has been able to generate videos that can be uploaded on socials to shill products.
But zero shot prompting does not always give accurate results. Then you need Capcut (which does not even work in India) to stitch together app screenshots and the AI-generated video. This is not easy.
Current workflow for most AI wrappers:
US app builder -> US TikTok influencer -> US influencer charges up to $5 CPM -> There are so many internal workflows to manage these influencers -> Grow
Manageable workflow:
Indian app builder -> European influencer of fiver -> Get video -> US phone + TikTok -> Pray
If the opex is the same (essentially infra + some LLM), then you want to sell to the US audience, which has the highest LTV. Indians don’t pay, except for quick commerce, and more than that see yesterday’s GDP growth numbers.
Ideal workflow:
Indian app builder -> Build any AI wrapper -> (You use Styletransfergen -> Get clips -> TikTokpostingworkflownew) -> Grow
Styletransfergen’s product flow will be similar to Captions AI.
But instead of text -> video prompt, it lets the app builder create a video however they want -> lets you choose AI avatars -> AI avatar uses the same style, hand gestures, script, including pauses to create a human video instead of a clear AI looking video. Currently there are reels where you can see this. Brad Pitt’s face superimposed on some guy’s face. But again, it looks AI-generated.
Tiktokpostingworkflownew -> Maybe it is an agency. Maybe it is a marketplace that buys US phones -> installs TikTok -> warms up the account. And then starts posting your videos.
Why TikTok and not Reels? TikTok is still the original slot machine. On Reels, it is difficult for one-off videos to take off. Comparatively easier on TikTok.
We tried getting an iPhone flashed -> install only TikTok -> take US e-sim/ use VPN -> Poast workflow. You just get shadow banned.
Why can’t Indian app builders publish their own videos for an Indian audience? If you are building Astrotalk then sure. If you are building an AI wrapper then look at the opex comment and the GDP growth comment. The first part of the workflow is still important, even if you figure out the TikTok workflow. You need a European looking AI girl/guy to shill your wrapper. And style transfer is what will work. Text -> Video prompt products are again like playing with a slot machine, and there are limited types of videos you can create with the limited AI actors and backgrounds available in Captions AI today.
There should also be more templates in the product. Especially the ones that start on TikTok. Maybe even music.
More backgrounds for AI. Backgrounds are not hard, you just need to take videos of more environments.
You should not have to go to Capcut for more editing.
If this workflow becomes possible, there will be dozens of AI calorie counters, voice note products, AI video clippers, transcription apps flooding the App Store. And India’s GDP will be 7% again.

--- END POST: The new AI wrapper products pipeline ---


--- START POST: Zomato COS: Pay to play ---
URL: https://manassaloi.com/2024/11/21/zomato-cos.html

Yes, everyone’s seem to be losing their minds over the job posting. 20 lakhs to apply. Yes, you read that right. You pay Deepinder to work for him. And the internet is having a field day. A lot of memes. A lot of outrage. And a few ex Zomato employees defending Deepinder and calling this the opportunity of a lifetime.
But let’s take a step back. What is Deepinder, Zomato’s founder, actually trying to achieve here? It all boils down to success metrics, as it always does. Deepinder’s probably thinking:
Hire an absolute A-player.
Someone who’s ready to work insane hours. This isn’t new. The last COS posting also emphasized “no WLB” (work-life balance) and “extreme long hours.”
Someone with serious skin in the game. If you’re coughing up 20 lakhs just for a chance, you’re going to give it your all. No slacking, no half-hearted attempts.
So, how does he get this unicorn of an employee? Let’s break it down:
Distribution: The first COS post was wild. This one’s even wilder. Everyone in the tech world, and probably their grandmothers, have heard about it. Mission accomplished on getting eyeballs.
Self-Selection: This is where it gets interesting. You’re not going to get 10,000 applicants. Maybe 1,000, and that’s probably a stretch. But these 1,000 will be the ones who are seriously considering this insane proposition. They’ve already bought into the idea, at least a little.
Is this a win for Deepinder?
Let’s revisit those success metrics:
A-Player: This is tricky. This kind of post automatically turns off a lot of top-tier talent. If you’re good enough to be considered for this role, you probably already have offers in the 50L-1Cr range. Why would you give that up and pay 20 lakhs instead? Many COS roles are filled by post-MBA consultants. They’re already drowning in student loans. Is this even remotely appealing to them? So, yeah, the pool gets smaller, and not necessarily in a good way.
Long Hours and Skin in the Game: Now, this is where it gets interesting. That Bain consultant making 75 LPA might still consider the COS role, but will they hustle as hard as someone who’s paying 20 lakhs instead of drawing a 75L salary? Probably not. The person paying 20 lakhs is basically betting their career on this. The stakes are much higher.
A lot of Twitter folks are saying this will just attract rich, privileged kids, maybe some ex-Ashoka types. And that Deepinder will miss out on genuinely talented individuals who can’t afford this gamble. Maybe there is some truth in that.
Who would actually do this?
If you’re a high-risk, high-reward kind of person, willing to put in the crazy hours, and skilled enough to get selected, think about what you get:
Direct access to one of the most successful founders of our generation: You’ll see how Deepinder operates up close and personal.
Network: You’ll likely have access to his network and even his inbox. Most people have to rely on Internal Tech Emails’ Twitter account to read CEO memos.
Deepinder will be as invested as you are: He’s facing major backlash on social media. He’s not going to let this fail. Most roles are one-sided. You’re trying to impress some C-level exec while being a number in HR’s spreadsheet. This will be very, very different.
What’s actually going to happen?
Most Likely: Deepinder hires some ex-consultant, and the internet forgets about this in a week. Just like the last COS post.
Wild Card: Someone makes an incredible pitch on Twitter or LinkedIn and gets the job without paying the 20 lakhs. This would be the ultimate PR move.
What I don’t get: Why not hire internally? Zomato’s known for its intense culture and high churn. Not everyone can handle the pressure or the insane hours. Someone from Ops or Strategy who’s been there for a year or two would be perfect. But, hey, Zomato does Zomato things. And they’ve got Twitter talking, which is probably what they wanted all along.
This whole thing is a fascinating case study. Is it brilliant or completely bonkers? Only time will tell.

--- END POST: Zomato COS: Pay to play ---


--- START POST: An overload of interests ---
URL: https://manassaloi.com/2024/11/18/interests-overload.html

A few days ago I was overwhelmed by the number of things I try in a year and the progress I make.
Just this year I’ve tried to:
Get better at visual design
Continue strength training
Run more
Get back to coding
Play mid/high stakes poker
Learn about the AI landscape
Read more books
Diversify my investments
Write more
Public company analysis
Do side projects
Stay in touch with my friends
This doesn’t even include
Continue to get shit done at work
Family
Travel (both work and personal)
I always joke to myself that if Papa Zuck can learn Mandarin in a year, I can get better at Figma.
But it is still a lot.
What has helped me (a little) is telling myself that I don’t have to learn iOS in a month. I don’t even have to make a lot of money at poker. I am pretty good at product and interaction design, the visual sense will improve over time. I picked up a lot of this stuff by choice. Nobody is forcing me. I can just keep doing my day job and never have to worry about getting better at anything else or even monetising it. Nothing will replace the salary I earn as VP Product. And I am probably capable enough to get another job. Besides, when you lose more than a month’s salary (my first job) because of the colour of a card on the river, you get a little desensitised to money.
I remember having goals around running for years before I actually went running. Years of wanting to train before I built my home gym.
Life is long. You need new things to keep it interesting. Every new thing I try, I learn something new. I get better.
Relatively, of course. Compared to where I was a year ago, not much progress in absolute terms.
I have been blogging for more than 10 years. Has it led directly to anything? Probably not. But I have met so many interesting people who read what I write. Every time I post something on Twitter, people DM me and tell me what they are working on. People use career posts I have written to negotiate job offers. House hunting. I have started to appreciate serendipity.
There is still no production-grade side project that has a lot of users. I got a PR in the deadlift and then couldn’t get back to regular strength training. I ran a half marathon but limped the last 5km.
But hey, maybe next year I will run the whole thing. Until then, I will not be hard on myself.
I have probably got better or done something related to all the things on my list. And that probably matters.
We will all be 80 year old uncles or aunts in our societies (if we are lucky enough to get old and not die of lung cancer from the air we breathe here). Use a walker for our evening walks. Wondering where our years have gone. When we have tried enough, done enough. I just don’t want to go back to this winter of 2024, down memory lane, and ask why I didn’t do more with my time. Why didn’t I learn that frames are better than groups in Figma?
And yes, before anyone asks, I don’t have any children. No new flat I bought that I have to renovate. No EMIs to pay. What am I going to do with my time if not this.

--- END POST: An overload of interests ---


--- START POST: Ridehailing business strategy ---
URL: https://manassaloi.com/2024/11/17/business-strategy.html

I had previously written a blog post called
‘How to be strategic’
. I think when executives ask PMs to be more strategic, they are mostly referring to the content mentioned in the post.
Let’s talk about how to be strategic when it comes to building a moat by doing things that are hard for competitors to copy.
For a ride-hailing company, being strategic means:
Structurally lower prices that can’t be easily copied by competitors. A good example of this is electric vehicles. Let’s say you have a way of producing bespoke electric vehicles for ride-hailing that cuts operating costs by 10%. And you lock those suppliers into long-term contracts and your competitors can’t buy those vehicles. This means that instead of relying on demand spending (through vouchers or subscriptions). You have a way of offering rides that is far more attractive to your customers. And the only way they can match your price is by subsidising rides and cutting into their margins.
Every time you can reduce prices (say by 5, 10, 20%), you unlock the next level of economy customers. A good strategy exercise is to ask yourself which new customer segment you are attracting with each 5% price reduction. Eventually, you will even be able to compete with public transport.
Winning public transport. The office commute is one of the biggest use cases for ride-hailing. A commute has 3 legs: First mile, middle mile, last mile. What if there was a way to bundle all the legs into a single booking? This is what a South East Asian Super App (SEASA) offers. They are the only company in the world that lets you book your first mile (bike), middle mile (train) and last mile (bike). As a user, you can choose which service you want for each stage. In this way, the app is top of mind for users with long commutes. This requires long-term thinking. The process needs to be seamless. You need parking near transit stations. You need brand visibility on the ground. You need directions to the car park. You need queuing systems if you want to have instant booking (like Bengaluru airport).
Partnerships. A good long term bet is to partner exclusively with all middle mile providers, so that SEASA would win the commute and the competition can’t follow. Over time, they would also win inter-city use cases. If you travel inter-city and book the middle mile with SEASA, then you would probably book the first and last mile too if you get a good bundled price.
Dominating popular locations. If weekdays are for commuting to the office, then weekends are for going to the mall. Do you have relationships with shopping centres so you can own parking spaces? Do you have instant booking where a customer can simply queue and get into the next available car by sharing an OTP?
Locking supply. Namma and Rapido showed that in a supply-constrained market, demand follows supply, not the other way around. The conventional wisdom has always been that the most important thing in a market is to capture demand. That is why Uber and Ola spent years marketing to users (demand). While Namma and Rapido just decided to disrupt the market by changing the business model of ride-hailing (instead of a fixed commission structure, a flat fee per trip or a daily/monthly subscription). Uber, being a public company and having spent years acquiring demand and supply, find it hard to get go of it’s margins.
Moving fast. It used to take 6 months to launch a new product at SEASA. Then someone (guess who) led a year-long project to reduce the launch time to 2 weeks. Instead of treating every new launch as a big mega-project, launching a new service became a small experiment. Need a new service for electric cars only? Sure, just tag relevant vehicles as electric and launch it. Responding to competition and experimenting with new services became trivial over time. Sometimes you have to go slow to go fast.
Owning maps. You can have the best location data. Data on all points of interest (POIs), and also gates at POIs. If a customer wants to go to Nexus Mall, can they choose the right gate? Can you provide detailed directions with pictures.
Locking key user segments. A price-conscious commuter would probably want more reliability on pricing. Lyft now has price lock, which locks prices on pre-defined routes at fixed times. A dual-apper (a person who uses both Lyft and Uber) used to compare both apps and make a trade-off between price and ETA. Price lock ensures they don’t even open Uber. A business user, once onboarded with a ride-hailing app for business trips, would also use it for personal trips. They have more money overall, but even better: for the business rides, they are price insensitive because the company pays for the ride. They would earn points that they could also use for their personal journeys. This means that all ride-hailing apps must also have a B2B business. Forget ride-hailing, you can see how Zomato has launched its B2B product. Lyft has a service that connects women riders with women drivers.
Ability to try multiple allocation strategy. Haggling, boosting/tipping, nearest driver, optimal driver, sequential allocation, multi blast to a wide pool of drivers, pooling: A ride-hailing app needs to be able to play around with allocation strategies and run multiple strategies based on segment and region.
Establising overnment relationships. Uber works with airport authorities around the world to provide the best airport experience. For ride-hailing companies, airport trips represent a significant percentage of their GTV (high AOV trips). Uber has even started offering flight bookings in the UK to win multi-modal (all legs) trips.
A few other points: Could Zomato or Swiggy have acquired Yulu and locked in this type of vehicle for short term deliveries? Can Rapido build a relationship with transit stations to allow their bikes to be parked near stations? Can they work with the government to get friendlier regulations for 2W?

--- END POST: Ridehailing business strategy ---


--- START POST: Advanced voice ---
URL: https://manassaloi.com/2024/11/16/advanced-voice.html

Claude models are much better at coding than OpenAI models.
But I pay OpenAI just to use Advanced voice. I was never a big fan of voice as an input. Can’t live without it now.
I even got people to pay for ChatGPT Premium by showing them the things they can do with Advanced Voice.
Let it act as your therapist.
Use it as a thinking partner for projects.
Prep for interivews.
I once told someone that they needed to appear more confident for management interviews and they could use Advanced Voice to act as a coach and get feedback on how to appear more confident and have it rate their answers. And guess what: Advanced voice did the job.
It is amazing and well worth the $20 per month fee.

--- END POST: Advanced voice ---


--- START POST: Eigenquestion ---
URL: https://manassaloi.com/2024/11/15/eigenquestion.html

I was talking to someone about quick commerce in Indonesia. Why the country doesn’t have a Blinkit or Zepto yet.
Indonesia is a collection of islands, but the majority live in Java, the main island, and a region similar to NCR, Jabo, which accounts for 40/50% of on-demand orders.
The person made a very interesting point: if a single company made it big there and was the combination of Zepto + Blinkit + Instamart for Jabo, and their business was comparable to NCR, then they would be a unicorn.
Now you can ask a lot of questions:
What is the macro situation of that country?
Is the economy growing?
Will fulfilment costs be as low as India where we have “cheaper” labour?
Will logistics be 1PL (dark store) or 3PL?
Is the middle class big enough?
Will people pay a premium for convenience? Speed?
What is the online shopping behaviour like?
I could go on and on.
But the
eigenquestion
is: what is the demand density like?
Imagine you could divide Jabo (the serviceable area) into smaller regions (polygons) and polygons made up of (s2ids), then are there enough polygons with enough demand density that you can create a quick commerce operation to serve that demand?
Take NCR. There are all these DLF phases with sectors and their high-rises. Probably thousands of flats in a small area (polygon). Mostly people who work in technology live there. You can imagine a darkstores optimally positioned to serve all these polygons.
If the demand density isn’t high enough, it doesn’t matter if the supply-side economy works or not, you won’t be able to run a quick commerce business.
As quick commerce expands to smaller cities, the same assessment has to be made.
I teach everyone who works with me how to ask the right questions. If you are a founder or a PM, you need to build this muscle of asking your own eigenquestions.

--- END POST: Eigenquestion ---


--- START POST: e/acc ---
URL: https://manassaloi.com/2024/10/15/eacc.html

The e/acc movement has become cringe because the creation of a movement is the last step in the creation of a startup/ecosystem.
Steps for building a startup: Find an inflection, uncover a novel insight, test a bunch of ideas around that insight, build and scale one of them, and start a movement (h/t Mike Maples).
e/acc jumped straight to the last step without building anything. Co-opted by clout chasers who found it easier to change their twatter user name than shipping anything of value.
P.S Even the Bitcoin Bros used their laser eyes after years of growing the crypto ecosystem.

--- END POST: e/acc ---


--- START POST: Designing for high intent usecase ---
URL: https://manassaloi.com/2024/10/14/high-intent-design.html

You want the transaction to happen as quickly as possible without distracting the user when designing for a high intent product.
For ride-hailing, you want the transaction to happen as quickly as possible for a user who is going to the office in the morning. Reduce the entire journey to a single tap if possible.
For medium intention use cases like food, you as a PM, want the user to feel like they are getting a good deal. So playing on  price perception from home page itself is important. If you are providing a voucher, tell the users they have it and will get a discounted price. If you are running a 1+1 offer for some restaurants and you have tagged a user as price sensitive, try to show case items with that 1+1 offer as early in the funnel as possible.
For ecommerce, as it is low intent you can do gamification as well as other jazz. Let users unlock coupons by spinning a wheel. For apps like Temu the game is to make the user feel like they are getting a good deal and increase their intent to transact.
A lot of Chinese apps lean heavily on gamification. Shoppee and Temu look very different from, say, Zomato or Swiggy. And that is intentional.

--- END POST: Designing for high intent usecase ---


--- START POST: Why Zomato will go big on lending, eventually ---
URL: https://manassaloi.com/2024/10/12/growth-bottlenecks.html

At some point, every executive has to ask what is holding back their growth.
A few years ago, a lot of cloud infrastructure companies (Azure, GCP) stumbled upon the same growth secret: If you can invest in fast-growing companies and get them to move their infra, it doesn’t take long to get that investment back. They were essentially underwriting their future revenues.  Look at Microsoft and Google’s billion-dollar investments in various ride-hailing companies, and how they got those companies to move from Azure and GCP to AWS.
Zomato has exhausted their base of regular customers and your price has reached a point where they can’t unlock the next 10 million customers (which can be classified as the affordable/economy segment). The only way to unlock this segment is to lower price.
Of course, they can lower their delivery costs by making better use of their supply. There are dozens of supply-side optimisations that any on-demand business can do. And the more volume one does, the lower their quantum spend, because both fixed costs and variable incentives can be spread across orders. The more Blinkit grows, the better Zomato can drive utilisation.
But how much more?
Zomato will still need some demand-side incentives. How do they get restaurants to subsidise orders? Participate in discounts. Run more ads. Even carry more inventory as demand scales.
How can Zomato help with working capital for restaurants?
Lending.
Microsoft and Google invested billions and got their money back through infrastructure spending.
Zomato does not have the balance sheet/free cash flow to do that. But they can definitely partner with NBFCs to help their merchants with their working capital needs.
That money will come back to them. Merchants will order raw materials through Hyperpure. They will advertise on Zomato. They will even subsidise discounts to create demand.
If I were Zomato, I would even put a clause in these loans so that most of the money is used through the Zomato ecosystem and not through Swiggy. Can they do that? Who knows. The investment in cloud companies definitely came with clauses around infrastructure spending through them.
This is pure guesswork at this point, but my guess is that over the next few years, Zomato will make a big push into lending. First to restaurant merchants, and then to Blinkit franchisee owners.
P.S. I don’t work at Zomato and most of my posts are about what I would have done had I been in charge of a company’s strategy. That’s why despite Zomato recently withdrawing their lending licence, I still feel they will eventually go after lending.
Toast
has done the same in the US.

--- END POST: Why Zomato will go big on lending, eventually ---


--- START POST: PMs need to have a POV ---
URL: https://manassaloi.com/2024/10/11/pm-pov.html

Product builders need to have an opinion about the things they build.
Many of them don’t.
Let’s say you are the PM who is in charge of the home page at Zepto. Your company spends a lot of money on acquiring new users every month.
Do you have an opinion on how the first transaction of a new user should be carried out? Do new users look for items via search or do they go to the categories on the home page? Or do they find the relevant SKU on the home page itself because your feed recommendations are so good?
If it is the search, have you made the search more prominent for the new user and reduced the other elements that may just be noise?
What’s the right time to sell them ZeptoPass? Before they have even added a single item? After they have added 1 item? Do you throw a pop-up and when they click on the shopping cart icon ? Or when they land on the cart?
What is the right communication on the hero banner on home?
What do new users care about most? Is it the lowest price for items? Is it free money in their wallet? Is it free shipping on first X orders? Is it reliability? Reliability in terms of delivery time or reliability in terms of finding the item they are looking for (because Zepto has the largest SKUs (assumption)) or is it reliability in terms of items being fresh (for groceries) or delivered in the right condition?
Is the hero banner on the home page talking about what is most important to a new user?
Now, new users are not a homogeneous segment. The behaviour of new users may be different in different regions. As well as the segment they belong to (affordable vs normal vs premium). It might depend on the time of day, whether it is the festive season, whether your supply situation is good or bad at that time. But you still need a POV as PM if you need to have a high conversion at home.
If you are the pricing PM, do you show a discounted price with strike through on the base price, or do you mention that this is conditional and eligible above a basket value? Do you show the base price but mention in the banner that a coupon of value X will be automatically applied? Or do you automatically add the Zepto Pass and show discounted prices? Do you show free shipping + discounted prices? Do you show free delivery + auto applied voucher without strikethrough on the base and discounted price knowing that the customer might feel misled on the cart if you show that the prices are only relevant if the cart value is over a certain amount?
There is no right answer. And the easiest thing to do is to run a dozen experiments that lead to results that are statistically significant, but a combination that leads to a home page that delivers your org structure instead of what is most relevant to the new user.
How to have a POV? Think a lot about the different products you use. Keep thinking about alternative options in terms of design and strategy. And have people with whom you can discuss these opinions.
Recently I spent an hour with a friend debating whether a super app (Swiggy) was a better strategy or whether standalone apps were the way to go (Zomato).
Stand alone apps mean that every app owner has their blank canvas to work on. They can build standalone brands. They can have different social media strategies. You don’t have a dozen dependent teams to coordinate when you need to ship something. But you can’t also have a loyalty programme that rewards users for using multiple products in the super app. Communication to users is easier. You can send push notifications separately based on the JTBD. Users are less annoyed because they are not getting multiple notifications from the same app.
But there are drawbacks. If I buy a gift card with my credit card as a user, I can use it on either Blinkit or Zomato, not both. Zomato has to acquire users for both products separately. They can’t cross-sell easily. I remember for the longest time in my current company, we used to measure the percentage of MTU that was transacted across mobility, food and payments. We called it the golden triangle. Swiggy probably does the same. Look at what percentage of users of their food product end up using Instamart, Genie and other products. Swiggy has to spend money just once on acquisition, but can then cross-sell the same user to multiple products. Zomato has a deep tie-up with Blinkit, but when they launch District, they would have to figure out how to get distribution for District too. How they can cross-sell their current users and get them to install the new District app. But again, the District app owner will have full control over the customer experience.  A different acquisition strategy. A different retention strategy and loyalty programme. They can move fast because it is like a new startup within Zomato. The Swiggy Minis or Genie PMs probably want better visibility at home and to do things differently, but they have to stick to the Swiggy design system as well as the various processes that have become standardised at Swiggy.
Of course, there are many more nuances. Why have super apps been so successful in China and South East Asia, but not in the US? A lot of think pieces have been written on why standalone apps are a better approach once Zomato becomes bigger than Swiggy.
Okay, I’ve gone on a long tangent, but yes, have a POV as a PM.
Caveat: Having a POV does not mean you always get to do what you think is right. A lot of organisational dynamics, including power plays between various people at the top, determine what decisions are ultimately made. It is a constant tug-of-war between product and business, various executives who sometimes have their own agendas. But despite all this, if you want to become a better product builder, you should spend a lot of time thinking about the product you are building, as well as the products you use every day.

--- END POST: PMs need to have a POV ---


--- START POST: Founder mode ---
URL: https://manassaloi.com/2024/09/11/founder-mode.html

I saw a tweet comparing Airbnb’s stock price (founder mode) versus Booking’s (manager mode).
Airbnb has to be in founder mode because it is a seasonal business facing headwinds in terms of weakening consumer spend. They are generating more cash flow, but they cannot afford to be in peacetime mode. It is wartime for them. They have not been able to scale beyond their original short-term rental business. They tried to go multi-product, capture every transaction in the customer holiday cycle: announced flights (then did not launch), experiences (has not scaled), long-term rentals (TBD). Compare this with Booking, which has multiple portfolios and has (arguably) executed far better.
If you see tweets on Airbnb, it will mostly be people complaining about cleaning fees and how Airbnbs have become far more expensive than hotels.
Brian Chesky has no choice but to be in founder mode — or what Papa Horowitz calls wartime mode.
Instead of founder mode vs manager mode, it is better to frame it as wartime vs peacetime mode.
Low-margin businesses in terms of take rate with medium intent (food delivery, vacation booking) will probably always be in wartime mode. Deepinder will always run Zomato in founder mode.
While Google, one of the best businesses of all time thanks to ads, can afford to be in peacetime mode run by managers. Apple, which can launch the same products with different skins, can afford to be in manager mode. Facebook, in spite of Zuck, had somewhat turned into peacetime mode with high opex and huge employee bloat. Thanks to Apple making changes to ad tracking and thereby potentially affecting the Facebook ads business, and multiple public investors putting pressure on Zuck, Zuck cut employees and opex, got a whole PR makeover, and turned Facebook back into wartime mode.
And most companies, especially low-margin, execution-driven businesses, will follow this playbook now that ZIRP is over.

--- END POST: Founder mode ---


--- START POST: Right to play ---
URL: https://manassaloi.com/2024/08/21/right-to-play.html

The right to play, the right to win, offensive and defensive strategies and other thoughts.
As a company, you can be on the offensive or you can be on the defensive.
Let’s say you are a conglomerate. You have a gaming business that generates a lot of free cash flow. It would be logical for you to use that cash flow to get into other businesses and try to win at them. You can subsidise several businesses over a number of years and you can out-compete other players thanks to your balance sheet. You have a right to play. Maybe even the right to win, if you do a good job of execution.
A lot of companies aren’t just in the game for the sake of playing the game. They want to win. When Dara came to Uber, he decided that Uber was only going to compete in markets where they could be number one or two, which he defined as winning. He got out of their AV business. They got out of markets where they were not in a position to win.
Some companies have to make the choice to be in the game, even if they can’t win in the strictest definition of winning. You are a ride-hailing business in Southeast Asia. Your rival operates in several countries. In some of the markets, they are the largest player. They can set the prices they charge. They are generating excess cash that they can burn in your home country and take market share from you.
So even if your cash position isn’t strong, you might still have to play in those other markets so that the market leader can’t abuse its position as the number one player and generate enough free cash flow to outspend you in your home market.
Not letting the competition generate a lot of FCF in markets that you can’t win, and giving the customers an alternative in case the number one player abuses its monopoly position, is reason enough to play.
This is mostly a defensive game.
Closer to home, the e-commerce game is heating up.
The game of eCommerce is an optimising problem that consists of the following variables:
assortment / selection (more selection is better)
delivery time (the shorter the better)
reliability (the higher the better)
constrained by how much it costs to fullfil a delivery.
Ideally, you would like to offer your customers the widest possible range of items, deliver in 15 minutes, with a high level of reliability, and at the lowest possible cost.
But if you want to deliver in 15 minutes, you can’t have the widest range of products. Assortment depends on the size of your fulfilment centers/dark stores. You can’t set up dark shops in every place with huge stocks. If you’re delivering in 15 minutes, you can ensure reliability for groceries, but when it comes to high value items like expensive electronics, you’re going to want to check and control quality. You need a lot of SOPs for reliability. You want a high rate of fulfilment. You want to have fewer null searches (which means you need to stock more). This is harder to do if your focus is on speed. And your costs go up if you still try to maximise on all fronts.
Quick commerce players have by now trained people to choose speed provided certain reliability bar is met. People have moved from just ordering food to npw ordering low-cost electronics and even buying rakhis and legos.
As quick commerce players enter more categories and take market share in these categories, it is inevitable that bigger players like Flipkart and Amazon will fight back: first to defend quick commerce players from moving into higher price point categories, and then to go on the offensive once they have redesigned their supply chain to compete on 15-minute deliveries.
So the question is, which will happen first?
quick commerce scaling to more categories at the same logistics cost and delivery time.
e-commerce players figuring out how to compete on faster delivery, first for high priced items to defend those categories from quick commerce players, and then to take share from existing quick commerce players in low AOV but high frequency categories like groceries.
It will be interesting to see how this plays out.

--- END POST: Right to play ---


--- START POST: Founder ambition ---
URL: https://manassaloi.com/2024/08/19/founder-ambition.html

Aadit, the CEO of Zepto, compared his company to Amazon and got a lot of ridicule on Twitter. But if you’re a founder, it’s better to index on outrageous ambitions that get you ridiculed from the outside but rally the troops than to dream small.
Deepinder could be tweaking the homepage conversion of Zomato, but he keeps betting big, first with Hyperpure, then with acquiring and scaling Blinkit, and now with Paytm Insider.
You may have the best team building products, your team can optimise the funnels as much as they can, but if there is no long-term ambition, the next big bet that can change the trajectory of the company, your company will be on the path of slow decline and eventual death.

--- END POST: Founder ambition ---


--- START POST: Uber will win self-driving ---
URL: https://manassaloi.com/2024/08/11/uber-self-driving.html

It is generally agreed that most markets are demand-driven. Supply will go where there is a demand to be met.
This is not always true, as the last few years have shown.
I had a conversation with someone who mentioned that while Lyft was working on innovative features for riders, Uber’s focus in the US was on supply. In Bengaluru, a lot of the demand has shifted to Namma Yatri and Rapido, because that is where the supply is today.
With the advent of self-driving cars, the platform power shift will again be in the direction of who controls the demand. If self-driving cars are the future, and everyone has one, then most of the people would rent out their car during the times when they are not using it. And they would be renting it out to the platform that has the most demand for it.
Caveat: The demand in the city where self-driving works. Demand isn’t global. It’s local. Ridehailing has local network effect, not global like in social networks.
There is an amazing post by Kevin Kwok about underutilised assets, and how most new age on-demand startups grew by exploiting them. You have an unused room in your house. You put it on Airbnb, but someone has to look after the guest. There is manual work involved. You have a car that you don’t use much. Y can drive it in your free time as a gig worker and earn some extra income.
In both of these cases, there are two components: the unused asset (the extra room, the car) and the labour (you).
Labour is not free.
Once self-driving becomes mainstream, there will be no more drivers. No labour involved in ridehailing. Waymo has already accomplished it in SF.
Fast forward to 2030. Let’s say a lot of manufacturers have cracked self driving by then. At least for select cities. Aggressive timeline for sure. But again, let’s assume it happens.
You are a software engineer in SF. You have a self-driving car. You are going to rent out your car. Why wouldn’t you? Your are decoupled from the fixed asset you own. You don’t have to drive the car the way people do today if you want to take advantage of the on-demand ridehailing platforms.
Another aspect of ridehailing that very few people talk about: Ridehailing loyalty programmes are very hard to crack.
A loyalty programme offers either monetary or non-monetary benefits. With Singapore Airlines Krisflyer Gold, you get to stand at the front of the queue for boarding. Marriott offers free room upgrades.
In ride-hailing, you can definitely create tiers of users based on a loyalty programme. But the only non-monetary benefit you can probably give is priority. But a lot of ride-hailing apps already allow users to raise their bid by paying more (whether it’s an advanced tip or something else), and if the supply is low, then you won’t see the benefit anyway.
You can’t upgrade the user from a standard car to a premium car in the same way that airlines can upgrade you from an economy seat to a premium seat. If there is a premium seat that is not being used, then there is no additional cost to the airline. Same goes for upgrading with Marriott.
There is no under-utilised/ unused asset in ridehailing that you can give away for free or at a discount. Someone has to pay for it.
With self-driving, unused cars are going to be a lot like empty seats in business class. Or the executive room at the Marriott for that matter.
You could even give your car away at a heavily subsidised rate if it was going to sit idle anyway. Uber, who will have all these cars on hire, will have a lot more flexibility in terms of how much they can charge. Yes, it is not a free, unused asset like the unoccupied room, but if you are making X dollars on your idle car, you are probably going to be OK with that.
What this means is that the platform that owns the majority of the demand will be able to do a lot more with its loyalty programme as well as its subscription programme than it can do today.
That is why I am bullish on Uber. It owns the most demand worldwide today. And self driving will make it even more dominant.

--- END POST: Uber will win self-driving ---


--- START POST: Zepto profitability ---
URL: https://manassaloi.com/2024/08/10/zepto-profitabity.html

Here are some of the ways to think about profitability. Let’s take the example of Zepto.
Store profitability: How many stores are profitable? How long does it take for a store to break even?
User acquisition payback: What is the payback period for CAC?
Transaction level profitability: Unit economics of each order delivery.
Region profitability: As important as store profitability. Over time you want to reduce supply chain opex to make a region profitable. A region can be as small as area like Murugeshpalya or a larger region: East Bengaluru, Bengaluru, Karnataka, South Zone.
Delivery person cost recovery: How many transactions do you need each delivery person to make in a day to cover their daily salary.
Cohort profitability: Do newer cohorts of users become profitable faster than older cohorts?
User acquisition and growth channel profitability: Be it Facebook ads, Google Ads, etc. One can go as granular as they want. You can look even at campaign level. Look at CAC vs LTV for various campaigns running.
Daily profitability (with seasonality in mind): Demand will spike or decline based on the day. It might be more on weekends vs a weekday. It will be different on festival days vs a normal day. You want to look daily.
Zepto Pass: Ideally the pass program should become profitable as a standalone business.
Category margin: You need to check profitability of each category. Zepto CEO has in the past talked about groceries being highly profitable vs other categories.
Profitability at a SKU level: This is one level below category. Zepto can even subsidise some SKUs if they have a higher correlation to user retention or they can bundle other items with these SKUs to increase AOV.
Brand level profitability: Some brands will give a much lower margin. If there are a lot of null searches in the search flow, Zepto may even want to bring these brands on board to retain users.

--- END POST: Zepto profitability ---


--- START POST: Time to value ---
URL: https://manassaloi.com/2024/08/09/time-to-value.html

How can you reduce time to value? I have been thinking about this for a long time. If you read enough books, do enough things, patterns start to emerge. And one of the key levers to success that I have found in life is shortening the time it takes to deliver value to someone.
This works for selling a product as well as selling yourself.
Let me give you a couple of examples.
I was a developer trying to get into product management. Everyone asked me why I was sure I would be a good product person. I was not an MBA. I had no prior experience. So I tried to add value even before I joined a company. In the interview process itself.
So I presented a bunch of ideas to the CEO of Coupondunia (Times Internet), who eventually gave me my first product job.
A few years passed. I was on sabbatical. The job market was bad. So I did the same thing when I wanted a job at Directi. Emailed the CEO on how I think Flock can grow.
(You can find the screenshots in my blog post How I got into product management).
If you read Alex Hormozi’s book 100 Million Offers, he talks about the same idea.
Based on Hormozi’s ideas and my own experience, I created this equation that I share with friends/people I mentor who are looking for a job.
Job search success = (outcome * probability of success * evidence of work)/ (time to value * risk * effort * cost).
Outcome = What outcome can you deliver for the business?
Proof of work = What proof do you have that you can do the work?
Divided by
Time to value = How much time do you need to demonstrate your value?
Risk = What are the risks of hiring you.
Effort = There will be an effort to integrate you, if you are early, someone may need to mentor you
Cost = What will it cost the company. Cost in terms of both money and reputation.
If you think about it, it’s hardest to get hired if you’re early in your career, you don’t have domain experience, you’re a costly resource (e.g. post-MBA years of experience in PGM who wants to move to Product later in your career) and there’s not enough evidence to predict whether you’ll be successful.
This concept can also be applied elsewhere. I have written several posts  on this blog that your first month in a company is the most important. How fast you can move and show that you are a potential star will have a dramatic impact on your time at the company.
At Coupondunia, my first job, I built a whole new business vertical in 3 months.
At Gojek, I built the entire security product suite within 2.5 months of joining the transport team.
This also applies to other areas. You can literally measure time to value. Ramp has a counter. Days since they started. They present this figure before every board meeting.
A VC who invests in Ramp wants his money to compound. How can Ramp do that? By delivering value to their customers and moving fast. How does the CEO prove that the company is moving fast enough? By literally measuring progress in days.
If you are a smart person who has joined a new team in today’s environment where there is so much job uncertainty, you can do the same. Start by literally measuring your progress in terms of days.
Start your own counter. This is how you will win.

--- END POST: Time to value ---


--- START POST: Wordle ---
URL: https://manassaloi.com/2024/08/08/wordle.html

I’ve been thinking about Wordle ever since it came out: why it took off and what other games could use the same template.
Wordle is a game that
Takes less than 5 minutes.
Seems intellectual.
Has inherent virality because people sharing their score on social media.
Other people can play instantly in response and share their own score in response.
People have a reason to come back: A new challenge every day.
Has no guilt associated like other addictive games that waste your time.
Can become a ritual.
Our parents started the day with the newspaper crossword. Our generation is doing the same with these NYT games.
I have been thinking about games for a long time. Flappy Bird was another interesting one. Simple mechanics.
Thanks to Claude Sonnet, it is very easy to make these simple games. You just have to work backwards from the shareability angle. And have a strong hook.

--- END POST: Wordle ---


--- START POST: Lift buttons ---
URL: https://manassaloi.com/2024/08/07/lifts.html

The up and down buttons outside the lifts in apartments cause confusion because it is not intuitive whether you are calling the lift up or down or you want to go up or down.
The number tells you the state of the lift, where it is at the moment, while the arrows tell you which direction you want to go.
There is a disconnect.
You definitely need both arrows/buttons as you may be going up or down, especially in hotels where there are gyms/restaurants on separate floors and the system can’t work out your intention.
How would you solve this? Let’s evaluate some options.
Next to the arrows, have a little animation of a person going up or down. So that you as a user can visualise it. An animation of a person going up or down next to the buttons will give more context. It will increase the cost of operating the lift though as you will now need 2 additional lcd screens to show the animations next to the up and down buttons.
Don’t show an animation, but have a picture of a person next to the buttons. This is implicit. Hopefully the user will figure out that the buttons are related to the person’s needs, not the lift’s movement.
Have an actual description next to the buttons. “You are going down” next to the down button, “You are going up” next to the up button. But that takes up a lot of space. And most lift buttons are in a small container and there may not be room to add these long texts.
The arrows in the context of the lift’s or the user’s movement is also a problem for illiterate/semi-literate people and they may not even know English. So you might need  local language translations. More translations mean even more texts and need of more space.
So it is a trade-off between cost (high context through animation), space (high context through text), a balance of cost and space (low context but low space and low cost through the person symbol).
This post came out of a discussion with a founder friend on how to design real world systems better and he brought up the lift problem. One of his solutions was keeping the all the floor buttons outside the lift. Basically replicate the UX that you have inside the lift. I think it would increase the cost because you are replicating both the inputs inside and outside the lift. On each floor. There is also the possibility of people outside the lift tempering with it. Imagine someone pressing all the buttons for fun. Inside people won’t because of social pressure. Your fellow travellers are inside with you. And bad behavior won’t be tolerated. Not the same when you have random people outside pressing all the floor buttons for fun. If I was a 10 year I would probably do it too for the lols.

--- END POST: Lift buttons ---


--- START POST: Story points productivity ---
URL: https://manassaloi.com/2024/08/06/jira-story-points.html

As a process enjooyer, there was a time when I was obsessed with measuring productivity. If the velocity of Jira story points went up, I was happy; if it went down, our team did extreme retros. It was the worst thing I could have done.
We went from a small team that got shit done fast to a team where everyone was trying to game the system. There were always debates about how to measure the complexity of a feature.
Also do you get points for everything you do as a developer?
The developers started saying “Hey, I spent all this time doing ADR reviews, that time needs to be counted”. “What about the 3 interviews I did yesterday? If they are not contributing to points (and therefore my productivity), why should I take them?”
It was crazy how the whole dynamic of the team changed. We learnt and course corrected quickly.
You know if a team is performing or not. When they are doing their best. And giving their all. Obsessing over story points and lead times and is just going to create unnecessary politics. Just avoid it.

--- END POST: Story points productivity ---


--- START POST: S curve stacking ---
URL: https://manassaloi.com/2024/08/01/s-curve-stacking.html

S curve stacking, monetising your mature business, unlocking new channels for growth, and other thoughts.
I think figuring out what to do at each stage of the S-curve of a business and how to stack S-curves well has been the biggest strength of Zomato/Deepinder.
For example, when food delivery was booming during the covid period, instead of just relying on that business, Deepinder acquired Blinkit. He knew that there would be tailwinds in a discretionary spend business after the covid, and that he would have to find new avenues for growth.
Now that Zomato’s top line is growing thanks to Blinkit, Deepinder has started to aggressively monetise the grocery business, which is in the late stages of the S-curve.
There have been a lot of complaints about higher platform fees and fewer discounts, but my guess is that Zomato’s power users are somewhat price-insensitive at this stage. One risk would have been Swiggy using the opportunity to counterattack and steal users from Zomato, but an IPO-bound company has to worry about its bottom line too.
There was a joke in my office that these new platform fees for Zomato and Swiggy were announced together and there could be some collusion. I doubt it. There is a common understanding of where both of them are at in terms of their food business, and what is the right thing to do at this point in time. Monetisation is the right way to go, I think. New and returning users will get their WELCOME BACK vouchers anyway. They would not mind the higher platform fees.
But if you are going to plateau on food delivery and there is going to be a point where you are going to exhaust your user segment that pays a premium for grocery delivery, then what are you going to do?
This is where the exploration of new S-curves comes into play. Zomato has been working on its offline going out business for quite some time now. But with this acquisition of Paytm Movies and their ticketing business, Zomato will have unlocked their newest business that can be in the growing phase of the S curve.
To recap: Food delivery is in the mature/late stage. Blinkit is in the later stage of the growth curve. My guess is that their going offline business will unlock another growth business for them. Hyperpure is another business they have, but my focus for this post is more on their consumer side businesses.
The cash flow from their food delivery business will be used to fuel growth in Blinkit and their upcoming offline going out business.
They have just announced their new District app too. It is clear that they will focus on that over the next few quarters.
GTV and revenue can be decoupled. You can run one business at EBIDTA neutral by focusing on topline growth, while the bottomline growth driver can come from another business. For Zomato’s topline, they will have Blinkit and the new offline business while food delivery will be what gives them the bottom line growth. Zomato’s huge revenue multiple is due to the fact that they are one of the few on-demand companies in the world that is showing strong topline growth while being profitable.
Supporting more use cases mean that their Zomato Gold subscribers will be getting more value from their subscription and Zomato will see lower churn in that segment. This playbook is very similiar to Amazon Prime’s.
So what is Swiggy supposed to do? I think they should just buy Rapido. Add the GTV of 2 million daily rides that Rapido does to their topline. Topline as in GTV, not revenue. While aggressively monetising the food business post IPO. If I were Harsha, the CEO, I would also set up a very strong lobbying unit to help bring clarity on 2 wheeler ride-hailing regulation. Imagine if there were 4 lakh delivery boys (Rapido + Swiggy combined) delivering food & groceries as well as taking customers to their destination. On-demand alcohol delivery is another regulation that can be passed through lobbying. I think most tech companies have focused on product improvements as a growth driver, while real growth can come through friendly regulations as well as buying growth levers like Zomato has done.

--- END POST: S curve stacking ---


--- START POST: Namma Yatri ---
URL: https://manassaloi.com/2024/07/20/namma-yatri.html

I keep reading a lot of bad takes about Namma Yatri on Twatter.
‘Namma Yatri is a prime example of the success of ONDC.’
It has nothing to do with ONDC.
A new product that hits sustainable PMF does one of the few things:
A completely new, hard to copy product. Assuming most features are more or less the same, the key product differentiator may be how you do matching and pricing (optimised allocation and pricing vs haggling, sequential bids vs blast to multiple drivers), the ability to raise price or haggle lower than optimal pricing to allow drivers who want more trips to self-select and take more trips.
Unlock a distribution model: You can argue that ONDC is this: a new business model, but I think that for the end user or driver, they hardly know or care about ONDC. If Namma scales in the future, it would do so by reaching out to both customers and drivers using the same existing channels that Ola and Uber uses.
A new business model: A marketplace can be highly managed, light or somewhere in between. Think Zepto vs Dunzo. Dunzo just connect drivers with end users. They do not know the inventory of the shops. If you order from Magnolia. A driver would to Magnolia. They would see if the item is available. If it is, they would ask for payment and when you pay, they would deliver the item. Reliability is medium. You might not get a driver. Fill rate will not be high. The shop might not have the item in stock.  On the other hand you have Zepto with their own fleet (drivers + vehicles). Their own dark shops. They can manage and use their drivers well. They will always have high reliability and fill rate. But they will have higher opex. The more you try to “manage” a marketplace, the higher the opex. And the higher the margins you need to be sustainable. This is why people complain about the price of groceries on Zepto. Coming back to Namma. Lets talk about the industry Namma operates in. In ridehailing you can have a lightweight model too. Indriver is lightweight. They are a Russian company. They have low opex. They don’t spend a lot on demand or supply incentives. Their model is simple. Let drivers and riders haggle (negotiate a price). There is no fancy ML model to optimise pricing or allocation. Both happen organically. They blast out customer requests to available drivers. Multiple bids go back and forth between customers and drivers. And at the right price with the most optimal eta, the negotiation ends. This is good for areas where there is low supply and demand. You, as a ridehailing operator, don’t have to worry about driver utilisation. Most of your drivers are not full-time drivers. You can’t do much about demand/driver churn. But it is finally a choice. Drivers in small towns like Kanpur mostly use Indriver for long distance trips when they know that the cut for Uber and Ola will be much higher in terms of absolute amount. Drivers don’t mind waiting on Indriver. They are super selective. And since there is not a lot of carrot (driver incentives) and stick (sanctions), they can be so. Uber, on the other hand, becamse a behemoth by simpliflying the ridehailing experience. They started on the premise that haggling is not the right way. With the simple tap of a button you get the right driver at the right price. On Indriver it is upto the supply and demand to find the right match. And do the matching and price discovery. So of course their margins can be lower than Uber. There are players like Tada and Maxim in Southeast Asia who have also grown by charging lower commissions. If your take rate is say 10% versus 25%, then you have to make several trade-offs. You can’t have high opex. Your margin does not support that. You can’t have a lot of people on the ground. Your customer support and security features aren’t going to be on par with the bigger players like Uber. You’re not going to have demand-side and supply-side subsidies. So you can’t have a very efficient marketplace. Demand will be unpredictable. You won’t have a lot of levers to have a high booking completion rate as well as driver utilisation. Pickup ETA will be unpredictable. You can’t have subsidies to get more driver supply at off-peak times. But because your comission is lower, supply might switch and therefore demand might follow. These smaller players won’t be as reliable as other big players. But riders are also okay waiting longer because the fares are cheaper. The big players like Uber put a lot of effort into driver positioning. Make sure that driver utilisation is high. Else drivers will churn. They need to retain their customers too.  They keep incentivising their drivers to ensure high availability. Most customers and drivers who choose lesser-known challenger apps vs Uber are OK with the trade-offs when it comes to ETA vs. price. Also price versus customer support and security. It is a good model for a new entrant. But if the region already has dominant players who have more control over the marketplace and can spend on both demand and supply initiatives, focus on positioning and driver availability, then these players will mostly cap out at 20% market share (completed orders) but with lower commissions and hence lower revenue. If Indriver, Maxim, Tada are at one end of the spectrum when it comes to lightweight marketplaces, who is at the other end? The answer is Didi. Atleast when it comes to control over the supply side. Didi, after a lot of government regulation due to past safety issues, ended up focusing on managed fleets. They own their own fleet + partner with other fleet companies. And a significant number of orders are fulfilled by their fleet versus independent contractors. So they have high reliability, higher safety (arguably), proper SOPs around driver behaviour, as well as vehicle quality. If you draw a slider (my favourite product framework, by the way), you have Didi at one end and Indriver at the other end. Maxim and Tada are closer towards the Indriver side. Ola, Uber and other prominent ride-hailing companies are at the other end, closer to Didi. Now lets talk about another player: Bolt. Bolt has 3 models: slightly high opex and onground in their major markets, a centrally coordinated model where they run a country from a nearby one, and a third where they just open the marketplace but don’t care about booking completion rate (if they want to test the waters). Namma was closer to the smaller players on the slider until they raised their last big round. But they got to a decent scale. It is mostly because of how other players have acted in the Indian market. Uber, after Dara came in, decided to focus only on big markets where they can be number 1 or 2. As Dara himself said, Indian customers don’t pay much, but they have higher standards. And they’re a public company, so they can’t lower their commission structure. It is between 20-30% per trip. Ola? Let’s just say Ola is Ola. It is also planning to go public. So they have to focus on top line revenue. Ola payment is delayed, especially for online payments, whereas for Namma people mostly use UPI and settle instantly. And the money comes to the driver. They don’t need to wait like in Ola. Hence a lot of drivers do not accept rides unless payment is in cash. Namma had a good start like all the other challengers I mentioned above. They focused on a low, fixed commission structure. I know they say they have subscription pricing, but from what I have learnt from talking to drivers, they take a flat fee per ride. And since Ola and Uber were reluctant to lower their margins, a lot of drivers switched to Namma and Rapido. Rapido has also crossed 2 million daily rides by the way. They don’t have fancy allocation models. Their pricing is simple. People can boost their request by paying a tip. With less focus from Uber in India and Ola being Ola (see how many times I have said Ola is Ola), Namma has a chance to gain market share. Rapido has also moved to a 0 commission/subscription model. Uber is also learning by the way. Now they have classic ride-hailing, haggling, as well as a subscription model for drivers. They will try different models in different regions depending on their business goals. But Namma is a good example of classic counterpositioning. Namma started by focusing on one side of the market (drivers) and a driver-friendly business model. And eventually riders followed. I assume they don’t penalise drivers and are as focused on SLAs as Uber/Ola would be. Juspay built Namma to grow their payments business. Since Indian ride-hailing is at a very different stage, with different demographics, price sensitivity and lack of focus by the biggest players, they could even grow more than the smaller players in other markets. With Namma there is also the angle that Shopify took: powering the rebels.  Amazon (highly managed marketplace with high margins) vs. Shopify (arming the rebels with flat pricing). Uber (highly managed marketplace with high margins) vs Namma (subscription pricing). So this new funding will definitely help them grow COs, but just by operating in India with the current commission structure, will they give a VC-funded result? Only time will tell.

--- END POST: Namma Yatri ---


--- START POST: Ola Maps ---
URL: https://manassaloi.com/2024/07/06/ola-maps.html

Ola is going to save 100 Cr INR per year by moving to their in house mapping solution according to Bhavish Agarwal.
At a take rate of 30%, Ola needs  to generate a top line of ~330 CR to pay for Google Maps.
At 25%, 400 Cr.
Now these 100 Cr of savings can be used on demand side or supply side expenditure.
My guess is that they would do neither.
They are in a rough spot.
Driver unions are fighting to ban their 2 wheeler rides business.
And for cars, Ola is moving to a subscription model to avoid GST payments + stop market share loss to Rapido & Namma Yatri.
Earlier, their take was close to 30%.
If a driver was doing 10 rides at an AOV of INR 100, they would be making INR 300 per day from one driver.
Now a driver would pay a subscription fee of 30 INR/day.
From 300 INR to 30 INR. It is a big big drop.
Their  top line (take rate * rides) is decimated.
Their bottom line too.
And now they are a subscription company with far lower revenue.
Namma Yatri, a private company competitor can pivot to it. So can Rapido.
An IPO-bound company can’t.
Yes, with this new subscription fee they probably wouldn’t pay driver incentives. But even then their numbers would look worse in 2024 than in ‘23.
So, of course, they have to bring down the IT COGS.
It is not a matter of deshbhakti. It is a simple exercise in cutting costs. No matter what kind of spin Bhavish puts on it.

--- END POST: Ola Maps ---


--- START POST: Cheerleader effect ---
URL: https://manassaloi.com/2024/07/05/cheerleader-effect.html

You, a founder, want to build in the health category.
A new marketplace where people can buy vitamins. Or high protein foods.
But you think there is a bigger game here. Why not build in healthier habits. Maybe there is an opportunity for an AI agent that recommends ways to incorporate healthier eating habits, to help you eat more protein.
The first is a marketplace. You have to create a flow that requires the least number of steps for the customer to buy your product. The second is a habit-forming product with a freemium business model. You have to understand the user’s motivation. You want them to set reminders to drink their protein shake in the morning. Your product is very similar to any meditation app, any strength training app. Obviously there will be more steps in the onboarding process. You want high intent users who will convert to premium users. The effort you put into onboarding will help you tailor a better product experience for the user.
If these were separate apps built by separate founders, there wouldn’t be an issue. But most founders today try to build everything together, all at once. They fall victim to the classic cheerleader effect, where they inflate the attractiveness of each of their product use cases by bundling them all into one mega-product from day one.
This leads to a confusing onboarding flow. A confusing first user experience.
Let’s take another example. You want to build LinkedIn for designers. LinkedIn today is a social network for professionals. A social network is monetised through advertising.
If you are building a social network, you want users to start consuming and then creating content from the moment they land on your product. But you might think, hey, you also want our designers to find jobs. That means you want a job board. A job board needs information about users. So you might want users to add more information during their onboarding. You might think that once they land on the product they might not be interested in doing that. You would want to separate recruiters and designers in the onboarding flow. Have different experiences for each. How you monetise a job board might be different. Then of course there is no Hacker News for designers. So you will also bundle a forum into your product.
You might want to sell a SaaS subscription that allows users to buy a subsidised bundle of designer tools. And also give more visibility to their posts in the forum. To drive engagement, have some design quizzes? A jobs tab. A news tab. Suddenly you have a LinkedIn for designers, but there is no single product that has PMF.
The idea looks interesting on paper. But you can’t look at the monetisation models of mega-corps like LinkedIn, Facebook, Google. They may have integrated multiple products over the years. And with those products have come different ways of monetising.
Before you scale to multiple products with multiple monetisation models, you need a single product that has the simplest user flow. The best products are linear. And their product flows reflect their business model. A transactional marketplace does not need engagement on the home page. It needs to help the user create their cart as quickly as possible. A habit-forming product might have extra steps in the onboarding process. But you as the product builder need to know the path you want the user to take. You need to have a POV.
Remember: Your revenue model defines your product. And don’t fall victim to the cheerleader effect.

--- END POST: Cheerleader effect ---


--- START POST: Stop the trolling ---
URL: https://manassaloi.com/2024/07/02/salty-twitter.html

Not even a controversial one, I think. There is no upside to trolling people on Twitter. If you’re someone who trolls people for fun, most people won’t work with you. I have seen people get opportunities by being replyguys to successful people. By sharing their work. Not by posting salty replies to tweets. Not by posting hot takes. There are a lot of impressionable people here. They see their favourite accounts, including Elon, picking fights and think they should do the same. You are not Elon.
Let’s say you’re an anon account. At best, you grow your account through rage baiting. Being part of mobs. Trying to cancel people, dunking on them. Subtweeting others. Eventually, when you get outed or out yourself, people will remember your older posts.
I am no saint. I thought it was funny to turn my account into a semi-anonymous account called maval and post shit for fun for months. Yeah, the jokes were funny. I got a lot of laughs. And likes. But eventually I felt empty. While Naval was living his best life, I was just some midwit shitposting on Twatter. And of course, I must have attracted the very followers I hate. Low key haters. So I wrote The Tragedy of the Midwives to remind myself of my place. And I stopped.
Rage baiting is the way to grow your account. Being part of a mob can be fun. Tribes form easily on Twitter. You are in a group. You hate today’s main character. But there is no upside. Just the temporary feeling of feeling better about yourself.
I have been in Twatter fights. I have got into subtweeting matches. Never felt good afterwards. So yeah, take it as you will. Saw a couple of Sahil Bloom dunks today. Yes, he can be pretentious. And he might be a course seller. But he has a lovely family. Runs sub-3 marathons. And is financially independent. Even if you hate some aspects of his personality, there is no point dunking on him. Yes, it will give you likes. Nothing more. You will live your life. He will live his.
Thanks to mimesis, we all feel equal. There is no more Celebristan. Only Freshministan. It is very easy to dunk on Cred’s business model because you can be in the reply section of a Kunal Shah tweet. It is easy to dunk on Sequoa because they have invested in FTX. But while the CEO of Seq Cap is probably making 100 million and sitting with heads of state, you are probably some unemployed student with an Anon account.
I know the hypocrisy of this note considering I literally dunked on Elon for hiding likes a few days ago. But I try to keep a very low subtweet/dunk ratio for what I post on Twatter. And I hope you do the same.

--- END POST: Stop the trolling ---


--- START POST: You have no choice but to grind more ---
URL: https://manassaloi.com/2024/07/01/you-have-to-grind.html

So it was the year 2012, I think.
I was a 3rd year CS student at BITS Goa, who had skipped all the CS classes in his undergraduate degree.
This is how it all started: I had reached my class late. It was the first class of Computer Programming 1. And the professor, who was probably the best professor in BITS Goa, threw me out of the class.
I had low CGPA, but a high ego.  I think I did not attend a single class of CP1, CP2, OS as well as DSA.
I had given up on programming. I wanted to do something business related. After a mandatory CS internship after my 2nd year, I was wondering what to do in the summer of 2012, after the end of my 3rd year.
I had tried to do a startup, but I was more playing the startup game than actually doing anything with it.
Then one night changed my life.
I still remember that night. I had gone up to this guy’s room. He was sort of a friend. Someone who got straight As.
He had an 8 point CGPA. The BITS grading is on the harder side of things. So he was quite good.
I remember a discussion about our plans for the future. I am not even sure why I was discussing it with him. I was a 6 pointer. An average student who skipped all his classes and spent his nights playing FIFA. I spent more time on DC++ than textbooks. I was the last person that someone with a career in mind would want to chat with.
So this person told me that he had been sending out emails to professors for months now for his 3rd year summer internship / 4th year practice school (the 6 month internship that all BITS students have to do). I think he had contacted more than 100 professors by then.
Again, I don’t remember all the details. And there are a lot of details that you forget over time.
But I have a recollection of the take-away: I was an idiot who had skipped all his classes. I had to work much harder than someone who was already a good student and had crushed his undergraduate CS classes. If that guy was working so hard for an internship, I had to work harder.
I got very lucky. I got an internship at Redbus. It was thanks to one of the first cold emails I ever sent out. But I learned never to take anything for granted. And I promised myself not to leave anything to chance. I had no right to. Nobody owed me anything. I had to work for it.
I get so many emails / Twitter DMs from people who get discouraged after a few non replies. They stop sending out cold emails. They don’t put effort on each reach out. They start applying with the one click feature on LinkedIn. And then get upset when most companies choose the IIT + IIM + work ex over them.
Remember: Nobody owes you a job. Not getting a response to your cold email? Maybe send out a 100 more. And don’t stop till you get your shot. You will have to work a lot harder.
P.S So what happened to the guy I talked to? He eventually got an intern under a Prof who worked at CERN. And I ended up selling bus tickets in the north east. So it worked out for both of us.

--- END POST: You have no choice but to grind more ---


--- START POST: Zepto Cafe ---
URL: https://manassaloi.com/2024/06/30/zepto-cafe.html

The delivery of food is an optimisation problem that involves 3 parameters: Choice, price and delivery time.
It is almost impossible to have all 3: the largest selection of restaurants/items, the lowest price, and the fastest delivery time.
Doordash grew by targeting the suburbs that had been ignored by Uber Eats. Their key insight was that after a certain point, time to deliver doesn’t matter.
But what if delivery speed was your number one priority?
In that case, you would need to have a minimal selection of items.
Instead of offering a wide range of cuisines and menu items, you would limit yourself to those items that can be prepared quickly and shipped as quickly as any other grocery item the user might have in the shopping basket.
Mostly you limit yourself to snacks and drinks.
The Zepto Cafe, therefore, offers an interesting example of self-imposed restrictions. Both by the provider and the user.
The user does not have to decide which restaurant to order from as long as you ensure a minimum quality bar.
They don’t need to worry about the ETA for different restaurants. What other snacks they need to add to meet the minimum basket value criteria. Whether they have any coupons for that restaurant.
You just choose coffee and a chicken puff, and you know it will arrive in 15 minutes, instead of doing the usual cart building exercise.
You win by reducing the decision variables. By limiting choices.
Over time, people will just order from Zepto Cafe if they need coffee and are too lazy to make it themselves.
If they have items in their cart, they simply add a coffee and it comes with the rest.
There is no need to order separately from Instamart and Swiggy Food. And have 2 different deliveries.
This is not the first time that someone has tried to do this. If you remember, Swiggy tried Swiggy Pop a long time ago. It was a selection of 20/30 items that changed depending on the time of the day. During lunch, it would be 20 items that are most relevant to lunch and during snack time, it would be snack items. But if I remember correctly, there were also restaurant names. If you didn’t like the restaurant, had a bad experience in the past, you might not have ordered there. And the delivery time was the same as any other restaurant: ~30 mins.
Zepto Cafe is better because you win on the delivery time and the restaurant does not even come into consideration. Rather than being a winner in a particular segment: Affordable or Premium, they will win on the evening snack order use case. You don’t even need to go to the local tapri/pastry shop for light snacks if you can get your puff and coffee in 15 minutes.
For Zepto, it is an entry into the food space without being in direct competition with Swiggy. It is an extension of use cases for its users. It’s higher AOV. It is better utilisation of their fleet. It is more GMV from their dark stores. And in my view, with this Zepto Cafe working so well, Zepto has shown that they can easily do expansion beyond food.

--- END POST: Zepto Cafe ---


--- START POST: Connected, yet lonely ---
URL: https://manassaloi.com/2024/06/29/connected-lonely.html

I saw a tweet from a friend about Bangalore being full of connected, but lonely people who jump in to join any meetup/WhatsApp group that becomes available. This is my issue with meetup/conference culture. Meetup culture is all about optionality. You think you’re going to meet someone new who is cool or can help you build your network. You want to join groups with 100 more strangers.
I think it’s a better idea to build stronger connections with the few people who matter, rather than looking for optionality. It also means having to lower your ego, which I’m happy to do when it comes to my old friends. I’m always happy to ping them whenever I get the chance, and I ask for calls. I’m the one asking them to hang out. Earlier, I used to think, “Why am I making the effort?” But then I realised it’s not for them. It’s for me!
I find my mood immediately improves when I talk to a friend who I have known for 10+ years. Everyone is busy. Everyone is stressed with their job and their personal life. People are married now. Some with kids. But that is where you have to put in the work to maintain your relationships with the people who matter.
Friendship is also about vulnerability. True friendships are built on vulnerability. Being able to share your dreams, your failures and your demons. While meetup culture is all about bumping into people for 5 minutes to judge their worth and if they are worth your time, I prefer long 1-1s. Either over the phone or in person. I am happy to meet just one person over the weekend and spend hours talking about work, life or whatever is interesting to us. I am not trying to get anything from them.
Twitter is another place where you can get the illusion of having a big network. But this network is not going to help when you just had a bad day at work and want to rant to a close friend without being judged.
My advice is to form deeper connections. Let go of optionality. Yes, meet new people. But do not ignore your friends. Buying new plants is fun. But you need to water the old ones. Otherwise they die.

--- END POST: Connected, yet lonely ---


--- START POST: Figma flides ---
URL: https://manassaloi.com/2024/06/28/flides.html

Lending is a feature.
A lot of standalone lending apps died in India because eventually all the Fintech companies realised that lending (and maybe selling insurance) is the only way to monetise. So all the big fintech companies got NBFC licences/ tied up with NBFCs and started lending. No one was ever going to make money from the payments in India.
AI is also a feature.
New standalone presentation companies powered by AI never made sense. All the big consumer companies are going to sprinkle magic AI dust and leverage AI. Most of the value will be captured by them thanks to their distribution.
Figma just introduced their slides product. Flides they call it. A lot of designers were already making slides on Figma. They just turned it into a product. And whatever opex they incur, they will eventually pass on to their customers. They are also private. They don’t have the pressure of the public market to maintain their margin in the short term. They can give away slides for free for the next few years. This helps them build a range of products for their designers. Classic Figma, Figjam and now Slides. A designer can jam with their client/PM in Figjam, create designs in Figma and then present them in Slides. Their entire workflow will be within the Figma ecosystem. If designers were unhappy with the recent Figma draft changes and were considering switching, they have another reason to stay with Figma. The more products someone uses in the Figma ecosystem, the more their workflow is tied to the Figma ecosystem, the higher the retention rate. Slides might also get them to design adjacent user segments. Previously, a PM might have been fine with not having Figma, just reviewing designs on Figma, but with Figjam and now Slides, they will have a larger TAM beyond designers.

--- END POST: Figma flides ---


--- START POST: Should PMs start coding? ---
URL: https://manassaloi.com/2024/06/25/pms-learn-to-code.html

Should PMs learn to code and prototype to save their jobs in the AI age?
I don’t think so.
As a PM you should definitely know the trade-offs between different engineering approaches that can help achieve a product goal. Unless you are working on a deeply technical product.
You will add far more value by identifying existing user problems, leakage in funnels, new adjacent use cases, ways to improve the bottom line, and top line growth. Instead of trying to add value by writing code to impress your developers.
You’ll lose your job if you don’t meet your KRs. So focus on that.
I sincerely believe that a PM should understand technology. Being an ex-developer is a plus. But that’s not your job now.
A lot of PMs are bad at their job. More than that, they don’t care about the craft of building products. So it is easy for them to get confused about how to add value.
This is the same shit I keep reading about designers now having to be design engineers. Code is the highest level of fidelity blah blah. Coding is so easy. Use framer and build what you design.
Nope. Just be a fucking great designer. And figure out how to give your users a killer experience. That’s it. That is your job.

--- END POST: Should PMs start coding? ---


--- START POST: Will there be no more interfaces? ---
URL: https://manassaloi.com/2024/06/16/chat-interfaces-ai.html

I saw
this tweet by Sam Lessin
on why there won’t be app interfaces in the future.
I disagree.
Chat interfaces first became popular in 2015 and everyone started building chat workflows. Then everyone was under the impression that Alexa (and other voice interfaces) would do everyone’s job for them.
Reality: You can’t build complex workflows over chat or voice.
Take food ordering. A single use case. Not a lot of dependencies. Swiggy already has all of your data in place.
Now let’s say Swiggy doesn’t have an app. It’s a chat interface. Now walk through your typical food order journey. Think about how you went about ordering to eat yesterday. Now assume that you had to do it through voice or chat as opposed to the current app that Swiggy has. Which one is faster/easier?
Now it’s no longer a hypothetical glorious future use case. It’s something you can think of now.
Do this simple exercise if you are a designer or a PM.
Yes, you can eliminate steps in the current process. And Siri might actually help you with your frequent use cases.
Even Gojek has a one-tap feature in our product for users for whom we can predict their destination, drop-off, have wallet information. So with a single tap, you can bypass all the steps that you have to do today on Uber / Ola, which does not have that feature.
But you don’t build a ride-hailing product on the basis of one happy use case.
Even for people using one-tap, you need to figure out how this will convert compared to the standard booking flow. More importantly, how many people have added all the info so that you can create that magical one-tap experience.
As someone who has been building marketplace products for the last 6 years, I can tell you all the complexities of a car marketplace, a food marketplace, a grocery marketplace or a logistics marketplace.
But it is going to take a lot more than a Twitter thread. The key is always in the details.
Context is important. The implementation details matter.
Go back to all the thought leadership posts on chat is the new interface from a decade ago. Do the same for voice.
Realise how they missed key problems. They will still be there.
Will the new Apple Intelligence workflows be well received? Sure. Are they going to be as disruptive as people are making them out to be? Whenever people make very bold predictions about the future, I ignore them.
I still have the memory of Chamath’s screaming that Facebook is dead. Last I checked it is doing quite fine. I remember his blockchain will be the death of Visa and Mastercard comment. The last time I checked, the products and share prices of these companies are doing quite well.
Thinking from first principles. And when people say X is dead and Y is the new way, you don’t have to panic.

--- END POST: Will there be no more interfaces? ---


--- START POST: Sketch's time is now ---
URL: https://manassaloi.com/2024/06/15/sketch-figma.html

Jira sucks. Jira is a way for large companies to create unnecessary processes and jobs. Linear is the future. They even have a
manifesto
.
Relying on traditional news outlets to get your news out was the old way of PR. The new way is to go direct. There is a
manifesto on going direct
.
SAAS sucks. Why pay for the same software every year.
ONCE is better
.
Uber had left the region. Merged with the dominat player. The dominant player soon devalued their loyalty points. A great time for a new player to come with a
David versus Goliath narrative
.
Apple & Google have too much power. Why not launch a
Bharat first App Store
that is not controlled by these two.
A great way to launch a new product is through counter positioning.
Counter positioning has to educate people on why the old way of doing things sucks, and they have to follow the new way.
And a company that is relying on counterpositioning has to answer the other question:  WHY NOW? Best time to counterposition is when there is a growing negative sentiment against the incumbent/the current way of doing things.
I am suprised that Sketch has not used the narrative of Figma is becoming the new Adobe (with how they have handled drafts) and tried to be more aggressive when it comes to getting designers to move to Sketch.
Even Adobe is now battling the Adobe is stealing the work of creatives (with their new contract update). This is Sketch’s chance to shine after years of Figma stealing their lunch.
Why are we not seeing the Sketch CEO capitalising on this Narayana* given opportunity?
*Narayana is God. Narayen is also the CEO of Adobe. Yes, I am proud of myself.

--- END POST: Sketch's time is now ---


--- START POST: My writing process ---
URL: https://manassaloi.com/2024/06/03/though-dump-masterpiece.html

I really envy people who can spend days perfecting a blog post. For me, I just do a thought dump on Twatter. Takes less than 20 minutes. And then edit the content and post it here. So my output is very high, but there are very few posts that feel like a master class.
For example, I’m now thinking about doing a post on how to get better at design.
Take the price estimate screen on Uber. Why does it look like that. What are the trade-offs on that screen? I would love to share some of the design principles. And share more ideas on how you as a PM can improve your design skills. But I am not sure if I should do the same thought dump stype post and get it out quickly, or if I should do a session and walk people through how they should be thinking about this. Or maybe just invest a day in writing a super-long, in-depth piece.
At first I was going to write a super long post about
Zepto Pass
and that turned out to be a thought dump as well. I just could not sit and spend hours writing and then editing that piece.
I guess for me I would rather write more than try to come up with my version of a perfect post.

--- END POST: My writing process ---


--- START POST: How will Apple monetise their AI? ---
URL: https://manassaloi.com/2024/05/23/apple-intelligence.html

Apple’s opex, regardless of the details of the deal with OpenAI, will increase because of Apple’s intelligence (AI).
They will either have to increase the cost of their subscriptions or sell Apple devices at a higher price point in order to maintain their margin.
Revenue from services has been steadily on the rise, but how much more can they charge? If they charge more, users will also compare them to other services on offer from Google and others, and might switch.
There has been a slowdown in device sales. But people are a lot more locked in to the ecosystem of Apple.
Will people suddenly switch to the Windows ecosystem if they raise device prices by 10%? I doubt they will. And people are used to premium prices on Apple devices.
With services, I am not so sure.
Also, do Wall Street analysts care more about Apple again making more money from selling devices or their growth story around subscription revenue?
One hypothesis is that Apple Intelligence will lead to people upgrading their devices more quickly, but whether this will actually happen is something that only time will tell.

--- END POST: How will Apple monetise their AI? ---


--- START POST: How I spend my workday ---
URL: https://manassaloi.com/2024/05/22/my-day.html

How I spend my office hours:
Joining meetings (sometimes post office hours too).
Reading (interspersed with meetings).
Playing with new products, both internal and external.
Covering quarterly updates of public companies on Quartr app.
Thinking (I spend at least an hour thinking about different ideas related to the building of products).
Chatting with stakeholders and addressing their concerns.
Also tweeting. But it doesn’t take up much of my time as I vomit out whatever comes into my head.
Writing down my thoughts is also part of thinking (point 5). Thinking can be about things related to Gojek (highest priority) or about some abstract concept that I am thinking about.

--- END POST: How I spend my workday ---


--- START POST: All conversion is not created equal ---
URL: https://manassaloi.com/2024/05/20/sessions-conversion.html

Take these 3 products: Ridehailing, Food Delivery, and Groceries.
As the PM who is the owner of the product funnel, you will have an interest in MAU -> MTU. You want to know how many people enter your funnel with the intention of doing their job, and how many end up getting their job done.
But MAU -> MTU is easy to game.   If a person enters your funnel 30 times in a month but only completes once, you still have 100% conversion.
So you need to focus on conversion in a smaller duration. Let’s look at at a session level. A typical session is 15 min long.
Session conversion is a hard thing to game. Your funnel can’t have a high leakage. Giving a one time high value voucher to get the user to convert one time to meet your MAU -> MTU goal is not going to move the needle when it comes to session conversion.
And as the title of the post says: all conversions are not equal.   The strength of the user’s intent is important. Use case is important. Product type matters.
An office commuter looking to book your ride will have high intent. They don’t have many alternatives.
While intent for someone ordering snacks in the evening might not be as high.
The alternative is to just prepare Maggi at home.  At the weekend, however, the same ridehailing user’s intensity of intent changes. Instead of the office, it could be a trip to the shopping centre. They might check the price. They might see a high surge, get off and try again later. If the distance is greater, they might even want to check prices on multiple ride-hailing apps.
If it’s the weekend and rush hour, driver supply could be affected. They may drop off on the fare estimation screen when they see the price and ETA. There may also be no voucher (demand-side subsidy) if supply is low and demand is high.
Take the example of food delivery.
It is evening. Your user would like to order tea. But only tea might not raise the AOV above the minimum point below which free delivery does not kick in. So the user does a search for snacks to order. Spends some time on the restaurant’s page. Perhaps they can’t find what they are looking for. They might go over to their flat mates and ask them if they would like to order something. They might minimise the app. Get on Twitter. Their session might end.
Now there are 3 possibilities:
They come back and order.
They might delete the food item, find another restaurant that serves both the snack they want and tea, and place their order.
They don’t open the app again that day, open it the next day, and place the order for the items in their cart.
Session conversion is 50% in all these cases. It took 2 sessions for the user to get their job done. Conversion happened on the 2nd attempt.
The Home -> Restaurant -> Checkout -> Order -> Delivered funnel is messed up because different events are triggered for all 3 cases. Home doesn’t even fire for the 2nd session in the first case. So if you look at the funnel conversion as the absolute truth as a PM, you’re not going to uncover these nuances.
If the user orders at the end of the day, you are still helping the user to complete their JTBD. But it took them 40 minutes to complete instead of 15. Do you consider that you’ve failed as a PM? Or you say that for the JTBD of ordering evening snacks, your product was successful, so a further obsession with the session won’t lead to a better result, at least in the first case. What about the second case? If someone is back and they have items in their shopping cart, but they are still on the fence, maybe you can do some recommendations for other restaurants? Maybe.
For groceries, the person adds items, comes to the checkout and notices that the delivery charge as a % of the basket AOV is very high and drops off. The next day they come back, add more items and finally order. They have completed their task of ordering groceries. But it took 2 sessions, 2 days. The JTBD has been completed. Is this a failure?
It is raining in the evening. The user is trying to get home from the office. They order a cab. It is cancelled three times. On the 4th attempt they get their ride. The booking to job completion rate is 25 per cent. Your CEO is in a panic, because normally in Bengaluru this metric would be 60% on a non rainy day. You are asked to head a task force for the improvement of this metric.   Now there are 2 things in a 2-sided marketplace:
Demand shaping.
Supply shaping.
You can shape demand by giving vouchers. Or through a change in user behaviour patterns. Maybe you send a notification to the user that there will be rain soon and they should book their ride. Perhaps to reflect the lower supply you have during rainy periods, you add a rain platform fee to discourage demand.   You can manage the supply by
Geting new supply in (difficult).
Supply positioning (moving supply to high demand areas by nudging supply).
Offering one-off flash incentives to supply.
Collecting the rain fee and passing this fee on to supply to incentivise them.
Implement more aggressive surge pricing (again, to increase the chances of supply getting picked up).
You can do all this. But what if you looked at the data and realised: most users stick to the platform and keep trying until they get a ride. They get a ride by the 3rd or 4th time anyway. And the cost of new supply and more supply initiatives is far too high to justify trying to improve the Booking to Job completion rate.   A data-driven PM, hell-bent on hitting their metrics, might use all the tools at their disposal, including more budget, to solve this problem. During ZIRP, this was the standard approach. And you had to do it. You have to justify why this metric, that is your responsibility, is down.
A good PM is going to do more than that. They are going to look at how many orders are actually lost when it rains. How many people are actually going to drop out and never come back. What if you find you lose only 5% of the orders because even if conversion is low people just order a couple of times more and end up getting their ride. And the cost of saving that 5% of the orders is far higher than the GT that you are going to make from those orders.
What I am getting at is that the conversion rate is a guard rail metric. It is a lagging indicator of the value that your product is delivering to customers. And not all sessions are the same. And you need to dig a little deeper.

--- END POST: All conversion is not created equal ---


--- START POST: Truth seeking or confirmation bias? ---
URL: https://manassaloi.com/2024/05/19/truth-bigcos.html

People think that individuals, especially leaders, from large corporations struggle in early-stage startups because they are lazy or because they are used to the “rest and vest” culture of large corporations. However, it’s the difference in reward systems that is the real reason why success at big companies doesn’t transfer to startups.
In late-stage companies, validating C-suite bias under the guise of truth-seeking is often the key to career success. In contrast, for early-stage startups, especially in the post-ZIRP era, truth-seeking means uncovering customer insights that truly move the needle. This requires a deep understanding of what it is that customers really want. Instead of a solution by committee that fits the agenda of the various stakeholders, you are concerned with the truth. Customers first, not stakeholders.
Big companies leaders talk about MVP, the minimum viable product that solves a customer need, but what they really deliver is a compromise that upsets the fewest stakeholders. And that mentality is hard to get rid of.

--- END POST: Truth seeking or confirmation bias? ---


--- START POST: Learning design ---
URL: https://manassaloi.com/2024/05/18/learning-design.html

I had done a few design courses at college and later online. Most of what I’ve learned comes from the 2 years I spent at Directi.
Every interaction design decision needed to get justified. Even small product decisions were debated.
I remember arguing with a designer about the optimal number of participants to get feedback from before the insights started to repeat themselves. Watched the CEO argue with another designer about whether the icon for menu expansion should be → or ↓.
I was forced to learn Sketch by my manager Madhur. He was not happy with Balsimiq mockups.
It is funny that I learned Sketch not through the design of features, but through creation of memes.
By the end of my 2 years, I had probably read most of the posts on Nielsen Norman Group’s blog. (It’s great, by the way).
My advice is to have a period of time where you are obsessed with one aspect of product management: be it design, engineering, data or strategy. You will come out of it a much better product manager than if you try to learn it all at once.

--- END POST: Learning design ---


--- START POST: Gamification ---
URL: https://manassaloi.com/2024/05/17/gamification.html

Every app has gamification now. Flipkart. Paytm. Swiggy. Zomato.
You can find it in the header of the Cred app. Cred has a LOT of gamification.
A good gamification feature serves the needs of both the user as well as the business.
Take Cred’s hidden cashback as example. It benefits the user by helping them unlock a hidden coupon. It gives them a variable reward, the sweet dopamine high. But it also gives Cred the ability to gain access to the camera. So in the future, when users want to use UPI, Cred will have already removed one friction point (getting camera permission), thereby increasing the success of the first UPI transaction.
If you’re building gamification for the Uber app, let’s say a spin the wheel, you would look at engagement with the gamification feature as the primary metric. Why ship a feature if it doesn’t get engagement.
But what business goals would gamification be serving?
For a first-time user, there is a strong incentive to take a second ride if they spin the wheel and unlock a voucher. The more rides they take, the more likely they become to stick with the platform.
Cross-sell between car services in the same price range: Someone is only using Uber’s base car service. To get the user used to a service with a slightly higher price point, Uber can unlock a voucher for their first semi premium car service.
Up-sell: Once someone is comfortable with car services and is price insensitive (let’s say they are on the high end of the price spectrum, they have paid 2X fare several times), then Uber can give them a voucher for their  premium service, that is priced far higher than the base car service.
Cross-sell between the different business units of Uber: Uber can give them a voucher for Uber package. Get them to place their first order for their logistics service.
Automatic application of coupon with price cut does not feel earned. You go to Myntra and see price cuts on their products. The user automatically assume that Myntra must have jacked up the price and shown some discounted price that is not real. For the user, there is no satisfaction. Compare that with the manual application of a Rs 500 coupon at the checkout. The user feel rewarded. There will be a shower of confetti. They see the new price. Automatic application has 100% usage. Higher spend for the business. Less sense of satisfaction for the user. Manual voucher application is better than auto apply this way. You don’t have 100% usage of the vouchers distributed like with auto apply. The user also feels that they have earned it. But the voucher is still only relevant for that transaction. While spinning a wheel / playing a raffle / any other gamification tool and unlocking a voucher for the future ensures a higher probability of the next transaction with user better satisfaction.

--- END POST: Gamification ---


--- START POST: PM'ing in a post ZIRP world ---
URL: https://manassaloi.com/2024/05/16/pm-post-zirp.html

You work for a food delivery company. Your CEO says let’s try an on-time guarantee product.
Earlier:
Yeah, do whatever.
Another feature added to your long list of features backlog.
Get devs to build. Not hard considering every team is overstaffed.
Ship it.
Mention it in your performance review.
Get some applause.
Nobody remembers after a year.
Feature gets shut down.
Now:
(There will be questions, lots of it.)
Are we trying to win the reliability narrative with this feature?
Is it our attempt to win the faster delivery narrative?
Will it be a separate service with a higher price tag? And thus secure a higher margin? Is it going to be an add-on, like the insurance products in the ride-hailing business?
Is it going to toggle the checkout process? When are we going to show the toggle?
Are we going to give it to every customer?
Are we choosing carefully?
Do we select by running some kind of ML model that predicts, on the basis of historical data, which deliveries we can promise will be on time? But running an ML model every time we show checkout is hugely expensive?
Do we do a deterministic “if else” thing, which is less costly, may be less accurate, but will save us the cost?
What if we don’t do the delivery on time? Then they get a voucher? Means there is the risk angle? How do we predict the risk?
Are we shipping this to verify whether customers are willing to pay more for on time delivery?
Why not just show the toggle and when they turn it on, say it’s coming soon? Nope, company is too big for such cheap experiments.
- How much are we willing to spend for the validation of our hypothesis?
- Okay, so we do a model of the whole thing?
If this is successful: Will it become part of the subscription product?
Will the cost of the on-time guarantee be included in the subscription? Or do we add it to the subscription product and charge more for it?
If our deliveries are on time 80% of the time anyway, then maybe it makes sense to give it away for free in order to win the narrative of being faster and more reliable than our competitor? Will people switching to us and the increase in MTUs be worth the cost of the on-time/voucher?
Once modelling is done, have to present to risk team. Have to do a presentation to the regional ops team. Need to show our CFO. He is very aggressive in terms of cost reduction. Let’s see if he is sold on it.

--- END POST: PM'ing in a post ZIRP world ---


--- START POST: I have been thinking ---
URL: https://manassaloi.com/2024/05/15/thinking-lately.html

Mid April: I was down 3.2L INR (net) in Poker. I was up 40K mid January. So 3.6L down from peak. In 3 months.
Now I am up ~5.2L in 1 month. Positive 3L for the year. Have I become a dramatically better poker player in a month’s time? How much of my fall was due to luck / variance? How much of my bounce comes from skill?
I have done the same job for the last few years. In my head, at least. I was HOP, now I have the fancy title of VP. Have I really learnt anything new in the last year and contributed dramatically more, or was I rewarded for staying put, for being in the right place at the right time?
How do we know if we are really good at what we do? How do we not mistake luck for skill? How do we know if we are making better decisions than we did before?
The hedonic treadmill is real. The joy of a pay rise lasts for a maximum of 3 days. After that you have the feeling that you should have got more. The previous year’s ambition turns into today’s standard.
I was talking to a friend who works in a tier 1 global startup. He told me that being a public company VP is a good achievement, but my financial outcome has been the same as a first time PM who joined FANG a few years ago.
Am I playing at the highest level? Should I be satisfied? Or should I strive for more?
I was hanging out with another friend. He told me that he became much more humble in life when he found out that his brother-in-law makes 2/3 million a year because he has found some offline arbitrage opportunity, whereas this amount is the best possible outcome for my friend as an early hire at his startup.
I have played poker with amazing players in the last few years, including someone who was #1 in online tournament poker in India. But winning no longer makes me happy. Even if I go on a heater and win a few lakhs, it does not change my net worth. When I lose, I feel like shit though. I ask if I really belong here. Who likes to lose anyway? I used to crush everyone in Fifa. Then I deleted Fifa because I had 3 consecutive losing sessions. Just 3. It is all that took.
Poker is a crazy zero-sum endeavour. It is just a bunch of friends sitting down with each other to take each other’s money. If you asked someone if they would give you 70K (monthly rent of a 3bhk), they would of course say no. But they would 4bet jam with 27o just for the meme. Seeing people make such sub-optimal decisions is crazy.
The early hires want to be founders. The VC backed founder wants to be a bootstrapper. Burnt out exec wants a sabbatical. The world wants the PM to become a ‘craftsman’.
There is no end to it, but everyone is in pursuit of some end point where they will have the feeling that they have done it.
Update: I lost 3L in 3 sessions. So I have given up all the gains for this year.

--- END POST: I have been thinking ---


--- START POST: Does Cred have any value? ---
URL: https://manassaloi.com/2024/05/14/cred-exists.html

I saw a tweet today questioning whether Cred, a credit card reminder app, deserves to be a $6.4 billion idea. And what value Cred offers that existing banks don’t.
Valuing a private company is hard. So let’s ignore that.
Let’s discuss why Cred has managed to attract world-class investors and a lot of capital from them.
A lot of Indians are asset rich and cash poor. It takes a long time to build a good credit score and even that may not be a true reflection of whether someone can repay a loan. There is also social stigma associated with borrowing.
I remember when I was in my first job, my manager was going through the process of securing a loan. The bank officer was supposed to come to our office for verification. It was a small start-up where we worked. And the loan amount was big. Think it was a home loan. Imagine the anxiety of my manager. It is an arduous process that nobody likes to go through. And you might be turned down. Even more humiliating.
I remember a friend telling me that his father who has a cash flow of more than 1 Cr INR yearly through his business, has his account with HDFC, but had issues securing a loan from HDFC. Most banks are risk averse and over-index on saving themselves from NPAs.
Okay, now you can say that a lot of people take home loans now. It has become acceptable.
But what about personal loans? Do you want to go through the whole process of borrowing from a bank, knowing that people might get to know during the process, and realise that you are short of cash? Most people would rather pay a little more interest than go through the long and complex process of securing a loan from a big bank.
What about borrowing from a relative? You know the word will get out. Your relatives will gossip that you are not as successful as you seem and need to borrow. It is a last option for many.
Cred has simplified the process of taking a loan. One click and that’s it: you have your loan. Cred has all your data. They know your credit card statements. They are prepared to take more risk. They have to. They are unlikely to send someone to your workplace to verify your employment.
You are borrowing from Cred, not some random relative who will bombard you with repayment requests. No one will know that you faced cash flow problems. And many people do have that: cash flow issues, especially towards the end of the month.
We are a status-driven society, as Kunal says, and people spend a lot of money into maintaining their status. Credit helps.
And that is why they have managed to grow their loan book to 10K Cr INR (data from last year). Probably one of the fastest private companies to do that in India.
Finally, I know that a lot of regulation in P2P is on the way. Fintech is not that hot anymore. Revenue multiples have come down. And some of Cred’s bets, apart from the lending business, have not worked out so well. But no one can say that Cred is not adding value. And is not a real business.

--- END POST: Does Cred have any value? ---


--- START POST: GPT-5 ---
URL: https://manassaloi.com/2024/05/13/openai-gpt5.html

GPT-5 is important, but so is OpenAI creating high switching costs for existing users. For a lot of people, the interactions they have with LLMs are transactional. They have a question to ask. They ask chatgpt or claude or an equivalent product. And as the models improve, there is less and less differentiation between them. And it doesn’t take long for other players to catch up to whatever new model OpenAI comes out with in terms of performing better.
I have seen so many people switching from one LLM to another. Yesterday it was GPT-4, today Claude.
So what do you do to increase the cost of switching?
Start with history retention. Customised instructions. AI waifu that understands you. Keeps all your chat history and you build a relationship with. Custom GPTs through the GPT store. All of these are ways for you to stay in the ecosystem of OpenAI.

--- END POST: GPT-5 ---


--- START POST: Blinkit's growth on top of Zomato ---
URL: https://manassaloi.com/2024/05/11/blinkit-expansion.html

I have been thinking about how much of blinkit’s expansion planning can be done with the help of Zomato data.
We know that Deepinder wants each dark store to be profitable. I remember reading that 1000 orders/day is a success metric for each dark store’s UE.
Now, the expansion plan for the dark stores can be determined by the existing locations of the Swiggy and Zepto dark stores as well as the existing Blinkit dark store data (where there is excess demand and another dark store in the vicinity will help serve the customers even better).
But they can also use Zomato’s existing food order data to figure out user density, where premium customers are (based on order frequency and AOV). They can literally design stores based on such data. Have Mokobara bags and PS5s only in dark stores that are located in areas with premium users. They also know when people order Zomato food delivery and when they don’t. So They can send customised notifications to customers using Zomato order data. Someone who orders a pizza on Zomato might be interested in getting a cola delivery from Blinkit. So can trigger notifications accordingly. They can even price items based on the density of premium or low-cost orders.

--- END POST: Blinkit's growth on top of Zomato ---


--- START POST: Does Uber need PMs ---
URL: https://manassaloi.com/2024/05/10/uber-pms.html

I was talking to a friend yesterday. He does not come from a technical background.
He asked me an interesting question when I was talking about what PMs do: What does somebody who work on a mature product like Uber do? Isn’t everything already in place? Why does Uber still have so many people working for it? Here is an example that I gave him.
Take the simple ‘recommended for you’ section on Uber’s price estimate screen.
Most people would ignore it.
Except the PM whose job is to convert people on this price estimate screen.
Now, for you, you probably think that these options are random.
But there are 4 service recommendations for you to play with on this screen. You need to make sure they’re
Relevant to the user- Meet the needs of Uber as a business
So, what would you look at?
The user’s choice on the home page.
History
Recently used.
Frequently used.
Supply availability.
Weather conditions.
Traffic.
User persona (price conscious, normal, premium).
User maturity (new, early, mature, power user, resurrected, soft churned) A new user may prefer the cheapest trip. Same with a resurrected user.
Time of day.
Distance of the trip.
Destination location.
Pick up location.
Any treatment group the user belongs to for an experiment some Uber PM is running.
Price sensitivity, maybe the user has been okay paying 2X surge price for a car ride for the last few trips, and is used to paying Premium pricing, and now is the time to recommend premium car.
Competition: Competition is promoting an economy type of service and taking market share, and you have to counter by pushing economy to increase your completion orders. Maybe Uber Moto is the way.
Business needs: Maybe GTV is a priority and even if the user has been using Auto, you want to nudge Car. Or it is the contribution margin that is a priority and you want to nudge the service with the better contribution margin.
Marketing campaign you are running. Maybe it’s a new user joining Uber who saw an Auto ad and installed Uber, and now you need to select Auto as the first option on the estimate screen.
You might want to give weight to these different factors that decides what options to show on the estimate screen and their ranking. You might want to run an ML model to make a recommendation. The recommendation will be improved based on a feedback loop.
You might even create a config portal to do the above. Provide the Portal to Region Ops, so that devs don’t have to do a deployment when they have a new request.
There are a lot of things to think about. A simple 1% conversion bump on estimate screen probably add 10s/ 100s of millions of revenue. So yes, you do need people to work on Uber still. They will have teams that just work on improving the GPS accuracy. Small improvements at Uber’s scale is meaningful and justifies the cost of entire teams. So here you have it. You know why so many people still work on the Uber product.
(Disclaimer: I don’t work at Uber, and this is purely guesswork on my part, but I do know a bit about this space.)

--- END POST: Does Uber need PMs ---


--- START POST: Airbnb Icons ---
URL: https://manassaloi.com/2024/05/02/airbnb-icons.html

Zomato launching Intercity legends [now shut].
Unacademy launching Icons where you can learn how to bat from Sachin Tendulkar.  And now Airbnb with their Icons category of experiences.
What is common in all of this?
High profile launches help
drive curiosity
get people excited
the short PR buzz drives demand
challenge the team to move beyond their comfort zone
drive more innovation;  the ability to move beyond the core leads to more interesting products in the future
For Airbnb, Icons is a way to test out if they are actually provide a 11 star experience to their users. Not every item in the Icons category is a Stay. And it can’t be called an Experience because it is kinda a hybrid product. It does not fit in their existing experiences category. 
Launching high-profile products also challenges the team to keep innovating and improving, which can lead to better overall service quality and new ideas. Think about how much Zomato would have had to think about their supply chain to allow delivery from a restaurant in Kolkata to a foodie in Bengaluru.
These Icons experiences will create a lot of user generated content, creating a fly wheel effect. Someone stays in SRK’s house in Bandra. Posts a tweet on social media viewed by millions of users. More people go on Airbnb to see the details and cost of the experience. Airbnb stays top of mind for users even if not everyone can afford an Iconic experience of staying in SRK’s house in Bandra. All these UGC will stay forever and keep attracting users to the platform.
While Icons might not significantly impact the company’s  P&L immediately due to their niche and premium nature, they would definitely offer higher AOV, attract more premium customers, and improve the perceived value of their platform. Icons help position Airbnb beyond a Stays product. If you read their quarterly update they combine numbers for nights/stays and experiences. I am assuming they are still highly reliant on Stays. Icons give them an opportunity to expand beyond their core products. If you read their last quarterly update they mentioned it as one of their focus for 2024. I think this is one in a series of products to come this year that will help position Airbnb beyond Stays.

--- END POST: Airbnb Icons ---


--- START POST: The world is not conspiring against you ---
URL: https://manassaloi.com/2024/05/01/world-conspiring.html

Random late night thoughts on career.
Some people have a belief that the world is against them and that XYZ external factors are blocking their growth path. The reality is that many of these people aren’t even doing the bare minimum at work. They lack the work ethic and energy to succeed.
You can blame external factors, your manager, optics, the market conditions, the politics for your lack of growth, but first you have to give your 100%. Most people don’t.
LinkedIn bios are a joke to me. I have worked with so many people who are absolutely terrible and have been pushed out of their jobs, but if you look at their Linkedin you would think they were a star performer.  If you are a hiring manager, do multiple background checks.
Before, I took feedback on companies and hiring managers from everybody. Of course, if you know someone you would ask them about the leadership of their company.
Then I realised I have worked with people who were absolutely stealing a living. Even they have friends. I wonder what their reflection regarding their stint was like. What was their opinion of their manager or their company? So now the only feedback that I take seriously is from people that I know and trust to be good at what they do.
Post covid appraisals have been pretty bad. Companies have been trying to control costs. They have tried a mix of redundancies, pay cuts and small pay increases. I think the right thing to do is to make big cuts and reward the people who are still there and are actually making a contribution.
I had a conversation with a founder friend of mine who confessed that most of the people who are on the product side of his company are essentially doing the job of a PgM. This is true. Most Product Managers don’t have the experience or insight to make product decisions. And they work as program managers.
Many of them are never going to get paid what they got paid during ZIRP.
You need to be honest with yourself about the value that you are delivering to your organisation. What your replacement cost is. Many people provide -ve value. They are shit at their jobs and they bring the energy level down. They have a replacement cost of 0.
A lot of people seem to be entitled. ZIRP is over. Nobody is going to pay them 50LPA again. But because they are used to doing the bare minimum and getting big rises, they are upset about small rises, lack of promo every 2 years. They have not got the memo as yet.
You either bring the energy of the room up or you bring it down. Even if you are not that great at what you do, by showing up on a consistent basis and bringing a high level of energy, you will be a valuable asset. Abilities anyone can learn if they want to.
Energy and attitude can’t be forced down your throat.
AI will take a lot of jobs, but not people who give a shit about their craft.
A lot of experienced senior PM’s are going to be replaced by people who are as hungry.
Entitled people who have only been able to keep their jobs because of ZIRP and the number of PM vacancies will find it hard to justify their salaries.
Career spans decades. Some people have been lucky. There are people who are in positions that they don’t deserve.
But in my 11 years in technology, I have not seen people, who have the energy and willingness to learn, fail. Eventually they get their due.

--- END POST: The world is not conspiring against you ---


--- START POST: Lifestyle inflation ---
URL: https://manassaloi.com/2024/04/01/lifestyle-inflation.html

Thoughts on lifestyle inflation:
It is real. There is no shame in acknowledging it. At one point in my life I thought 1CR was enough. At 6% FD rate I would get 50K per month. My rent was 12/13K at that time. I thought: How can I spend more than 50,000 a month? It was impossible to do. I had one room in a 2 BHK flat. I didn’t eat out that much. I hadn’t really got into the Apple ecosystem. And yes, I did not understand the concept of inflation at all.
I could have easily afforded a much better house. But I always preferred to live well below my means. And maintain a lifestyle that was recession-proof.
My rent is now ~47K a month. That is 3/4 of what it was 5 years ago. Rent in Bangalore has also gone up significantly. But it is still a lot less than what most of my friends are paying as rent in Bangalore. I also live in Murugeshpalya. I do not live in the Defence Colony in Indiranagar. Can I afford to pay more? Sure. There’s no need to do that. I have always been happy to live a life of low (er) status. At least in comparison to my peers/friends.
I do not own a house. I don’t have a car of my own. I can probably afford to have both of them. Don’t want to. Tech bro salaries are a good way to boost your savings. But if you inflate your lifestyle too much and increase your recurring expenses too much, you become a slave to that high-paying job.
I am happy to spend more on one-off expenses: holidays, purchases of things that give me short-term pleasure, but I am also happy to downgrade if I ever have to live on a lower budget. I am happy to spend more on a hotel room from time to time, while I am perfectly happy to stay in a cheap hostel if I have to. I get the same amount of pleasure from both. And I don’t even have an Instagram account. So who knows where I’ve been on my holiday?
My only worry: getting into debt, maybe finally getting sucked into buying a flat in Bengaluru, and EMI tying me to a high paying job. Recurring expenses worry me. And that I will not have the ability to get rid of them. One-off fixed expenses are fine. When it comes to reducing my cost of living, I can go back to my wired One Plus headphones and ditch my AirPods.
Do experiences matter more than things? Who knows. I had a great time in Bali when I was there in February. Three years from now, I probably won’t even remember it. But it was a lot of fun while I was there. I use my PS5 weekly. And I listen to podcasts on my AirPods on a daily basis. I spent a lot on my squat rack, but also bought used weights from Kengeri. I went there by taking the metro. I picked up all the weights. Came back in the same Porter truck that I used to load my weights in. But I also gamble a lot. I was down 3.2L this year, before I recovered all of it. Now I am decently up. I’m not consistent when it comes to how I like to spend. I do what I like. So should you. You decide. Don’t change everything about the way you live your life based on what you read on Twitter. Most people there are as confused as you or I. They just have a lot of strong opinions and shout a lot. Find what makes you happy. Spend on those things. It is your money. But yes, try saving some. The markets are very unpredictable. To ride out downturns, you should have a decent nest egg.

--- END POST: Lifestyle inflation ---


--- START POST: Zepto Pass ---
URL: https://manassaloi.com/2024/03/26/zepto-pass.html

People seem very interested in the fact that Zepto sold 4 million passes. While others are contesting the claim and asking what % of passes were sold for 1 Rs. I don’t care about either.  What I am more interested in is:
Is the pass a loyalty tool or a demand creation tool? A loyalty tool will ensure long term user retention at a short term hit to unit economics, whereas a demand shaping tool will ensure that they generate X additional orders through that demand budget spend. Of course, there are also second-order effects. For example, Zepto gets free marketing because users talk about passes.
A lot of people get confused between the two. Take Amazon Prime for example. People were freaking out about the money Amazon was burning when they started. But look at them now—Prime was a game-changer. Prime helped Amazon cross the invisible asymptote (see Eugene Wei’s amazing post on this), helped them build their infrastructure that lowered costs in the long run, and helped them think long term about how to increase the value they provide to Prime users. Streaming video, music and other things came along eventually. My recollection is that 70% of US households have Prime. It has helped them to create the infrastructure to reduce the delivery time by X per cent for Y per cent of orders. And over time, you can always increase the price of the subscription. Swiggy has done that in India.
If it is a demand shaping tool, then you also care about CPIGT (cost per incremental gross take) and CPIT (cost per incremental transaction) as part of the demand budget to generate X incremental orders. Then it is in competition with other demand shaping tools like manual coupons, auto discounts, cash backs and others.
Over a period of time: Are you subsidising the right customers? For example, are you providing Pass to customers who have LTV > CAC, subsidising transactions with high AOV that makes the transaction UE +ve, or are you subsidising the wrong customers who will never become profitable customers for your platform and you will continue to bleed each order they place on your platform.
Look at the retention of those using the Pass.
Is it incremental? Say a user would place X orders without a pass versus Y orders with a pass?
Does Pass drive enough order density for nearby dark shops to structurally reduct opex for each dark shop? You need X orders per day for each dark store to be sustainable, so do you also subsidise Passes to users based on location?
If you look at the pass as a stand alone product, like the way it is being talked about on Twatter, what is the P&L of that product?
I would look at the transaction level, the user level, the dark store level (geo) and also the Pass as a product with its own P&L.
Can the utilisation of the Zepto delivery boys and the incentives they get be better utilised with each incremental Pass orders, so that the economics make sense at a quantum level?
The value proposition of the Pass will also be tailored in a consistent manner: What AOV ensures free delivery for pass users, how much of a discount do pass users get, do passes ensure the benefit of the 3rd part (read the podcast from Acquired Costco).
If market share is the name of the game and you have to subsidise pass users for the next few months, will the incremental market share make it worthwhile and help you raise your next mega round or get acquired by Swiggy or Zomato?

--- END POST: Zepto Pass ---


--- START POST: Remembering what I read ---
URL: https://manassaloi.com/2024/03/25/remembering-what-read.html

Happy Potter was an important part of my childhood. I even have a Harry Potter tattoo. I must have read the series multiple times. I don’t remember 90% of it. Except the plots for each book.
I just remember the joy I got out of reading the books. And how excited I used to be, eagerly waiting for the release of each new book.
For me the activity of reading is similiar to any other content consumption activity.
Do you remember every Instagram reel you watched yesterday or the Netflix show you watched a year back? Probably not. But they probably made you happy.
I have read a lot of books. I do have a lot of takeaways, a lot of them published in the book summaries section of this blog. So I do try to retain what I read. Atleast some of it.
But for me it is just the joy of opening a new book and losing myself in it that matters most to me. Not trying to remember every page I read. And I think you should also read because it is fun. Even if you won’t remember most of it a few years later.

--- END POST: Remembering what I read ---


--- START POST: Dara is a GOAT ---
URL: https://manassaloi.com/2024/03/24/dara-uber.html

Random thoughts:
Dara is so underrated as a strategist. Yes, Uber’s execution was stellar, but he also made a lot of decisions that seemed bad for Uber’s valuation (which is what public investors care about most) because it didn’t align with the long term narrative of growing TAM: he got out of countries where Uber couldn’t be top 2, example selling uber eats to zomato, divestitures to cut costs: look at the number of subsidiaries they sold, got out of the autonomous car race (Apple took years to make the same decision), and focused on the core without distractions.
If brand strength is measured by how well it’s known, how well it’s penetrated organically, and if it stands for something, what other strong brands have emerged in the last 5 years besides Duolingo? Unacademy and Cred have spent a lot of money trying to build their brands, but have they been successful?
How does a product help different users with their journey? Many home screens are quite static. A new user on Swiggy/ Phonepe is unlikely to try all the products. So how do you guide the user through their first transaction? At this stage of the journey, education is important. New users should have an understanding of how to use the product, as well as when to use it. Whereas for mature users you want to reduce the number of steps in their journey. More power-user features. Less training. More upselling and selling bundles/subscriptions that increase the frequency of transactions. This moves users from the middle of the bell curve to power users. But the home of most of the multi-product apps look the same. They don’t evolve as the user moves through the user funnel.
I was listening to the my first million podcast where they mentioned that users even in developed countries don’t care about productivity as much as they care about making more revenue. So the framing needs to change from saving time to selling/making more. Maybe this is why productivity apps fail.

--- END POST: Dara is a GOAT ---


--- START POST: Are you any good? ---
URL: https://manassaloi.com/2024/03/23/measure-pm-skills.html

We all think we are good. Especially in an area such as product, it is even more difficult to measure it.
People feel that it’s the macro environment, the manager, the office politics, whatever it is, that’s holding them back from growing.
Forget internal. Here is an external measurement I use:
How many smart people I know are going to ask me to join them as a co-founder / brainstorm their idea with me when they start their business.
If I do start a company and the idea is a good one, how many of my talented friends will decide to join me.
How many people jam with me just for fun?
How many people seek me out as a mentor, keep me informed of their progress, stay in touch with me simply because they enjoy my company and value my advice.
You can come up with your own set of criteria. Just don’t be delusional and overestimate your abilities. Don’t blame others for your lack of success.

--- END POST: Are you any good? ---


--- START POST: Hot takes on Twitter ---
URL: https://manassaloi.com/2024/03/22/hot-take-twitter.html

Every day I feel inclined to add my 2c when I see the hot topic of the day on Twitter. Then I remember that I don’t want to be one of the main characters there, so I just go and delete it.
There are so many emotionally driven bad takes here that I want to cry. That day I tweeted about how Zomato is staying relevant and so many people QT’ed me to dunk on me and tell me they never order from Zomato and Zomato is not relevant.
Blinkit has become one of the leaders in fast commerce, literally from the brink of shutting down. Zomato has gone from being a leader mainly in the north to rapidly gaining market share in Swiggy’s home turf of Bengaluru. And its share price is at a record high. And you can have a guess at their PAT for this year. Most of that is public, you know, disclosed. But people are using their one and only data point to make strong statements. Everything is emotion and outrage led. Dunking on each other. Just optimising for likes. There is no critical thinking.
For example, take Swiggy’s insurance for gig workers. For a company that is trying to go public, any increase in opex is either going to eat into their margin, or they are going to have to pass it on to the end customer. Most customers like to post screenshots of delivery firms stacking fees on top of each other in order to dunk them on Twitter. Or they have a rant about how the whole industry is VC subsidised.
Then there is the thorny issue of the full-time employee vs. the gig worker.
All companies are mandated by the government to insure their employees. Nothing said about covering Gig Workers. So if a company is providing insurance, they are doing it as an extra incentive for their gig workers.
How do you decide who you’re going to cover? Does someone qualify for permanent health insurance if they only drive and complete one job? Do you use a tenure system? Zomato experimented with tenure in a few cities. Workers who had been with Zomato for X years got insurance.
So do you reward long-term tenure, or do you tweak it for gig workers who may not have tenure, but are more sticky: they are engaged on your platform, so they start earning this insurance a lot earlier?
There is no such thing as a free lunch. You can’t make everybody happy.
You have to figure out how to build a sustainable business in a low-margin industry. You can read all the stories about Amazon and their warehouse workers.
Should Swiggy cut 20 per cent of their workforce to save costs that they can pass on to increase insurance coverage for gig workers? If they do it people are going to cry about layoffs. Or are they going to add a toggle at the checkout so that you pay more to help cover x gig workers? Someone is going to have to pay the costs.
This is why it is pointless to have discussions on Twitter about these hot topics. Most people will QT to virtue signal and collect likes. They have no idea how the world actually works.
I remember when a clothing company in America offered 2 manufacturing options: Choose American manufacturing and support local industry (pay more) or Chinese (cheaper). You already know what the people chose to do.
Tomorrow there is going to be a new hot topic. A new main character who will be the focus of all the attention. At this point, it is a clown show.

--- END POST: Hot takes on Twitter ---


--- START POST: Zomato is always in the news ---
URL: https://manassaloi.com/2024/03/17/zomato-news.html

A lot of chatter on Twitter about whether or not Zomato was right to sort food orders according to colour. Whether you really need a 15-minute delivery time for a PS5 on Blinkit orders. Do people really buy gold on Blinkit on Dhanteras?  All of these are interesting to think about and to discuss. But the meta point is: Zomato has found a way to stay in the news and get everyone talking about them.
Do you remember the last time there was a discussion about Instamart on Twatter?
When product, design, technology and even delivery are pretty much the same for all delivery apps, the winner has to make sure they’re the first thing people think of when they’re hungry or shopping. Zomato, especially Deepinder, has really figured out how to do this.

--- END POST: Zomato is always in the news ---


--- START POST: Heirarchy of splash screens ---
URL: https://manassaloi.com/2024/03/16/splash-screen.html

Heirarchy of splash screens:
Selling the most important product at the moment (have seen very few companies do this, see Zepto selling their subscription).
Reinforce key information (say location, see Swiggy for example).
Communicate positioning (see Blinkit).
Cool animation/ just load home fast (see Uber).
Just logo (standard for most companies, but a waste opportunity IMHO).

--- END POST: Heirarchy of splash screens ---


--- START POST: PMs have no taste? ---
URL: https://manassaloi.com/2024/03/15/taste-pm.html

I keep reading that PMs have no taste in design. A lot of them follow cookie cutter templates without having taste.
I honestly feel that it is just a case of PMs not caring enough about the craft of building products..
Even after 10 years in my job as a product person, I’m still installing apps every week, trying to understand flows, reading investor updates daily to understand how founders tell stories, think about their strategy and product roadmap.
This is how I spent yesterday:
In addition to my day job, the details of which I can’t share publicly, I:
Spent an hour, with my very basic css knowledge, on the improvement of my website. Changed the font size. Changed some margin, padding. Continued inspecting elements and trying to figure out why some sites look better while others don’t.
Added a couple of new sites to my collection of sites that I like a lot. Copied the font size from
naive-yearly
and then used montserrat. My site header broke due to the increased font weight, then spent a lot of time trying to figure out how to fix it. Learned a bit more about fonts and frontend css.
Found out about naive-yearly from another newsletter. I follow a lot of design newsletters.
Then spent an hour watching videos of people trying out Devin. Not that I do any coding, but I wanted to understand how you would design the user interface of an AI developer agent. How do you show the progress so that the developer can do other tasks, so that the agent can do the work async and you can see the progress when you come back to the window. What would I have done as the designer for Devin. I regularly share design observations on Twitter. I spent hours analysing quick commerce apps last week. Only by using more products and thinking about them will you understand what makes one better than the other.
Then I created a few memes on pixomatic. Compared to other similiar editing apps that have layers, Pixomatic is so much easier to use on mobile. It’s so well designed. It’s easy to do your basic stuff, but you can do more complicated stuff if you pay for premium.
Then I did a night’s research on AI writing assistants.
All in a day’s work.
You have to put in the hours and be curious if you want to get better at building products. There is no exception.

--- END POST: PMs have no taste? ---


--- START POST: All quick commerce apps look the same ---
URL: https://manassaloi.com/2024/03/13/quick-commerce-apps.html

The homepage of all quick commerce apps look the same. They all reinforce what users care about:
Fast delivery time
Assortment (wide skus available)
Cost of delivery (free)
Lowest price
If you remove the colour theme and name, you will not know which is which.

--- END POST: All quick commerce apps look the same ---


--- START POST: Create workflows for repeated tasks ---
URL: https://manassaloi.com/2024/03/03/workflow-repeated-tasks.html

A decent hack for your life: Design workflows for repetitive tasks.
I used to get annoyed every time I had to get a new photo for the visa process. Most countries have different requirements for the photo background: how much of your torso should be visible, and so on. Then I realised that you could literally take any old photo, crop out the face/upper body based on the requirements, use remove dot bg to get a transparent background and then use figma to edit based on the requirements. It might seem obvious to a designer. But it took me a while to figure it out.
I have a checklist that allows me to pack in less than half an hour when I travel to Jakarta every two months. Out-of-town trips are as easy as a visit to a friend’s house.
I have a
house hunting checklist
. In my early years, I had to change houses quite often.
Having a checklist has helped me to avoid a lot of the mistakes that people make when they look for a house.
The same goes for work. There are a lot of
standardised playbooks
that help me figure out how to get progress updates, how to deal with stakeholders and also how to mentor people.
I suggest you to do the same.

--- END POST: Create workflows for repeated tasks ---


--- START POST: Is Anant Ambani smarter than you? ---
URL: https://manassaloi.com/2024/03/02/ambani-smarter.html

Anant Ambani went to Brown, an Ivy League university - does that mean he is smarter than you?
Quite a few of my friends from high school went to the US for their undergraduate studies. It hurt when my parents or their friends hailed them as the success stories of our batch, because deep down I knew that none of them could have cracked a Tier 1 college in India. While I was struggling for a place in one of the IITs/BITS, they were simply paying their way into American universities. Competition in the US was less fierce, costs unaffordable for many middle-class Indian families. Yes, many of them went on to have respectable careers and are now settled in the US. But they only got in because their parents could afford to pay for their college.
(Disclaimer: My mother also funded my undergraduate studies, but I could have borrowed if I’d needed to.)
For my parents’ generation, moving abroad was synonymous with succeeding. If I’d got a job at TCS and moved to the US after years of toiling for 3LPA, my family and their acquaintances would have been prouder of me than anything I’d achieved in my career.
Would I have jumped at the chance to study in the US at a top college if possible? Absolutely. The prospect of learning alongside a cohort of people from all over the world, in a well-funded and world-renowned institution, and earning a salary of 100-200k straight out of college, which takes over 10 years to achieve here, is appealing. Anyone who says otherwise is simply coping. Even now, most successful people who can afford it send their children to the US to study. And even a JEE topper would go to the MIT/ Stanford if someone offers to fund their studies and they have no personal reason to stay back here.
Is going to study in the US = you being the best in your high school cohort? No.
If given the chance, should you go? Probably yes.

--- END POST: Is Anant Ambani smarter than you? ---


--- START POST: Lack of strategy ---
URL: https://manassaloi.com/2024/01/20/lack-of-strategy.html

Why most companies lack a coherent strategy?
Early start-ups do ‘what it takes to raise the next round’ driven development. The goal is always to introduce new products / access new user segments to expand TAM that can lead to a valaution pump.
If you ask any early stage startup if they are optimising for any user segment, use case or dimension and thereby choosing one over the other, you will find that the answer is No.
Because every VC wants you to grow into a unicorn. Their math is based on the power law, and there is enough dry powder in the ecosystem to spend to generate revenue and therefore valuation, so why not?
If you don’t promise to grow fast in all directions: new segments, new use cases, new markets, new dimensions, the same money will be allocated to your competitor. Have a look at Masa’s playbook and negotiation tactics with founders.
Okay, let us leave the early startups, what about big companies? In big cos it is ‘promotion driven development’ instead of ‘what it takes to raise next round driven development’ of startups.
The capital allocator = CEO instead of the VC. Capital seeker = product/business heads looking for their next promo/scope expansion. Why will they choose? Who got promoted because they killed a shitty product? Or the decision not to have a focus on a particular segment?
This relentless focus and prioritisation has to come from the top (CEO/ CPO). But there are very few people who are good at it.
(This thread is mostly from a discussion about good strategy - bad strategy with a couple of friends last week.)

--- END POST: Lack of strategy ---


--- START POST: Why have I not left India yet ---
URL: https://manassaloi.com/2024/01/02/why-have-i-not-moved.html

(This is the thread I wrote in November that got QT’ed by Balaji Srinivasan and later that got QT’ed by the Prime Minister of our country.)
Balaji is still India’s biggest cheerleader who doesn’t live in India.
If he lived here, he would have seen a woman with her baby girl electrocuted because she stepped on a live wire (imagine how many more people would have died if it had rained that day), goons stopping people late at night in Sarjapur, getting stuck in the traffic during the floods.
Got stuck every morning trying to get to work (maybe a global problem though). Heard about break-ins in Indiranagar.
All of this just this month.
I know of more people moving to the US from India than in, despite a weak US job market.
Here is what I told a friend yesterday, before people ask why I am still here.
I could have easily moved to, say, Singapore. This is why I did not:
I like being in India despite all the problems.
All (or most) of my friends are here
Deep in my heart I have a feeling that I will be lonely outside.
(Apart from air quality, water and other issues) My quality of life is good. But if you are living in a rich (forgive me for calling myself that) techbro bubble, do not bubble, don’t read the news too much, stay near the office, get a flat in a society with amenities, then you save a lot of time that you can use to do things you enjoy. Yeah, I live in a bubble.
I don’t like driving. So a move to the US is not an option. That leaves Europe or South-East Asia. They have good public transport or cheaper ride hailing. I can even get a driver here. But I don’t go out much, so I’ve never needed one.
I love being able to go out and have a idly sambhar whenever I want to. Idly sambhar after running in the morning tastes even better. Yes, you can say that you can get idly sambhar anywhere. Just as you can say that you can get good North Indian food in Bangalore. But let us just accept it: It is simply not the case.
Also, my house in Singapore would have been as big as the room in my house here where I have my gym. And I would have paid five times more than I’m paying to rent it. I know this because many of my friends have moved to Singapore over recent years.
I have access to all kinds of services here in India. And I save a lot of time.
At this point in time, I would optimise on saving time more than anything else. And the fact that I can afford a maid, the services of Urban Company and Instamart on a daily basis is the best hack for me to be able to do all the things I want to do in life.
Of course, there are a lot more reasons. But I am going to stop here.
Deep down, I know that all these reasons are probably a result of my upbringing here and my unwillingness to move out of my comfort zone. If I wasn’t born in India, let’s say I was white and born in California: Would I have moved to Bangalore? Probably not.
I would not have cared so much about idly sambhar. My taste in food would have been very different. And I would be used to doing my own work. I wouldn’t be dependent on cheap labour (just a fact). Maybe I would be more concerned about the quality of the air and the water and other things that people in the US take for granted.
One way to answer whether Bangalore is a global city that attracts the best talent is to ask a random white person working in Tech in Berlin and ask, given a choice: equivalent quality of life in the U.S./let’s say New York vs. Bangalore, where would they move? We already know their response.
(This thread became viral on Twitter, and I saw people QT’ing it heavily. A lot of NRIs jumped on the ‘India is the future’ bandwagon. So I wrote a follow up thread. Sharing it below.)
I have had a lot of people DM me QT’s from NRI folks. People who are cheering us on from the sidelines. Sitting in the US and telling us how good we have it here in India.
If it is India’s decade, you should all move back right?
Why would you miss out on the insane career growth and the quality of life by not being here?
Reply to their tweet and ask them why they are not here if you see someone rooting for us from the sidelines.
There are talkers. There are doers. Most of the people here are talkers. They’re not walking the walk.
If you were to move back and grind it out here, create a billion dollar company, employ tens of thousands of people and contribute to our GDP, I would have massive respect for you.
But you won’t. You will keep cheering us on.
Mukesh Bansal came back. He started Myntra. SriHarsha could have gone out. But he started Swiggy. Bhavesh stayed back. He is grinding for a decade.
None of these people are cheering us on from the US as they post pictures of their Thanksgiving dinner.
I work for the South East Asia market, but I pay over 35% income tax and 18% GST here.
And the people cheering from the US are bigger patriots? Just because they use chatgpt to generate in/acc pictures? Since a few people have DM’d me asking what’s wrong with people cheering us on even if they don’t live here, here’s my answer: I don’t control what people can do here. I can call out their hypocrisy in acting morally superior to those of us who choose to stay here, just as they are free to post Midwit memes.
One of the best role models here is Vembu. I think. Regardless of what you think of his political leanings, the man walks the talk and runs a huge tech company from a village in TN. That means his words carry a lot more weight, even if you disagree.
Yes, even I don’t agree with everything he says. But Zoho is an inspiration to us all and one of the best examples of walking the talk instead of cheering from the sidelines.

--- END POST: Why have I not left India yet ---


--- START POST: 2023 Recap ---
URL: https://manassaloi.com/2023/12/31/recap-2023.html

I called my 2022 recap blogpost a reflection. I think it was less of a reflection than a recap of my wins. Yes, I do reflect a lot, not just at the end of the year, but a lot of these are too personal to share on my blog. This means I will use this blogpost to share mostly highlights from the year, some learnings, recommendations, and a few parting thoughts.
Let’s go.
I will start by sharing what I wrote as my focus areas at the beginning of the year.
All the things I am doing in 2023:
What’s next after Gojek?
Gojek
Stretching
Football
Gym
Yoga
Photography
Poker
Master leadership communication
Work on charisma
Hygge home
2023 is the year to become a true HOP, become the fittest I have ever been, and treat life as an opportunity to have adventures. Year to upgrade myself.
So how did I fare?
What’s next after Gojek?: I wanted to figure out what’s next for my career. I had completed 4 years at Gojek and felt my future growth was a function of mostly macro factors beyond my control than something I could achieve by grinding more. It was a very weird position to be in. After a lot of discussions with my manager I decided to commit to another year. I was pretty close to even moving to Jakarta at one point. Finally decided to commit to Gojek, but stay put in Bengaluru, while splitting my time between Bengaluru and Jakarta mostly.
Gojek: Focusing on work and delivering a lot of key projects meant I got to expand my role. I am grateful for all the opportunities I have got here and it has been an immense learning experience.
Stretching: I used to focus a lot on mobility, had a 5 min desk stretch routine and all that, but I started neglecting it over time. I was pretty consistent over the last few months though.
Football: Played a lot of football, especially in H1. In H2 got a personal trainer for strength training and focus became that instead of football. From 3 times a week to barely once a month, I consciously moved away from this sport.
Gym: Big win. You will see a lot of updates related to this in the highlights section below.
Yoga: Miss.
Photography: Did a lot of it in H1, but had to deprioritise and I was juggling too many things.
Poker: Started hosting biweekly poker sessions at my home and improved a lot in higher stakes. Check my year end update on poker blogpost.
Master leadership communication: Inspite of growing to quite a senior position in my company, I had not leveled up in terms of how I communicate. I worked a lot on it. A sample learning is shared in the selling to execs post.
Work on charisma: Charisma is probably not the right word. The thing I was looking for was more executive presence. Inspite of all my growth in my career, I still acted like a fresh grad. I wore the same hoodies that I wore as a dev 10 years back. I look very young too. A lot of people think I am still in college. This is the reason I started dressing my age.
At some point in the year I came up with more detailed goals. I never tracked them. I am actually rereading these as I write this blogpost. Let’s see again how these went.
Body (divided into mobility, cardio, and strength, and mental health)
Football 1X / week: I probably would average close to this inspite of cutting down on football in the 2nd half of the year.
Sub 20% body fat: Definitely failed.
66 kgs body weight: I actually went up to 72 from 69ish instead of cutting to 66.
5K run atleast once: See how I wanted to just push myself and complete 1 run of 5Ks. I ran a lot of 5Ks. I consider it a win.
2x/ week workouts: I am training 3/4X days a week.
Trainer for a month: I wanted to train with a trainer for a month. Ended up signing up for life.
Skin and teeth care: Fail.
Knees over toes routine mastery: I wanted to rebuild my knees after a couple of years of intense football. I wanted to complete the knees over toes progam, but failed.
Deadlift bodyweight: Passed this spectacularly. I can deadlift 110 kgs now.
Money
Start 1 side hustle: Focus on career and poker meant I had no time for this. I tried angel investing last year, this year I did not try anything new.
Reach ideal portfolio split by EOY: Not sure if I reached my ideal money portfolio. I wish I had put far more money in equity.
Adventure/ Fun
Kashmir: Miss. I have never experienced snowfall. Wanted to go to Kashmir. Maybe I will do next year.
UK: I wanted to do UK this year. Instead ended up travelling across Japan.
Watch Liverpool match live in UK: Miss.
One train journey: Had been a long time since I travelled by train. I did both Mangalore and Mysore by train.
Dubai: Miss.
First Bangalore bus trip: Yes! I took public bus once. And travelled a lot by metro.
Cocktails: We had got a cocktail making kit. I planned to host a lot of parties. Failed. Instead I hosted a lot of poker nights.
Baking: Miss.
Mastery
Story telling: A lot of leadership is story telling and selling up. I became quite good at this.
Optics: Ship stuff, get results, and shout from the rooftop. I always did first two. Never the last. This year I shared all our wins on Slack. And also maintained the POW page on this blog.
Curiosity
3 small coding projects: Miss.
Sam Parr hour: This was supposed to be me spending an hour researching interesting spaces. Being curious about businesses. I did quite a bit of it, but I could have done far more here.
Random
Get US visa: As I was travelling almost every month, especially in H2, it was hard to apply for visa and lock my passport with the embassy.
Family
Movie nights with my new big ass TV: Did quite a few of these.
Cocktail parties: Miss.
What I am willing to cut down on to achieve my goals?
Angel investing: Yes, 0 investments this year.
Twitter: Tweeted far less. Went of Twitter for months.
Writing: Wrote far fewer blogposts.
New habits:
No double day misses: This means I was allowed to skip one gym session, but not two in succession.
Reduce scope but stick to schedule: The days I was not feeling it I still ran, maybe not 5K but 2K. The days I did not feel strong I still worked out. Maybe not an hour, but 20 mins. Consistency is everything for long term gains.
More apple watch competitions: I competed with friends regarding fitness goals. It was quite fun.
January
Continuous walking habit: Developed a habit to walk more. My average steps this year was far higher compared to previous years.
Restarted Football: I had hurt my knee and was out for 3 months. Restarted regular football.
Inlaws came home: I think for the first time they visited our house in Bengaluru.
Cosy house setup: Set up my ideal hygge home.
OLED tv: I got a new LG C2 65 inch TV.
Hosted a couple of house parties: This was fun, but I did not continue with this. I read the 2 hour cocktail party book too. It is a great book.
Went to the new Lulu mall in Bengaluru: My wife is mallu. Self explanatory.
Loaded up on FDs: I got spooked about the markets and invested a lot on FDs as the returns were decent.
Binging shows on new TV: Watched a lot of shows. White Lotus Season 2 looks amazing on new TV.
February
Paused art and photography: Just not a priority.
Morning affirmation habit: I started writing morning affirmations, especially around the kind of leader I wanted to be at work. I later started just tracking leadership habits on my Streaks app and stopped with this.
Got into sneakers: Bought a bunch of sneakers. I wanted to stop wearing slippers to work.
March
Wife’s Geneva work trip: I wanted to join her too, but could not.
Went home: Visited my parents in Guwahati and went to see my brother who was posted as a magistrate at a border district.
Exercised Gojek stock: I ended up exercising and selling some of my stocks. I would have expected a far more outcome from my stint at a company that grew 10X since I joined in terms of valuation, but post IPO the stock went down a lot, and I took some money off the table.
Joined my society gym: Started working out once a week.
April
Iftar at Frazer town: It was fun.
First time taking public bus in Bangalore: I wanted to take more public transit.
Played a bit of cash poker on adda52 and MPL and got back to reading poker theory: Mostly lost all my deposits.
Poker downswing continues: Started the year down bad and it only got worse as the year progressed.
Shaved my head: An yearly ritual.
First 5k run in agara: A mix of walking and running with a friend.
Biggest cash loss in poker: As I said the downswing would get worse. I think I lost 75/80K in one home game.
May
Jakarta travel: Travelled to Jakarta for work.
Japan: Japan was good. Here is the
itinarary
Shopping: I am not a big shopper, but I got mad in Japan and bought a shitload of things.
New watch purchase: I bought a fancy watch and gifted it to my brother for his engagement this year.
Mumbai: Visited Mumbai after years. It was my wife’s first time in Mumbai.
Sold stock: This was the stocks I exercised in March.
June
Personal trainer: Got a personal trainer. I pay him 10K a month for 12 sessions. One of the best investments I have made in my life.
Got the Head Of Product title: No matter how much Gokul Rajaram says Title does not matter, it actually does. Your comp as well as the next role you get is based on your current title and role.
Highest poker win: I won 20K. First time I won 20K in a cash home game.
Poker downswing continues: Took a short Poker break.
First continuous 5K: Instead of walking and running, I complete my first non stop run.
Bodyweight training: Started bodyweight training along with traditional strength training.
July
SAFF final: I went to see India win. First big live football game I attended. The atmosphere was electric.
Deadlifted body weight: 70 kgs.
15 5 30 threadmill routine: I started a new threadmill routine in my society gym. 15 incline & 5 km/hr for 30 mins. You will burn a lot of calories.
Nutrition: Started taking supplements.
2nd hand weights: Got 100 kgs worth of second hand plates from some warehouse in Narasapura.
Jakarta travel: This was a constant for the year.
August
Got a few inguries back to back in football: Realised that the downside of permanently injuring my knee or tearing my ACL is not worth it. Cut on football.
Back stretch routine thanks to my trainer: Weight lifting and back stretches helped get rid of my back pain.
Lost 9-1 in fifa: Deleted fifa after a series of losses. I hate losing in things I care about. Fifa was not a priority for this year, and I hated not having time to improve in Fifa.
September
Jakarta travel: Continued spending more time in Indonesia.
Futsal in jakarta: It was my first time playing football outside India. Courts in Jakarta are pretty good.
Brother’s engagement: My brother got engaged.
House decoration: I spent quite a bit of money in redecorating our house in Guwahati.
I gifted presents to everyone in my family: A new 65 inch TV to my dad, a new watch to my brother, a new leather bag to my mom, amongst other things.
Completed one year of food tracking: Had been tracking my calorie intake on Loseit.
October
Jakarta: Spent more time in Jakarta.
Bekasi field trip: Went to Bekasi, another city in Indonesia.
Water tracking: Started tracking my water intake using Waterllama.
New bench: Got Decathlon’s Bench 900.
Started taking creatine: Stopped as it made me feel bloated.
Quit a major bad habit: Something I had quit years back and started again just before joining Gojek.
Coimbatore: Went to Coimbatore and spent some quality time with my inlaws. I know there are a lot of inlaws jokes on the internet, but I love my inlaws. They are amazing.
Jakarta trip: Back in Jakarta.
Airfryer: Another amazing purchase. I am not sure why I did not buy it earlier.
Moka pot: Wife loves coffee. I got her a special edition Bialetti moka pot.
Squat, deadlift, bench, and leg, extensions, kettlebell swings PRs: 100 kgs deadlift, 60 kgs squat, ~80 kgs leg extensions, and started doing 100+ swings with my kettlebell.
5k runs: Did more runs. Started running regularly.
November
New poker set: Bought a new poker set.
Big loss in poker home game: Yes, I just could not maintain a winning streak. Would win in one home game and lose in the next.
New squat rack and a completely new home gym setup: Got a new gym setup from Siege fitness. Turned one room in my 3BHK house into a home gym.
Cubbon park run: Ran at Cubbon park. I started running in various parks in Q4.
Monitored my expenses for the first time and created a budget: Have shared a post on this.
Biggest poker loss during Diwali party at home: Lost 85K.
Visited Mangalore and Udupi: Took a Vistadome train ride. Had a lot of sea food. Mangalore food scene is amazing.
Malaysia trip: A quick trip to Malaysia.
Nike run app guided coaching: Started using NRC app’s guided runs.
Visited Mysore: Took a Bande Bharat train.
1 hour indoor cycling: Cycling PR.
Got promoted to Head of Product for Transport, Customer Logistics, and Gocorp (our B2B products): Came in the same month that I completed my 5 years here at Gojek.
December
Deadlifted 110 kg: 1RM for deadlift, Benched 60 kgs: 1RM.
5K run PR at a park near Vidyarthi Bhavan: Before this I never cracked sub 40 min for a 5K run. Yes, I know I am slow. I ended up finishing in 34 mins.
Finished 2nd in an offline poker tourney in Indiranagar: It was my first offline tournament.
Highest win in a home game: Won 55K.
Longest winning streak poker: November and December was quite good. I recovered a lot of money that I had lost in H1.
Ran Phonepe organised 5K race: Finished in 32.4 min. Was a PR.
Highest home game win: Won 1 lakh in a home game. I cut my losses to just 30K for the year.
Pub quiz: Attended my first pub quiz. Narrowly missed out on top 3 finish.
Travelled to Sarjapur for just an hour of poker: Maybe I have become a gambling addict.
Invited 11 people for a home game: Had to host 2 tables. Was super fun.
Played 4/5 days in the wellness week. Had a big loss in one of the sessions. Down 84K for the year.
Hosted friends for a board games night: Was super fun. We played Loveletters, Coup, and Splendor, and Exploding Kittens.
Recommendations:
Books
Non fiction (mostly introspective ones)
Reboot by Jerry Colonna (cheapest therapy)
Courage to be disliked (life changing)
The art of making memories (perfect book to make your Vietnam trip memorable)
Fiction
Lonesome Dove (if you liked red dead redemption)
3 body problem (sci-fi)
Stoner (you either absolutely love stoner, or you will leave after 20 pages)
TV Shows
One day
True Detective Season 1 (best crime series)
Master of None Season 2 (italy)
Ramy Season 2 (immigrant tale)
Binge
Death Note (I gave up on my college exams to binge watch this)
Movies
Before sunrise (you will end up watching the other two in the series)
The secret life of Walter Mitty (feel good)
Midnight in Paris (such an underrated movie)
Games
Witcher 3 (expansion packs are as good as the main game)
Red Dead Redemption 2 (i wish i had played this one slowly)
God of War (everyone must have played this already, but still)
Parting thoughts:
Habits compound. Tracking my food intake led to working out. Working out led to eating more protein. More protein meant I had to drink more water. I started running. I am probably the healthiest I have ever been.
Travelling a lot is brutal. For a student, the life of a management consultant seems amazing. When you are in your 30s, you just want to sleep in the same bed every night. It was not easy for me and my wife, but we did it for my career. And I got what I expected. Ultimately, it comes down to compromises.
I want to spend more time doing things that I can see myself doing in my old age. And yes, things that are cheap and that I can afford even if I lose half my net worth. Working out is one of them. You can even do it alone. You don’t need to spend more once you’ve got your equipment. Running is another.
Food/coffee is a great way to make friends. I used to feel very lonely in the Jakarta office. Language barrier. Also, all my good office friends are here in Bengaluru. I started asking people out for coffee. And ended up making some good friends in this office too. Okay, maybe friend is a strong word. But at least I don’t feel lonely now.
I spent the end of the year in the same way as the rest of the year: reading, working out, playing poker and eating good thindi. I can’t imagine spending three times the cost of a normal hotel and paying all the bills just because I want people to know I’m having fun. You can travel in February.
I have read far less this year than in previous years. Goodreads says I read 59 books. And I also wrote far less. 38 posts, including this one. That is ok. I wanted to concentrate on my work, my health and poker. 3 things is a lot.
Scaled a football whatsapp group to 400+ members. Probably the most active footballing community in Bengaluru.
Hosted my weekly home poker game consistently for more than a year.
Giving feels good. I never cared enough to participate in Secret Santa and whatnot. I just give things to people I like. Without expecting anything in return. It is one of the privileges of having a well paid job.
One filter I have for meeting people: I have to like them enough to pay for the food bill. I rarely let others pay. I don’t meet a lot of people, so that few times I do I want to foot the bill. Unless we are going to a very expensive place because of the other person’s preference. Then we might split.
There is no budget for my health. I am willing to spend whatever it takes to live a healthy life.
There is no upside to arguing with people online. It is easier to block them.
As you grow older you will have to make peace with a lot of things. I am not particularly close with my family. I rarely go visit my relatives. On the other hand, I am very close to my inlaws. You have to choose your tribe. I can’t go back in time and fix all my childhood issues, but I can choose who and how I want to spend my time with.
If you really care about someone, you will make time. A 10 mins call? A 10 secs whatsapp message? No one is busy enough to not find 10 secs. Same with your goals. Want to read more? Just find 10 mins to read a few pages.
Highly recommend getting an airfryer if you want to eat healthy.
I read the book Reboot every year. It is my version of Therapy.
Trolling people on Twitter, subtweeting is just a short term dopamine fix. There are far better ways to spend time. I regret everytime I have subtweeted people. I know I am a far better than the person that shits on others on Twitter.
We will all grow old and die in some old age home. Instead of living a life that looks good in the eyes of others, focus on things you really care about. My grandparents are dead. No one talks about them anymore. Same will happen to you.
For me every month counts. I want to live a good rich (in expriences) life so that when I am sitting in the old age home waiting to die I don’t have a lot of regrets. Atleast the regrets will be part of the tradeoffs I make in this life.
I optimise mostly for time well spent. A lot of people talk about money games and status games. Very few talk about how to spend the hours you have well. It is not about being the most productive person in the world. It is about living with intention.
This is the youngest I will ever be.
My wife is my rock. I have no idea what I did in my life to earn enough karma to deserve her. I get to spend time with one of the kindest, sweetest person in this world, but I lucked out in this department. I never share a lot about our relationship to prevent nazar.
Sometimes it is the paani puri at the nearby paani puri stall with your wife that fixes a shitty day.
Ego helps you achieve big things in life. Ego also stops you from making things right with people you care about. I mended relationships with a lot of people in my life by just curbing my ego and reaching out. As you grow older everyone gets busy. Everyone feels it is the other person who should reach out. And do more. I am okay doing more. Not for everyone, but for the people I genuinely care about.
You decide the game you want to play. And the limits you set. I still have not learned the art of throwing people under the bus for my career advancement, but I do have learned the shouting from the rooftop about your achivements game.
Mentoring people and sharing my learnings is my way of giving back to the world.
Running is painful when you start. Once you are done with the first couple of kms, you start feeling good. What feels even better? Knowing you did not need to run, but you still did. People talk about discipline all the time. What matters far more is consistency and showing up when you don’t feel like.
I am far too conservative when it comes to most people when it comes to money. I know I gamble a lot, but when it comes to asset allocation I have a disproportionate amount of my networth in debt (FDs, PF, PPF). I guess I want to protect my downside first, and then optimise my networth.
Track your expenses. You are probably spending the double the amount you have in your head.
Knowing I can cut my spend by 1/3rd tomorrow without sacrificing quality of my life gives me a lot of confidence. In really tough times I can even cut to 1/2. For me freedom is knowing I will be good no matter the economic climate.
I reward myself on my runs by listening to podcasts (generally a waste of time) and then post-run tindi. Running is also a great way to discover new parks in Bengaluru.
Does more money make one happier? I think Morgan Housel said it best in one recent podcast I listened to: money leads to happiness, but not as much as you would think. It does reduce your anxiety about money stuff. I find myself far at peace now with the savings I have.
Keep 12 months worth of expenses as savings for emergency.
The only way to run a community, especially on Whatsapp, is by being a dictator and enforcing strict community guidelines.
Link to the list of books I read this year:
Goodreads.
Japan is actually worth the hype.

--- END POST: 2023 Recap ---


--- START POST: Tech job is a power law job ---
URL: https://manassaloi.com/2023/12/26/tech-power-law.html

Working in Tech startups had become a bell curve game over the last few years because of ZIRP while it was always supposed to be a power law game. The reality is that most startups have always died, and will continue to die. There was never any job security in startups, and it will continue to be the case going forward. The last 5 years were a mirage.
We don’t need as many PMs. As many direct reports. No guaranteed promos based on tenure. There is no guarantee of X% hike every year.
People are still debating snacks in pantry. RTO. Company policies. Instead of figuring out how they can win.
I remember reading somewhere that over time tech would become like PE/ Hedge funds. Fewer jobs. Larger outcomes for the winners. Very high risk, but high reward. People will need to make sacrifices. You can’t expect power law outcome without power law sacrifices.
No one should expect to make 10X the salary of a person working a non tech job job, fresh out of college, that too without any sacrifice. Expect to become an EM with 3 years experience in a startup without the risk of the startup running out of cash.
Sounds harsh. But either you accept the new reality or keep cribbing on Blind.
Do everyone need to grind? No. You can always take a safer job. Choose the slow pace of growth. Choose work life balance. There is nothing wrong with it. We all operate in a market place. There is no ‘we are all family and take care of each other’ in the workplace. Airbnb lied. It is a case of simple supply and demand.
When people were switching jobs for double their salaries every year, it did not mean that their skills or value provided in the job had doubled. Now that there are layoffs and salary cuts, it also does not mean that you are suddenly bad and deserve to be jobless.
It is the market.
I have been tweeting the same thing for the last few years. I am not an eternal optimist. Nor a cynic. Just a realist.

--- END POST: Tech job is a power law job ---


--- START POST: Why strategy matters ---
URL: https://manassaloi.com/2023/12/25/strategy-matters.html

Strategy is a hated word on tech twitter. And it is understandable.
Last 10 years of low interest rates and emphasis on growth over free cashflows meant no one really had to think about strategy.
Strategy is all about trade offs. But why do trade offs between user segments, feature sets, expansion strategy when money was free and your competitors were going after everything anyway. Choosing meant getting left behind. Now with decreasing balance sheets, high cost of capital, you suddenly have to make hard choices.
As one mentor told me: this is the year when everyone in tech will learn to choose and also how to make money.
This makes me excited as a product person inspite of the gloomy macro environment.
All of us have been executing for years. Saying Yes to everything. Now we learn to say No and choose what really moves the needle for our business.

--- END POST: Why strategy matters ---


--- START POST: End of the year Poker update ---
URL: https://manassaloi.com/2023/12/24/poker-update.html

During the first 6 months of 2023 I was on a tilt. Bad beats + bad play.
I had 2 choices: give up playing poker or accept that I am playing with far better players and improve my game.
I had also jumped up in stakes this year. From 1K buyin home homes to 4/5/10K where effective stacks would be 30/40K after a couple of hours. And players who play at these stakes are far far better. Some of them do this as a full time living.
I also gave up playing with people who had much bigger bankroll than mine. It was stupid to go into hands with people for whom 50K meant nothing.
I decided to play mostly with people who would atleast feel bad after losing a few buyins and not rebuy 10 buyins and bully the rest of the table.
Okay, let’s talk numbers. I was down 2.4L for the year at one point. There was never a long losing streak. I would win 20K in one session, and in the next lose 30. I never managed to have a long streak of wins. And I had days where I lost pretty big. A 80K loss in a session meant to make up you have to win 20K in 4 sessions. Just to break even.
After a lot of improvement in my game, but doing hand analysis, as well as playing with more saner people who don’t want to gamble every hand, I have recovered 2.1L. Most of it in the last few months.
I had actually recovered a lot of it earlier, but then had a big loss in the Diwali Poker game I hosted and gave up all my gains.
I actually won 1L in a session yesterday. My highest cash win in a home game.
I am still down ~30K for the year. This is not bad at all because before this year, I used to mostly play 1K buyin home games, that too with people who were far below me when it comes to skill. This year I tested myself vs elite players, people who are far better than me. I have played vs pros. Played vs people whose net worth is 100X of mine. I have managed to not go on tilt when things don’t go my way. I have become far more calmer. And my Poker skills have improved massively.
I think I have ended positive in like 8 our of 10 sessions. And 2 of my biggest wins have come in the last 10 sessions.
If you think about it spending 30K to play mid/high stakes in India is not bad. I will never make enough money from Poker to replace my tech job. I must have played 50-100 sessions this year. Probably closer to 100 than 50. So ~500/ session to test yourself vs some really good players in the Bengaluru poker scene is not bad. My average Swiggy order is more than that.
There are still leaks in my game. And over time other players also improve. So it will be interesting to see if I continue to continue my upswing.
Update on 31st December: Down 84K total. Played a few more sessions and did not run good.

--- END POST: End of the year Poker update ---


--- START POST: Focus on fitness ---
URL: https://manassaloi.com/2023/12/23/fitness-focus.html

Lately seeing a lot of people my age focus on fitness. Yes, health is important and it was inevitable that people would start caring about their fitness. But I think another reason people have been getting into fitness is that compared to everything else in your late 20s/early 30s, health is something you can have more control over.
Let’s compare to career growth.
The machinery. Your boss. Office politics. Macro factors. These will probably have a higher impact your growth than you grinding. You will get ahead by working hard. But the magnitude will depend on a lot of external factors.
How much you can lift? How long you can run? It is all about your commitment to your fitness goals and the absolute hours you put in. There is some genetics involved, but it is far more straight forward.
There is no way to fake it. No one else to blame but yourself if you miss your health goals.
And it is not zero sum. You getting promoted does not mean someone is not. You are not competing with someone for scarce comapany resources. You don’t have to throw someone under the bus for your own career advancement.
It is simply wonderful. I find a lot of joy in working out.
And there is positive mimetic behavior when it comes to fitness. People get inspired by seeing others. In career, you compare your growth with peers, your comp vs your colleagues, your status in the bengaluru startup tech bro heirarchy, but in fitness everyone is hyping each other. No one gets jealous. Everyone is cheering each other’s fitness updates. Pushing each other.
The vibes are just different. And I like it a lot.

--- END POST: Focus on fitness ---


--- START POST: Socialising in my 30s ---
URL: https://manassaloi.com/2023/12/22/socialising-30s.html

How I meet people in my early 30s:
1-1 by default. Almost never in big groups. Real talk. No need for “aur batao”. Conversations should flow naturally.
If possible add an activity. Worked out with a friend yesterday at his house. Another coming to mine next week. Run with others. Play Fifa with some.
Sometime you want to participate in group events. For that I have got poker and football. I host a poker game every week, and try to play football twice a month.
Earlier it was harder to do this as most people enjoyed going out drinking more. But as they get older, everyone slows down and want deeper convos, bond over activities.
There is nothing wrong with partying or hanging out with in bigger groups if you enjoy it. I never did. I always used to get  bored at house parties in my early 20s. Felt like I was killing the vibe. Never enjoyed the small talk. Activities are a better way to meet new interesting people.

--- END POST: Socialising in my 30s ---


--- START POST: Consistency then intensity ---
URL: https://manassaloi.com/2023/12/21/routine-intensity.html

Every year I get obsessed with some new activity. As we grow older, the years fly by. This is my way to keep my life interesting.
My process is: Consistency -> Routine -> Intensity -> Goal -> Reward -> Keep for life/ Discard.
Why choose consistency first? Because it is the thing that matters the most when you start something.
If you set ambitious goals without being consistent first, you will get discouraged and drop the thing. You can’t even have a strict routine because missing a day or two would make you feel guilty and put unncessary pressure.
I commit to a weekly routine after some consistency. Once I am consistent, I focus on intensity. I push myself.
Once I ramp up on the activity, and become good at it, I set goals. Goals can be based on magnitude or cadence. And I reward myself once I hit my goals. If I keep enjoying the activity, I try to get better at it and keep it for life. Else I discard it. And do something else.
Let’s go through a few examples. I had been planning to focus on strength training for years. Been to gym at different points in my life. But was never consistent.
I thought the best approach for me is to build a home gym. Why? Read Atomic Habits and you will know.
But I did not want to put pressure on myself by getting expensive equipments, get a threadmill to hang my clothes on, or set unrealistic goals.
I got the cheapest weights from Amazon. The PVC ones with sand inside. I kept trying, but could not build consistency. So I started doing easy things. My Streaks app had a task for 10 Kettlebell. I just wanted to remember to do 10 kettlebell swings.
I also started tracking my calorie intake for a year. Seeing how much I ate and how much I needed to burn helped me realize the need to workout even more. But I was still not consistent. So I got a personal trainer. I committed to working out 3 days a week. Having a trainer brought accountability. Then I set a routine of working out Monday, Wednesday, Friday. Sometimes I would stretch myself and do another day, bringing up my workouts to 4 days/week.
From barely being able to lift 7.5 kg dumbells to now benching 50kgs, deadlifting 110 kgs, I have ramped up intensity over time.
I told my trainer that I don’t want to overexert myself/ push too much/ and drop out. I am okay going slower. I want to do this for life. So PR goals and intensity could come later. Even now I don’t have any big goal, be it asthetics or weight goals.
Okay, sometimes I think it would be nice to deadlift double of body weight, but I am not pushing myself to reach there sooner. Once I hit my goal of working out regularly, and could deadlift my body weight, I splurged on my squat rack and got more fitness equipments. I also splurged on supplements. Rewarded myself for taking my health seriously.
Very few things will impact the quality of my life as working out regularly. I only wish I had got serious about this earlier and not waited so long.
I have started and left a lot of things in the past. If you check my 2019 personal OKRs blogpost, you would see that I have been trying to run for years, but failed, before becoming serious this year. I have managed to tinally run a few 5Ks. I am still early in my running journey, but it is another activity I want to continue.
I have been playing poker for years, but only started getting serious, playing cash games weekly starting this year. Had to keep a decent bankroll to manage the swings that come with it. Start consuming poker content again. Even tried learning GTO.
I have started and left photography, graphic design, illustrating, and copy writing in the past. Some stick, some I get bored and leave. Let’s see what I pick up next year.

--- END POST: Consistency then intensity ---


--- START POST: Sad thing about middle management ---
URL: https://manassaloi.com/2023/12/20/middle-management.html

The more experienced you become, the higher your position in the org ladder, the more focused you should be in building the right team and letting them take decisions. But that means you should take only a few high quality decisions in a week instead of trying to add value every hour.
This means your day can be a lot more freer. But you are paranoid about seeing as unnecessary bottleneck. And you have to fill your day. This leads to a lot of useless status update meetings, pre meetings, and pre pre meetings.
There is this constant battle between feeling secure that you have built the right team and can delegate vs imposter syndrome and value add disease.
Hence people complain that there are so many meetings when you work out of office vs WFH.
It is by design: Everyone wants to be seen as value adding.

--- END POST: Sad thing about middle management ---


--- START POST: Randomness ---
URL: https://manassaloi.com/2023/12/19/randomness.html

There is so much randomness in life.
We got cable tv in 2002. My dad wanted to watch the world cup. After the worldcup we continued to pay for cable. I watched Danny Murphy score a goal and fell in love with Liverpool. I did not even understand EPL. I wondered why are there two teams from Manchester playing.
I screwed up my JEE twice. First time I had a decent score in AIEEE and had got into a few NITs, including the one in my home state. I had a big ego. It was IIT or nothing. I dropped out. Got into the extended merit list. Depression. Could have just joined an NIT instead of wasting a year.
My BITSAT was going dogshit. I somehow managed to recover in the second half and do well in Physics and Chemistry. Ended up with a decent score. My first thought was to take Mechanical or Chemical in Pilani. I was could have not Chemical for sure, but would need to wait for a few more iterations to figure out if I could upgrade to Mechanical Engineering. If I had taken either of them, I would have probably joining some oil refinery in Assam. Living my life in some sleepy town.
I chose to do Computer Science in Goa instead. My sidey turned out to be one of those super startup enthu types. I got interested in startups thanks to him. While everyone was grinding for CAT/ GMAT, this guy left to do a fintech internship in Africa. I also decided to play the startup game, but failed. Never got a big outcome.
One of the smarter devs in my team at Directi applied to an Indonesian company. It was growing super fast. I got in.
It has been 5 years. A lot of my networth and career growth happened just because I decided to apply to Gojek on a whim.
Inspite of all the frameworks on life and career, most of my decisions were pretty unpredictable. And I must remember that.

--- END POST: Randomness ---


--- START POST: Camera confidence on Zoom ---
URL: https://manassaloi.com/2023/12/18/camera-skillshare.html

(I hate turning on my camera during zoom calls. I find video calls drain all my energy. I still had to compromise and turn on video atleast for our All Hands. To get better at video calls, I ended up doing a few Skillshare courses on camera confidence and body language. Here are my notes.)
Eyes: stare directly into the camera. 90% of the time. Be expressive. Use eyebrows, Eye muscles.eyes 70% open. Moderate engagement. Don’t look too engaged or low engaged. Observe favourite speakers.
Face: camera drains energy. Not natural to talk. So exaggerate emotions. Act high energy. Tell childhood stories to a camera. Turn off audio. And observe just the visuals. Then you focus on expressions and understand the difference vs a great speaker’s engagements. Emulate someone. Smile more. Smile genuinely. Use microexpressions.
Arms and gestures: Hand gestures done well show confidence. Gestures should stay close to the body. Don’t fidget. Don’t move hands all the time. Make it natural. Focus on flow. Compare gestures with someone famous who is amazing at it. Copy theirs and then iterate.
Vocal tonality: 3 times of rapport: seeking, breaking, and neutral. Use breaking or neural when talking to camera. Assume rapport/ demonstrate confidence. Assume familiarity/ audience already likes you.
Loudness & timber: Be louder on camera as it demonstrates confidence. Bring energy. Place microphone further away so you can speak louder. Breathe using diaphragm.
Cadence: Pause a little more at the end of sentences. Speak 10% slower.
More dangerous the body language the more confident you appear. Example. Under attack you open chest, put arms on waist, then you are at risk as vital organs exposed, but it shows you are not worried. You are confident.
Your body is a radio tower. Always sending signals. Make sure you send high value signals.
More dangerous the body language the more confident you appear. Example. Under attack you open chest, put arms on waist, then you are at risk as vital organs exposed, but it shows you are not worried. You are confident.
Body is radio tower. Always sending signals. Make sure you send high value signals.
(Disclaimer: I probably don’t do any of these.)

--- END POST: Camera confidence on Zoom ---


--- START POST: A lesson from Jack Dorsey ---
URL: https://manassaloi.com/2023/12/17/jack-dorsey-learnings.html

I was talking to a friend a few years back. We were debating the different ways of building products: highly analytical data driven approach vs insights from talking to users.
He told me that at Square they had to spend X hours every week at small businesses trying to understand how the owners actually use Square products. And a lot of ideas that ended in the roadmap came from observing users in the real environment vs looking at data and iterating. And it was something that everyone in the product team at Square practiced.
Another thing that he mentioned was how Jack Dorsey, the founder of Square, had this ability to jump from feedback on current features to a 80000 feet view and connect the present to the future.
Whenever my friend had feature review sessions with Dorsey, Dorsey would push him to think bigger. Ask him to imagine Square 5  years later. What if they became a bank. A big multi product company with X Y Z products. How does this current thing tie to that future vision. Dorsey could zoom in first, but zoom out.
And a lot of things he told me then ended up happening. I was seriously impressed. If you have worked in the Indian startup ecosystem, you know how few long term thinkers are there. Most founders don’t think beyond what is needed to secure the next round of fund raising. There are very few founders who dare to dream big. I was happy for him, but also jealous that I would probably never have the chance to work for a 0.0001% founder like Dorsey or Zuckerberg.

--- END POST: A lesson from Jack Dorsey ---


--- START POST: Companies are not run by committees ---
URL: https://manassaloi.com/2023/12/16/ceo-dictator.html

I was catching up with a VC friend recently and he pointed out that almost all successful companies, be it old behemoths like Reliance (Mukesh and Manoj Modi) or new age successful IPOs like Zomato (Deepinder) and Paytm (VSS) are run by strong willed leaders and not by committees.
More leaders at the top means more empire building. People fighting for resources. The CEO trying to please everyone.
Failures (firings) and rewards (promos) are both distributed equally though impact might not be equal.
Decisions through polling means a lack of backbone and the inability to own up to a decision.
Companies are not built in a democratic way. If polled all employees would want 5 hour/ 3 day workweeks. And a 100% hike every year.
Another view I hold that is unpopular: CEOs are underpaid. A good CEO with a single decision can change the course of a company. A 10% improvement in decision making can generate billions of shareholder value. Good CEOs are rare though. And hence they are comped well. r/antiwork would seethe at this.
Do note: Correlation does not imply causation. Being autocratic does not mean you are a good leader/ CEO.
A lot of CEOs in the Indian startup ecosystem are autocrats but have no vision and leadership skills. It was an observation made by a VC. Take it how you want.

--- END POST: Companies are not run by committees ---


--- START POST: The Elon Book ---
URL: https://manassaloi.com/2023/12/15/elon-book.html

The Elon Musk book by Walter Isaaction is a real Rorschach test for the participants of the tech ecosystem.
A lot of CEOs/ execs will justify setting impossible deadlines (based on them not breaking any physics laws) and feel empowered to throw tantrums and fire people at will thanks to this book.
But for me the real learning is that demanding extraordinary sacrifices from employees require an extraordinary mission (reaching Mars). And empowering employees by removing bureaucracy and office politics.
And working on the cutting edge of various domains (space, automotive, AI) and yes, the leader has to lead from the front.
A lot of incidents in the book shows that during war time Elon takes charge and shows the path forward. And simplifies processes. Provides clear directions.
Takes decisions based on first principles vs doing things that will impress the board and help raise the next round of funding. He rarely is obsessed over the competition. Does not blindly copy whatever the competition is doing.
His employees don’t even quit inspite of the pressure cooker culture because no where else would they get the chance to work on cool things and have the ability to move fast and be part of a world changing company like Tesla or SpaceX.
Now compare that with say an exec at Byju’s asking an employee to skip the wedding of their sister or come to office on a Sunday night. The employee knows that all they will accomplish is sell predatory loans to lower middle class families while their CEO is sitting in some middle eastern country, and have taken out 100s of millions in secondary. Can’t compare their CEO to
Elon who risked personal bankruptcy multiple times to get to Mars and literally sleeps under a desk during surges at his companies.

--- END POST: The Elon Book ---


--- START POST: Read quarterly updates ---
URL: https://manassaloi.com/2023/12/14/quarterly-updates.html

Read investor letters and quarterly updates to become a better storyletter/ write better narratives when it comes to your team’s charter and strategy. It is even more relevant for founders.
Learn how to write a narrative around where your business is today, what it has overcome, and why there is still so much upside.
Read Uber’s entire investor day presentation from 2022. It is amazing.
You can to read through all past Constellation Software president’s letters to understand how their investment philosophy has evolved over the years.
If you are too lazy to read entire quarterly updates, then you can check out these Twitter accounts for summaries:
TheTranscript_
ecommerceshares
modestproposal1
OddDiligence
borrowed_ideas
Then read the entire update if it is relevant to you. I highly recommend all PMs to do this.

--- END POST: Read quarterly updates ---


--- START POST: The risk to PM jobs ---
URL: https://manassaloi.com/2023/11/22/pm-jobs-threat.html

I read a twitter tread recently that hypothesised that a lot of PMs are at risk of losing their jobs because they use cookie cutter frameworks thinking and are not really creative.
I think the real reason the number of PM jobs will go down over time is not because of emphasis on frameworks thinking, but because most PMs don’t actually care about the craft of building products.
It has become a status seeking day job for people who want a generalist role.
When I was a new PM a decade back, people who entered this domain used to care about the art of PM’ing. I myself was obsessed with becoming a good product manager. I remember putting keyword alerts on Google to get updates on competition. Obsess over playstore reviews. Track competition to know what they are upto. Understand the space I worked on. Have a thesis. I have been writing online on product management for a decade.
If you have followed me for long on Twitter, you would remember how many links on design and strategy I used to post there. And links I posted were my favourites on the topic. In reality I used to read 10X of that. Not just reading, I cared about moving fast. Shipping fast. I tracked the impact of my features. Read quarterly updates of companies.
When was the last time you as a developer or a designer met a PM and were like wow this person has thought deeply about this problem statement they are working on?
When you, as a PM, work based on implied authority without anyone reporting to you, you have to put in the work.
When was the last time you installed a new app to understand how they do onboarding? Paid for an app to understand their payment flow? Tried to understand how a free app upsells their users to their premium plan? Do you take screenshots of your favourite UIs? Do you debate why a particular UX is better than the other? When was the last time you understood a new ecosystem? Be it Fintech or Crypto or AI or on-demand marketplace. Anything?
Tried to understand your own company’s PnL?
I have so many friends who want to do product after their banking/ consulting/ MBA and I always ask them why? I have never seen any of them discuss products with me before. I am sure they don’t care about tech. They just want in because the role sounds good. And pays well. Most of these people will fail to build a meaningful career in this domain because they don’t care about the craft of product management. They just want the status of a well paying tech job.

--- END POST: The risk to PM jobs ---


--- START POST: Tracking my expenses ---
URL: https://manassaloi.com/2023/11/21/budgeting.html

After losing big in the Diwali poker session I hosted, I decided to figure out how much money I am spending every month. I am okay spending x% of my net worth on my poker bankroll, but I still wanted to make sure I was not on a path towards severe lifestyle inflation.
In my head I always thought whatever average credit card bill I was paying per month added to my rent would be my monthly spend.
I never tracked my UPI transactions. One off gifts. Even travel.
When I did the calculation on a spreadsheet, I realised I was spending 2/3X of what I was thinking.
Why the big gap?
I  keep a check on my spends by monitoring my credit card statements. And credit card statements and recurring spends does not cover one off purchases like electronic devices, gifts to family, travel costs.
I always thought fixed costs I can cut easily. So was never stressed about that.
But I realised I keep having different fixed costs every year.
Last year it was experiments with angel investing, this year it was my poker bankroll to play higher stakes. Also I have started spending big on international travel and fitness. I also started spending way more on subscriptions, paid apps, something that I never did earlier. Also my spending on health has gone way up.
I pinged a few of my close friends to ask them how much they think they spend yearly and they also guessed a number that is far lower than they actually do. And I shared my expenses sheet and they were like wow maybe ours is closer to that too.
I have  resisted tracking my expenses because I have always had a high savings rate. I avoid status games. Have no shame staying in a non fancy area of Bengaluru. Taking cheap hotels when I travel. Using an Ola auto to commute. Have taken no loans.
Inspite of all that I should have monitored my expenses.
If you have never done it in your life, I would recommend to do so today itself. Guess a number before you do this exercise and then do an actual analysis and see if you are close to your number.
Disclaimer: I don’t track actual expenses monthly. I use rough figures. I will do another analysis at the beginning of next year.

--- END POST: Tracking my expenses ---


--- START POST: The winning mentality ---
URL: https://manassaloi.com/2023/11/20/winner-world-cup.html

As a Liverpool fan for 20 years, I can totally relate to yesterday’s loss to Australia in the final. India losing to Australia, and failing in the big stage, is not different to how Liverpool ends up losing to Real Madrid in the finals. The best team Liverpool has had in decades keep getting bested again and again by a Madrid team. Domination till the final, only to lose to Madrid.
I always wondered if it is luck. Like a goal that should have gone in will be magically saved on the line. Somehow our star players will flop in tbe final.  You keep thinking Madrid can’t honestly get away with it, but they do. Same with Rohit Sharma’s catch yesterday. The ball could have landed anywhere. But Head somehow managed to catch it. Even in the EPL, Liverpool’s struggle vs Man City seems similiar. Man City would be behind in the league, but would finish strong. Always. It seems inevitable.
Matches Man City should have lost would be won by some screamer from Kompany. Some freak goal would go in.
I never get the same confidence from Liverpool. Same as how a lot of my friends were anxious thinking Australia would show up in the final and we would lose.
Maybe it is not luck after all. Maybe it is just turning up when it really matters. You cant explain so trophies won by these elite teams through luck. It is just elite winner’s mentality. And we don’t have it.

--- END POST: The winning mentality ---


--- START POST: The meta ---
URL: https://manassaloi.com/2023/11/18/the-meta.html

The one secret.
The meta.
I have been obsessed with secrets.
It started in college. I was a pretty bad Fifa player in my first year of college. I have been playing Fifa since Fifa 2000, so I had no idea why I kept getting crushed when I was playing vs other players in the college server. Then someone told me that the biggest flaw in my game was that everyone knew that the Fifa meta then was to do aerial balls and since I used to play the default defence settings, people would just do an aerial through, trigger run the forwards, and beat my defence. So I had to use defensive tactic for my defence.
This was 2010. In my 2nd year I started crushing everyone. People joked that maybe I paid for Fifa coaching during the summer vacations, but it was just one small change. I would have never known that a simple change would make me one of the best players in campus.
The secret. The meta. Whatever you want to call it is the difference between success and average outcome in whatever domain you want to focus on.
The key to crushing people on Fifa is to know the meta of the year.
The key to Poker is to know that you can never play with people who have an infinite bankroll compared to you. Because if you go into a lot of plays with them, they just need to be right just once to pull all your stack. The other secret is to know that you might play for 5 hours, but your final tally will depend on 3/4 hands for the night. So you need to be right in those hands and not lose your stack. Even if the play is EV +ve for one of those hands, you might lose your stack and have to rebuild again.
In the corporate world the obvious path is to work hard whenever you land a new role, bring energy, and show to your manager that they can trust you with bigger projects and charter. But the bigger secret is that you have to matter enough to the powers at top so that you don’t remain a tiny dot in some org tree, who can be moved around in a reorg.
How can you not be a tiny dot?
It is something that I share mostly with the people I mentor. A lot of things that work in real life are not found in product threads. Because to acknowledge them is to accept that the world is not a fair and rational place. And there is no upside to share things that must remain unsaid.

--- END POST: The meta ---


--- START POST: You don't present to execs, you sell to execs ---
URL: https://manassaloi.com/2023/11/17/selling-to-execs.html

You don’t present to execs, you sell to execs. Something a mentor told me once.
There are different presentations:
Presenting to the CEO + C suite.
Presenting to other execs.
Presenting to your manager.
Presenting to other stakeholders.
Your presentation has to be tailored to the right audience.
You can mistakenly combine all presentations made to different people up the hierarchy into a single bucket called ‘presenting up’. But that does not work.
Once I was planning an update to the CEO on a 0 to 1 initiative that my team is running.
I worked with my PM on the following structure:
Where are we now (timeline of major events/launches and numbers at the highest level of abstraction so that the exec doesn’t get bogged down by details)
Where do we want to be (3 year vision or why should someone put money/resources on this)
How will we reach there
I thought it was a great presentation and the content was good, not too high level, not too low, marries the 80000 feet view with execution details, but my mentor asked me to think from the CEO’s POV. Details are good. But that is not the point of the presentation.
The point of the presentation is to answer the following question:
Why should the CEO put X million on this new initiative vs using the same resources somewhere else.
How does this new initiative tie to the mission of the company/something the CEO cares about.
You are not presenting, you are selling.
You are selling all the time as a product leader. Every job is a Sales job, including product, but we keep forgetting it.

--- END POST: You don't present to execs, you sell to execs ---


--- START POST: A designer could do your job ---
URL: https://manassaloi.com/2023/11/08/designers-could-pm.html

bUt iF dEvs aNd desIgnErs dID thEiR jObs tHe wOlrd wOuLd nOT nEed PMs
This is the common criticism for the job of a PM. And yes, I have had a lot of idiots who come to debate with me on whether they could replace me.
It is very easy for me to destroy them. I just have to ask them:
As a designer when was the last time you looked at a user lifecycle funnel? Tried to calculate your contribution margin? Figured out next few use cases to expand PMF? Fought with the head of engineering to get you another QA? Planned a dedicated roadmap to improve your bottom line? Wrote a doc on trade offs between 2 different decisions, one that would give you a faster result but add tech debt but another would take time because you would do things in a more scalable way thinking about the next 3 milestones?
As a dev when was the last time you looked at bugs/ feedback from users and created a doc with the top 5 ones you want to fix and create a narrative doc on how it would improve customer experience? Sat in like 5 pre meetings to close alignment on an open issue, wrote like a dozen slack messages to set expectations, and then aligned some stakeholder who was vehemently against something you believed in? Looked at your product funnel and identified leakages?
I can go on and on. It is not your fault. The only reason a PM does all of that is because they have to sign up for KRs and map them to initiatives and if they miss their KRs/ deadlines a few times, they get fired. They are accountable for the outcome.
You can call that role anything. But some has to stress about all the things that come with delivering that outcome.
No one enjoys working on a presentation Friday evening so that they can show impact for a project in a Monday morning meeting to execs. But you have to do that anyway as a PM.
Now you can say that you would have done all these things as a designer or a developer if there were no pesky PMs around, but let’s just accept it: no one wants to do the job of multiple people.
Most people just want to do what they are asked, go home, and watch Netflix with their spouses.
Are all PMs good? Nope. There are so many idiots in this domain who can’t even design a product funnel.
And a lot of PMs play the optics game far more than shipping something that gives results. Everyone knows that. But the presence of mediocrity in a domain does not mean you want to do the job of a PM.
You just say that to earn brownie points. Win tribal games on Twitter. I know this. How?
Because there have been times I have asked people to take on more responsibilities than their JD and almost always people make up excuses. Very rarely they show up to do more. Exceptions do exist but you design your org around the average employee. And this is the reason the PM role will never go away. You might call it by some other name, but it will exist.

--- END POST: A designer could do your job ---


--- START POST: Crush in your first two months ---
URL: https://manassaloi.com/2023/11/07/crush-first-month.html

I saw this reel about how you should put 70% effort into your first few months as a new employee so you don’t overdeliver and set super high expectations that are unsustainable.
I disagree.
The first couple of months set a lot of how we are perceived by others. And perception is what becomes reality.
If people perceive you as a winner - as someone who can get shit done - then you will start to get good projects at the beginning of your tenure. A few early wins and you’re in.
If, on the other hand, you move slowly, don’t bring energy, under-communicate, then you’re setting yourself up for failure and that first impression is hard to change later on.
When someone joins my team, this is the first thing I tell them. And it is the only reason why I myself have always had a high level of approval from my managers.

--- END POST: Crush in your first two months ---


--- START POST: Losing my first job ---
URL: https://manassaloi.com/2023/11/06/losing-first-job.html

10 years back.
I had just landed in Hyderabad, excited to start my first job. I arrived during the weekend. I was supposed to start on Monday.
Remember this was my first job. I was a 6 pointer in college. I was optimistic. My CTC was 5 LPA. It was a startup, and Hyderabad was cheap, so I was looking forward to a fresh start.
A few hours after I landed, I got an email saying my offer letter was being rescinded because I did not report to the office on time.
Imagine going to a new city. Crashing at your friend’s place. Hoping to move to your office provided accommodation with almost 0 bank balance. Just enough to survive the first month before I could be independent and did not have to rely on my parents.
Excited to begin your new job, only to see your offer revoked, because the HR did not follow through on my request to let me join on the original joining date. They had randomly decided to prepone our joining date at the last minute. I was in Thailand then. Had taken the decision to travel after my college ended. And I could not just come back by the new joining date. I ended up spending a lot of money doing Rs 50/min roaming calls explaining to the HR why it was unfair to expect us to join at a different date at the last minute, felt I had convinced her, but I assumed that her verbal agreement meant they would not go back on their words. Sadly, it turned out that verbal yes does not mean anything. The HR later said that they had never ack’ed on the email and hence they had the right to revoke the offer.
My learning was to never assume anything in life.
That incident started my obsession with communication and better documentation.
If you go through my blog there are dozens of posts on everything from closing a decision to how to post a slack update to how to highlight the decision maker in a meeting.
Lack of clarity, verbal comms, keeping things at a high level, always work for the person in power.
Because the interpretation will always be based on what they want.
You might even remember my post ‘Join for the present’ on choosing a job. No verbal sales pitches.
The bigger lesson for me was how you can always recover from the worst situations in life. I had some personal issues before moving to Hyderabad. I was hoping to leave everything behind and start fresh. Only to lose my only job offer. I used to wander around in Hyderabad thinking how I would tell my parents. My parents and relatives all thought that studying in BITS meant I would be sorted for life. I never got the job offer they had hoped for. It was only a job at a no name startup paying me 5L a year. But even that was taken away. Their son would be jobless. I was depressed for the first week.
But it was also freeing. I had done sales as an intern. I thought why not do that. After the first week I felt better.
Eventually I got the offer back and joined that startup. I used my contacts in BITS to push the company to honour their contract. The Placement Committee head was a close friend. We could have banned the company from even coming for placements.
Starting my career from a position like that gave me a lot of confidence that things would eventually be alright.
When the startup split into two startups, I joined the far smaller one. I got much better work. Learned a lot as a first time developer. Couple of years later I realised I did not want to continue as a developer. So I left.
 
I left my developer job even before I found a product role. I got my first product job during my notice period as a developer.
I left another job when I felt it was not going in the right direction. Just cold quit. Inspite of knowing that if I had stayed even a month more I would  have got an offer on paper that doubled my CTC (they gave this offer to everyone who stayed back, not just me). I learned to live with the uncertainties of life. Not take anything for granted.
Know that the job market is just a marketplace. We trade our skills for pay. Some HR process gap might lead you to lose your job a day before your joining. Don’t take things personally. Just keep working hard and things would be alright.

--- END POST: Losing my first job ---


--- START POST: How long do I work ---
URL: https://manassaloi.com/2023/08/07/how-long-i-work.html

As you progress in your career, the emphasis shifts from clocking in set hours to delivering tangible results. There are no strict boundaries on when you should be logged in.
Just last week, a friend who isn’t in the tech industry asked me how many hours we typically work given our compensation. It’s a tricky question to answer.
Gojek operates in a hybrid work model. Sometimes, I manage to fit in a workout at 6 PM when I’m working from home. On the flip side, I might find myself discussing organizational issues with my manager at 10 PM. Due to time zone differences, there are occasions when I’m on a call as early as 6:30 AM.
Even during vacations, the responsibility doesn’t vanish. If something breaks, I have to step in. I vividly recall a time when I was in Cappadocia last year, and my day was meticulously planned. But I had to jump into multiple Zoom calls because an unexpected issue arose.
In this environment, no one dictates your schedule. You define your own OKRs (Objectives and Key Results), set your goals, and determine when and how you achieve them.
Take this tweet, for instance. I’m writing it during a break from working on performance reviews. However, this thread will only take about 5 minutes—similar to the duration of a quick smoke break at the office.
My perspective is simple: as long as I’m accessible and can provide prompt responses (I’ve set my turnaround time to be within X minutes), and my team and I consistently deliver results, I’m content.
If you’d like to read more on this topic, I wrote
this post
a while ago on the sacrifices you have to make as you grow senior in your career.

--- END POST: How long do I work ---


--- START POST: Why project Athena failed ---
URL: https://manassaloi.com/2023/08/06/why-athena-failed.html

A few years back, I made a deliberate effort to structure my approach to mentorship. As someone who genuinely wanted to provide value but had limited energy and time for ad hoc chats, I decided to create a mentorship program that aligned with my management style. I called it
Project Athena
.
In my program, I adopted a structured 1-1 format for biweekly or monthly conversations. This format allowed us to systematically review the past weeks, discussing everything from project milestones at work to valuable learnings and even setbacks. We set clear goals for the upcoming weeks, crafted a development plan, and exchanged reading recommendations to foster growth.
This approach was reminiscent of the way
Aristos
operates. However, my focus was not on being a therapist for individuals to vent about their manager or office-related frustrations. Instead, I aimed to be more of an accountability coach, someone who could help mentees stay on track with their professional growth.
Reflecting on why this program didn’t quite work as I had hoped, I realized that, unlike Aristos, where the goal was to learn about product management and ultimately secure a product job, participants in my program didn’t have a strong incentive to push themselves. Moreover, I hadn’t charged anything for my mentorship, so there was no financial commitment to drive motivation. As a result, the program eventually faded away.
Interestingly, one of the most fruitful mentor-mentee relationships I established during this time was with a college student who had reached out to me expressing interest in doing Aristos on his own. Initially, I was skeptical, as many people send direct messages to build relationships but often don’t follow up. However, this student was different.
He consistently sent progress updates and reached out with specific questions when needed. His discipline and dedication stood out, and it paid off when he successfully converted an internship into a full-time role. Even after securing the job, he continued to maintain our mentor-mentee relationship.
Whenever he had a win at work, he’d send a direct message to share the good news. When he encountered challenges (as early PM jobs can be quite confusing with a lack of proper mentorship in the industry), he diligently did his homework and approached me with well-thought-out, specific questions. Over time, I became deeply invested in this relationship, and now, no matter how busy my schedule, I’m always eager to make time for him.
This experience reinforced the concept of
“lines, not dots”
that I had previously written about. Building lasting, meaningful connections takes time and consistent effort, just like connecting dots to form a line. This student exemplified this principle beautifully.
In fact, if I were to head a product team elsewhere, he would be one of my first hires without a doubt.
When I speak about differentiated job-hunting strategies, this student’s approach could certainly be considered one. However, it’s important to note that authenticity is key in such endeavors.
Cultivating genuine, lasting relationships and following through with commitment can be immensely rewarding.
I want to clarify that this post isn’t a reflection of the quality of the PMs I wanted to mentor or have mentored in the past. Many of them have continued to thrive in their careers, and I’ve stayed in touch with them. I’m simply highlighting why my initial mentorship approach didn’t yield the desired results and why a different approach proved successful for someone else.
P.S I have been feeling lazy lately. Not motivated to edit or even write new content. This was a twitter thread I had shared a few months back. I edited it with the help of ChatGPT and turned into this post.

--- END POST: Why project Athena failed ---


--- START POST: Losing big in Poker ---
URL: https://manassaloi.com/2023/06/07/poker-downswing.html

I was on an insane upswing in Poker during the last one year. Things were going so good that I used to brag to people I played with that I could not even remember the last time I lost.
Then I started losing sometime in January. For last 6 months I have lost more times than I can count. Every thing is going against me. I hit a straight, someone hits a better straight. I hit a straight, someone hits a flush. Of course I am making bad calls too. It is a combination of playing on tilt + bad luck.
When you are on a downswing, you question everything. Am I just a fish who used to get lucky? Should I leave this game altogether. Maybe me winning earlier was not all skill. A lot of luck was involved too. Just like me losing now is not just my skill level. The only thing I can control is the inputs. Variance will be there. But consider a long enough duration, hopefully the skill part will outweigh the bad beats.
A friend also commented how my game has become predictable. When I was winning there was no need to study. Everything was going my way. Losing is humbling. I lost the most I have ever done in my life last weekend. I was close to quitting poker. But I have decided to continue and not let one bad session decide whether I love or hate Poker.
I had blogged earlier about my learnings from the game and how Poker most resembles real life.
It is same with career. One bad career move does not define you. One bad manager does not define you. One setback does not define you. Take enough bets, let variance run its course. And if we keep working on ourselves hopefully by the end of it, we will win.
I will keep grinding and improving.

--- END POST: Losing big in Poker ---


--- START POST: Yeh jawaani hai deewani ---
URL: https://manassaloi.com/2023/06/06/ye-jawaani-hai-deewani.html

A decade ago, during my aspiring travel blogger days, I watched this movie called Ye Jawanee Hai Deewaanee. A discussion from the movie resonated with me and has stayed with me throughout the years. The conversation that lingers at the end of the movie between Deepika and Ranbir revolves around the comparison of their life experiences.
Ranbir’s adventures are extravagant and solitary, set in exotic locations, while Deepika’s are rooted in local culture and revolve around family and friends. Although their conversation pertains to travel, it is equally applicable to our everyday lives.
As part of my work with a South East Asian company, I had the opportunity to explore numerous countries in the region. I even contemplated the possibility of relocating.
Forget a first world country like Singapore, if you even compare the infrastructure and life in Jakarta with any city in India, Jakarta wins. Anyone who has spent some time in Jakarta will tell you that. Moreover, residing there grants you the privilege of easily visiting multiple neighboring countries during extended weekends.
But whenever I think about where to live, the question always comes back: What matters for long-term happiness?
Is it worth walking the streets of Indiranagar, where everything is dug up, to meet a friend you have known for 10 years? With someone you can talk about whatever you want? Or is it better to live in a city where you have 10 times the options to spend your time (but alone)? If you can fly to Bali whenever you want, is it worth giving up poker nights and football with friends?
Is stability, choosing a place to call home and establishing roots, more valuable than the richness and diversity of experiences? What will matter to me when I am 40? Paying taxes in India with limited benefits but lower expenses, where visiting family and friends is affordable and frequent, or opting for a location like Singapore with its advantageous tax system and superior infrastructure, but at the cost of distant friendships maintained through Whatsapp?
If you read my blog, you know I have been thinking about this for years.
Something to ponder. I just came back after spending a month in Indonesia and then Japan. And the more time I spend abroad, the more I think about whether the trade offs I am making are worth it.

--- END POST: Yeh jawaani hai deewani ---


--- START POST: Your first month as a new PM matters ---
URL: https://manassaloi.com/2023/06/05/first-month.html

Advice for PMs who are joining a new company: Your reputation as a PM will largely be made in the
first 90 days
. Maybe even 30 days, depending on the company.
Don’t be invisible.
Build relationships.
Bring energy
.
Most importantly, get your team some early wins. Ideally within the first month of joining.
This is the advice I give to every new person who joins my team. I also give it to new PMs who DM me asking for advice.
It may seem like obvious advice, but you’d be surprised how few people follow it.

--- END POST: Your first month as a new PM matters ---


--- START POST: ONDC will fail ---
URL: https://manassaloi.com/2023/05/06/ondc.html

tl;dr ONDC in its current avatar is destined to fail.
The food delivery business is a 3-sided market place with a thin profit margin.
In that thin margin you have to acquire users, retain them with coupons, build your fulfilment arm, spend on delivery incentives, run ML models to optimise pricing and allocation, including batching orders.
In a low margin business, optimisation is the name of the game. Feature differentiation fails because every delivered product will end up having the same features anyway.
So you spread the cost of acquisition and increase the LTV. You reduce the payback period by building multiple products.
You have to find the right group of customers for vouchers. You cannot give them to everyone. You have to figure out the best way to spend the demand spend budget for the week. And the supply spend as well. In the early days, even subsidising merchants. Remember, this is a market place, after all.
Figure out price differentiation. Figure out the best way to do batch orders. Cut costs further. Build your own cloud kitchen network. Reduce delivery costs and secure X number of orders by launching a subscription plan. Then customer support, of course.
All of this on top of running an ops team.
And running a tech team.
And running ML models, which has a lot of infrastructure costs associated with it.
ONDC cannot manage all this by charging 2-4% commission per order. It is insane how people are praising it just in the name of patriotism.
I have been writing about food delivery businesses for years.
This
was written 4 years ago. I was betting on Swiggy then. Still am. For them the only missing piece is the integration of Rapido to further optimise the utilisation of supply. I am not sure why this has not been done yet.
If you are an ONDC bull, you can build a business model for CM1/2/3 and EBIDTA for them. So many on-demand companies have gone public and their data is easily available.
For a fully integrated delivery model we already know the economics. If you unbundle, does it lead to a cost advantage? I don’t think so.
All the players in the food delivery space today are vertically integrated. The acquisition of customers and drivers, the discovery of food, the payment and the delivery all happen on the same platform. By driving efficiencies across the value chain, they squeeze out some of the already low margins.
If you break the chain and have multiple players for each activity, does that further erode the margin in each part of the chain? Or does it have the effect of greater efficiency and an improvement in margin? I would say it is the former. Wait and see.

--- END POST: ONDC will fail ---


--- START POST: Careerists vs Learners ---
URL: https://manassaloi.com/2023/04/13/careerists-learners.html

Learners are people who have a passion for learning and are driven to constantly improve themselves with each passing year. They make decisions based on whether they are growing, not just at the organizational level, but also in terms of their personal growth.
Example. Becoming a GPM from a Senior PM may be a promotion for you, but the question is whether you are actually capable of handling the new role of managing PMs or just filling a gap due to the demand for more managers in the industry thanks to the 100 odd unicorns being born in this country and there was more demand than supply? Something to ask yourself.
Careerists tend to focus on the optics of their careers rather than on learning and becoming better at their craft. Every decision they take at work is through the lens of whether it will help them in their next promotion.
Both aspects, optics, and learning are important for career growth. You need to be able to sell your work as well as continue to learn and ship new things. However, it is important not to give up on learning just because you have reached a certain level in your career.
Optics may be beneficial in the short term, but in the long run, your colleagues and employers will be able to give an honest opinion of your work and abilities. And that will matter a lot when ref checks are done before someone decides to hire you.
It is up to you to take ownership of your career growth.
Many people blame their organizations, managers, and colleagues for their lack of career growth, but it is essential to take the responsibility for your career growth. While organizational politics can hinder your growth temporarily, if you continue to learn and work hard, you will eventually reach your desired level of success. During one-on-one meetings, I always focus on what the individual can change about themselves, rather than blaming external factors.
Thanks to my friend Gaurav who currently works as a Director and GM at Razorpay for candid conversations on this topic in the past.

--- END POST: Careerists vs Learners ---


--- START POST: Dear EM, ZIRP is over ---
URL: https://manassaloi.com/2023/04/12/zirp-ems.html

The Zero Interest Rate Policy (ZIRP) has had a profound impact on the corporate world, leading to the rise of a special type of Engineering Manager whose singular focus is on engineering, to the exclusion of “product” or “business” considerations, which they consider to be afterthoughts or necessary evils.
While it’s true that ZIRP, thanks to making the cost of capital free, made it possible for everyone to pursue their passion projects at work, it’s important to remember that companies exist to make money. Without a focus on business, there would be no money to pay salaries or fund these passion projects.
Unfortunately, even in my own company, some developers have reported to me that their managers did not promote them or give them a satisfactory salary increase because they were too focused on delivering projects that met business requirements rather than pursuing engineering perfection. This has to end.
This is not to say that engineering excellence is unimportant. However, when a company’s survival depends on delivering a project, it’s foolish to delay it because of personal ego or a devotion to engineering principles over business needs.
(Edited with the help of ChatGPT.)

--- END POST: Dear EM, ZIRP is over ---


--- START POST: The Balaji bet ---
URL: https://manassaloi.com/2023/03/25/balaji-bet.html

During covid, I had
read Tucker Max’s blogpost
that led me to endlessly worry about the future and what it might hold. I even considered buying land as a hedge against a future macro event like hyperinflation, another pandemic, or even a zombie apocalypse. It’s not an uncommon idea, especially in today’s uncertain times. Buy your own land. Grow your food. Even Sam Altman is a prepper and has got a bunker.
But then I started to think about whether I am actually the type of person who can survive and thrive in such a scenario.
As a self-proclaimed “techbro”, I already have outsourced a lot of my daily tasks and responsibilities. I rely on Urban Company to clean my bathroom, Swiggy to deliver my meals. So, if I was suddenly thrust into a situation where I had to be self-sufficient, would I be able to survive? The answer is No.
I don’t have the skills or knowledge to defend my land against aggressors, or to fight off others who might come after me. I don’t have the capability to grow my own food. I can’t survive without modern conveniences.
When I listen to
podcast episodes of Balaji
shouting about how hyperinflation will make the world reserve currency, the US dollar useless, and the banking system will collapse, and everyone will be out on the streets and what not, I just shrug now.
Yes, I can get some bitcoin, but the last time I tried P2P crypto transfer, HDFC blocked my bank account because they felt I was doing “suspicious transactions” and I literally gave up on crypto. Forget us, our parents will never understand self custody. So like most people they would also lose everything if the current financial system collapses. And if so many people lose everything, then will it matter if I have a few Bitcoins and a piece of land to grow my own food? Probably not.
So I am choosing to not stress myself. I imagine every generation has gone through periods when it felt like the world would end soon. But it never does.

--- END POST: The Balaji bet ---


--- START POST: Nobody knows ---
URL: https://manassaloi.com/2023/03/08/nobody-knows-svb.html

I met a friend this week. We were catching up after a long time. He works in tech, but is outside the tech bubble thanks to living in Canada. He does not hangout with techies much.
At some point I went into an hour-long rant on the macro environment. You can think of it as a summary of the last one year of All In podcast episodes.
His reply was: All this is fine, just tell me what you did with all this information.
My honest answer, which I was a bit ashamed to admit, was not much. My job is mostly the same. I still invest in indexes and FDs. For us techbros, all the Twitter threads we consume and the All In podcast episodes we listen to just provide discussion fodder for catch ups at Third Wave.
If I am being honest does anyone know how the collapse of SVB bank will impact the tech ecosystem in the long term? Nope. Everyone is guessing on Twitter. Playing the expert like with all macro events.
What about the Russia - Ukraine war? Who knows.
What will be the steady state interest rate? Who knows.
I have all the information available about the ridehaling business of Gojek. On paper I am the product head of it. And even I can’t predict with confidence what my completed orders will be for next week.
I don’t even know why my company’s stock goes up or down everyday, forget the entire stock market.
So Who knows
Another anecdote: When the stock market crashed in 2020, I was talking with a friend about whether to invest or wait.
I was looking at charts, a bad habit from listening to too many Animal spirits podcast episodes, reading all the analyst reports I could, thinking about historic multiples, while my friend was like “eh, the market always go up after it goes down.” and doubled down. And I missed the biggest buying opportunity in a long time.
So nowadays I just SIP. Mostly.
(Disclaimer: Not investment advice and all that)
So I find it interesting that within a day of a bank run people are writing Twitter threads on impact of the impact on SVB collapsing on not just the US startup ecosystem, but even India’s. And if this event will collapse the entire banking system.
No one knows.
Check out the last 2 years of prediction threads of Bill Ackman and David Sacks.
VCs who deployed their entire fund in less than a year during peak ZIRP on shitcoins and BNPL startups are now writing threads on managing risk. I find it funny.
Too many people are writing prediction threads currently and creating FUD on twitter and yes, you can read these threads, but I doubt it will do you any good.
Note: I wrote this post as a Twitter thread on the day of SVB bank run. I have been lazy lately. So publishing it at a later date.

--- END POST: Nobody knows ---


--- START POST: Local vs Global maxima ---
URL: https://manassaloi.com/2023/02/25/local-global-maxima.html

Here is the framework I use to assess the performance of a PM in my team
Are they in line with the expectations of their level? (Next Level if they want to get promoted)
Do they own KRs (at company level or at their product group level)?
What has been their contribution to the achievement of these KPIs + other Must Deliver Initiatives (MDIs)? How did they deliver their projects? What are their peers saying? Check 360* reviews for this.
But what I noticed is that all of these are things that you would use to measure someone so that they can reach the local maxima (be it in their org or their company).
Local maxima = the maximum amount of growth in your org or company
Growth can be defined however one wants.
But there are a lot of factors at play in a company: Your growth or lack of it can be due to leadership changes, random reorgs, local politics, optics and and the like.
So I started thinking about global maxima too instead of just local. I want my PMs to not just optimise for their next role in my company, but also benchmark themselves globally.
A question I ask often: Where do my PMs stand when benchmarked against the best PMs in their peer group?
If a PM in my team leaves my team and to join another company, would she get hired at the same level or would she get a bump in terms of both role and salary? The last PM in my team who joined Gojek as a first time PM, and had worked with me for 2 years, joined as a GPM at another Indian unicorn. I want exponential growth for all my PMs.
This local vs global maxima exercise has helped my create career development plans for my PMs and push them beyond the comfort of competing for the local maxima.

--- END POST: Local vs Global maxima ---


--- START POST: Hard times ahead for the average PM & PM Manager ---
URL: https://manassaloi.com/2023/02/24/hard-times-ahead.html

In recent years, career progression was timely. Promotions and pay rises have been predictable.
Growing as a manager was also about executing a simple playbook: Hire X number of direct reports. Build an empire. Meet the requirements of the next level of seniority. Ask your manager for a promotion. If you don’t get it, jump to another company with not just a a better title, but also a 50-100% raise.
Over the next few years, as most start-ups go to the capital markets, fail to raise money and close down, the number of options for employees will be drastically reduced.
Not just the number of companies, but also the layers of an organisation will come down.
And most managers will ask: is the 5 year PM earning 50 LPA more productive than the 2 year PM earning 25? The majority of managers have never had to work with a budget.
In the past: managers were rewarded for building a senior team.
Now: Managers will be rewarded for doing more with less.
And the hiring budget is going to get smaller and smaller as time goes on.
Managers are not immune to this. A lot of managers are managers by virtue of the accumulation of years of experience. They are not necessarily good leaders.They will realise how hard the job really is when they have to inspire their team in a bear market, get more out of them when their reports don’t get the raises they used to, and are asked to do RTO.
Managers are going to start to be questioned about productivity. Is a senior manager who earns twice the salary and has twice the team of another manager producing twice the result?
A lot of managers are going to go back to being ICs.
The good old zero interest period is over. Brace yourself for tough times ahead.

--- END POST: Hard times ahead for the average PM & PM Manager ---


--- START POST: Gaslighting your manager ---
URL: https://manassaloi.com/2023/02/22/gaslighting-work.html

I remember the 2 years I spent as a developer. I had no interest in the work I did. I was extremely lazy. And I didn’t doubt that I was going to quit my developer job soon.
At one point I was working on the back end of a profile service that was being developed by my team. Every day I would come to the standup and say shit like: “Yeah, yesterday I wrote the API to get the name from the database and return it”. The next day it would be like “today I was working on address”. It was a simple GET call to return all these fields collectively. I just wasted time. Because I could. And the TL was a friend of mine. So I knew he was not going to call me out.
I have found myself telling the above story to a lot of people in recent times. I know what I was doing was wrong. But I was severely underpaid and my excuse was that it was my first job. And I was only doing it temporarily. But I see a lot of people who are extremely well paid pulling these shenanigans in the workplace. These are developers with almost half a decade of experience in building software. Up until last year, no one really cared about that. Anything goes in a world of 0 interest rates. But the world has moved on. And it is of vital importance that we see the writing on the wall. Gaslighting technically incompetent managers is all fun and games. Until they start questioning every work estimate you give. Not every project takes a month. They know it. They know it.
Don’t do what I did. Do better.

--- END POST: Gaslighting your manager ---


--- START POST: Be very worried ---
URL: https://manassaloi.com/2023/02/20/pms-shock.html

A lot of people, especially PMs, have been set up for failure over the last 5 years.
Back in 2014, As an IC PM with <1 year experience, I had to
Manage multiple projects
Define the product strategy
Design flows (visual designer was only for high fidelity artefacts)
I even had to do sales calls and customer support
And, finally I had to be ready with all business metrics/ do an RCA if any of them were down whenever I had to meet my CEO to discuss business updates.
Basically, it was me and about 5 other devs who were building an entire product. And I had to work on Saturdays because the front end devs were busy working on the core product during the normal working week and I was working on a new product line that did not even have a dedicated front end team.
Yesterday I was giving feedback to a PM on why I didn’t think she was ready for a more senior role. I felt this person was mostly executing projects and not thinking long term/ did not contribute to strategy. This person felt otherwise. In her mind running a couple of projects was more than enough to warrant a move to the next level, which is actually an HOP equivalant level in my company.
There has never been a time when people have made so much money for so little work. When the madness dies down and everyone has to actually earn their pay, people are in for a rude awakening. This is a wake up call for all. Including me.

--- END POST: Be very worried ---


--- START POST: Should you sign up for a PMS? ---
URL: https://manassaloi.com/2023/01/20/pms.html

A few friends texted me recently for advice on signing up for portfolio management services.
Here are the slightly edited replies to what they asked.
Answering a friend who asked if it makes sense to use X, a PMS that charges a fixed fee:
The performance of X is not bad. But what worries me is that, in the long run, they may not be able to beat the market. Most portfolio managers don’t, over the long term.
Their content is amazing, though. But does good content have any bearing on superior investment performance? There is no data in favour of this.
The best advice I’ve found from reading a lot of investing content is that you can just invest 33-33-33 in Nifty, Nifty Next and Nasdaq/ S&P.
I am spread across all 4 as I am of the view that S&P will outperform Nasdaq as tech stocks will underperform.
HNIs are opting for PMS because they give them access to services that are not available to the common man.  Pre-IPO exposure. Deals in crypto. You can get these from JP Morgan. I am not sure that X can do that. What X can do, however, is invest on the basis of a strategy that you yourself may not be diligently following because of emotions/macro/recency bias. And of course people generally don’t like to think about their finances. They want to outsource it to someone who can take care of it.
For someone in their 30s, you can simply choose to have 70% in equities and 30% in debt. That is the conventional wisdom at the moment. To put 100 - age in equities. I am very conservative when it comes to investing and my equity exposure is far lower. I also invest a lot in FDs, with FDs yielding close to 7% at present.
Reply to a friend who asked if it makes sense to use XYZ, another PMS that charges based on performance, x% of the profit if they generate more than y% of the return:
It is all about the expected rate of return.
Let’s say you outsource your entire portfolio to XYZ because you don’t want to think about your finances.
Let’s have a look at your return on investment on the basis of a few different scenarios.
The stock market does really well over the next 20 years. And XYZ beats the market handsomely. It generates enough alpha without a lot of beta (so that you can continue to have confidence in it and not have to go through what the ark investors had to go through). In this case, you’ll be more than happy to give away x% of the gains. After all, you would not have made as much money with a passive investment strategy.
The stock market performs well. XYZ does well but not by much. They both go over the y% mark. But you would pay x% of the gain because they exceed the y% return threshold. In this case, you are giving away more money. And after fees, your return may not actually beat the passive investment. Would that satisfy you?
The stock market and XYZ both do not go up more than y%.
A bear market in which both go down a lot.
The stock market is flat and so is XYZ for a long time.  Howard Marks calls this the 3rd sea change XYZ would probably take on more risk to justify its fees. Otherwise, investors would have an exodus. And in the end, your losses could be far greater than the stock market’s. Look at what happened to Ark’s investors.
Actually, now that I think about it, this is also true of A and B. If the market itself is doing well, XYZ might still try to take on more risk because they have to justify their fees. Look at what Tiger Global, a “hedge fund”, has done. They went full YOLO in the biggest bull market in recent memory. Now they are down. A lot.
So be careful. Think about the expected return under all scenarios. You are only thinking that you will pay x% if they return y%, basically 1 and 2 scenarios, but you also have to think about 3, 4 and 5.
Disclaimer:
This is just my opinion. I am not an investment professional. Do your own research.

--- END POST: Should you sign up for a PMS? ---


--- START POST: Twitter's view counter ---
URL: https://manassaloi.com/2023/01/15/twitter-views-ia.html

I shared the above on Twitter when I noticed that the views counter had been moved to a new position. A lot of people joked that I was putting more energy into this than even Twitter’s product and design team. This was probably a decision taken on a whim by Musk and executed by some poor designer who had no other choice. Regardless, I still want to show off my understanding of Gestalt principles. Therefore, I am posting it here on my blog.

--- END POST: Twitter's view counter ---


--- START POST: Reflection on 2022 ---
URL: https://manassaloi.com/2022/12/25/reflection-2022.html

I did not set
personal OKRs
for 2022,
similiar to last year
.
I did create a list of things I wanted to do for 2022. The list changed has changed a few times over the year, depending on what I wanted to focus on. This is how the list looks today:
Gojek (Highest priority)
Stretching (Want to improve my mobility)
Evening walk (Was not consistent with this)
Football (Was regular for months before hurting my knee)
Gym (Started working out at home after my football sessions ended)
Yoga/ Mobility exercises (Started this in December)
Procreate app (Was consistent in early 2022, then gave up)
Figma (Decame decent at it thanks to hours creating memes)
Photography (Took up in the 2nd half of 2022)
Poker (Monthly home games)
Master copywriting/story telling (Wanted to do this, but could not spend a lot of time on it)
Photo editing (Learned Lightroom)
Learn swimming (Wanted to do this in Q4, could not find the time as work became hectic)
Note I have not put things like reading in the list above because I feel I am already quite proficient at it, and don’t need an item in the list for that.
There are a lot of things I did like buying a PS5 and winning Div 1 again on Fifa 23, but those were not priorities and hence not captured on this list. A few things very high up on the list, but later got dropped include angel investing, industry analysis, and potential side projects.
I try to come with a mission statement for the year. This year was “2022 is the year to get creative, get fit, and explore new things.” Whatever that means. Another thing to keep me focused.
Middle of the year, I wanted to get more structured around my goals and came up with themes. The themes/priorities for me were body, money, adventure, photography/art, and a random bucket.
Body
Regular football 2X / week (Did this)
Sub 20% body fat (Failed I think)
Complete fitness rings on Apple watch daily (Somewhat)
Run a 5k race (Missed)
Money
Do 1 thing not related to day job (Started angel investing, realised it is not my cup of tea)
Angel invest in 3 startups (Ended up with 5 investments)
Turn 1 lakh in crypto to 10 lakh challenge with friends (Gave up when I remembered I am not a trader)
Adventure
Europe backpacking trip with wife (Did just Turkey)
Do 5 trips with wife (Done)
Art/ Creativity
Take better photos (I definitely think I am a much better photographer than what I was in Jan)
Design 3 apps just for fun (Missed)
Do exercises from the Art of noticing book (Did a few, mostly a miss)
Random
Get private Health Insurance (Had been ignoring this for a long time, so finally got this done)
Sometime in the middle of the year, I had to again explicitly write down what I was willing to give up on to focus on the things that mattered. This was the list of non-priorities:
Angel investing
Twitter
What’s next after Gojek? (I decided to continue with my current role after my
career reflection checkpoints
)
Fifa
Crypto
Writing (Far fewer posts in H2 compared to H1)
Now let’s get to the actual reflection.
2022 recap:
(Captured on 25th December)
Writing: 117 posts (original blogposts as well as book summaries. Down from 2021)
Reading:
~114 books.
Worked on a lot of
high impact projects at work
.
Given the responsibility of running the entire portfolio of ridehailing products of Gojek. Later got GoSend, Dunzo of SE Asia.
Got a PS5. Won Fifa 22 and FIfa 23. Was a backseat gamer for a lot of RPGs played by wife.
Got into a lot of new board games: Catan, Coup, Loveletters. I like Loveletters the most. Fast, and fun.
TV series recommendation: Wednesday, The Bear, Cyberpunk: Edgerunners.
End of Year Recommendations:
Fiction:
Lonesome Dove series (Nothing comes close)
The Stormlight Archive series
11/22/63
Project Hail Mary
The Mistborn series
Non Fiction:
The Elephant in the Brain
Four Thousand Weeks
Good Strategy Bad Strategy
Istanbul: Memories and the City
The Power Law
Best <1000 Rs purchase made this year: Streaks Habit Tracking App
Best <10K Rs purchase: Shower filter for hard water (Should have bought this much earlier, my hair would have thanked me)
Best >10K purchase: PS5 (should have got it much earlier)
Monthly highlights below.
January
Spent 2 weeks working out of Guwahati. Longest period spent in my hometown in a long long time.
Took my family to Pobitora Wildlife Sanctuary where we did a Jeep Safari.
Got CCTV set up for house. My parents are getting old, and I was concerned about their security.
I decided to get the new Infinia credit card because I wanted an add on card for my wife, and thought might very well upgrade the card if I am applying for a new card. I was using Diner’s earlier. HDFC has cut the benefits of the card by a lot and I would now recommend to not bother with this card. I am too lazy to apply for a new card. And like to keep my finances simple, so will probably continue with this one. It is the only credit card I use.
February
Started Dhaniya ventures whatsapp group and got some 80+ founders, angels, and VCs to join. Within a month I realised I hate the community aspects of running an angel investing group and the group died a slow death. It was a very good MVP in case I wanted to do a syndicate later or join a VC firm.
Invested in [Redacted startup] and [Redacted startup].
Got an apple watch. It is worth the money in my opinion.
Started fitness competitions with friends thanks to Apple watch.
Started advising a few startups, including the portfolio companies.
Bought Streaks app.
I live my life using the app now
.
March
Restarted playing football. Thrice a week, mostly in HSR.
Did a few figma courses on Skillshare.
Started a regular stretching routine. Have managed to stay consitent with it.
Too over the twitter account of a friend because I wanted to see if I can build a brand for another person. Killed it. Grew his account from 100K month impressions to 1.4M in 30 days. But I got bored after a while and we both realised that we were not bring autentic and stopped. It was fun to do
railway station announcement tweets
.
Bought fifa 22 after resisting for months.
Hosted poker at home after a long time.
Started listening to audio books. Realised I don’t enjoy audio books.
[Redacted startup] investment.
Played football 4 times a week. Realised 4 times is too much at my age. Got back to 3 times a week.
Went anon on Twitter. Changed my username. And started mostly shitposting.
Created a proper night routine.
April
Got gifted an apple watch by friends whose startup I was advising. I never really charge for gyaan. This time it was a surprise gift. So accepted. Gave it to my wife who rarely wears it.
Worked from inlaws’ place. I love Coimbatore a lot. I might even consider settling in this city when I am old.
Did a stand up comedy course on Skillshare. I have been writing jokes on social media for a long time. So wanted to explore it a bit. Dropped it when I realised I wanted to focus on other things.
Traveled to Thrissur.
Took a short vacation in Kochi.
Hit a major milestone when it comes to salary.
Gojek IPO’ed.
Started taking Photography seriously.
Spent a lot of time learning Lightroom.
Took some surreal art courses on Procreate.
Played with random strangers on Playo for the first time. I realised Playo ratings gave me anxiety.
Got rid of our cook. My wife makes amazing food and our goal is to become better at it.
May
Got my Passport renewed. Was such a smooth experience. Felt better about India’s future.
Did some character illustration courses.
Took football training with a coach. Left after a few sessions as we could not coordinate our schedules.
Played football 6 days a week football (5 matches + 1 training session). Just wanted to push my body.
Got health insurance.
Officially became product head of ridehailing.
Came up with
new work out system
.
June
Got sucked into playing FIFA seasons. Went till div 1. Gave up when I could not win the title.
Tried to get better at the Procreate app.
I named this the month for learning photography. I consumed a lot of books. Also took photos on my iPhone.
Got my first mirrorless camera - Fuji’s XE4 after I decided to double down on photography.
Started weekly routine of getting Kerala ayurvedic massage + Sauna. Continued for a month or so and then lost the routine.
July
Went out for my first street photography session using the XE4.
Decided to go a trip to Turkey. Started immersion: Reading books on Turkey, taking notes from the Lonely Planet guide on Turkey, Watched 100s of Turkey travel videos, and started working on the itinerary.
Created a few Fuji recipes to get the “film camera look.”
Started weekly poker night at a friend’s place.
Had my highest win in Poker when it comes to cash games.
August
Travalled to Indonesia for the first time since Covid started.
Missed a flight for the first time. I did not realised Monday mightnight flight means you have to leave on Sunday. Check the dates carefully folks! Don’t be a dumb dumb like me.
Created a personal playbook for international trips.
Went on a street photography tour of Jakarta with a local friend.
Attended an immersion session organised by our researched team that had us using all available transport in Jakarta. Goal was to travel like a local and not just use Gojek.
Took over additional responsibility of the GoSend product. Logistics is a new space for me, and I am enjoying learning about a new space.
September
This was the month of novellas. I read a lot of them.
Turkey was nice!
Did daily walks of 12 km for multiple days.
Spent a weekend in Gurgaon.
Took some 1500 photos in Turkey!
Started tracking calories consumed on Lose it app.
Started sharing photos I take for the first time.
October
Parents came over to visit for the first time in Bangalore.
Started body care routine.
[Redacted startup] investment. Was my 5th angel investment. I will be pausing angel investments.
November
Started going to out in Bangalore more. Travelled to a lot of touristy places. Realised you should check out your own city first before planning exotic travels.
Won Fifa 22 Division 1.
Bought an iCloud subscription as I needed to store more photos.
Played around with a few AI products. Have to decide if I want to get into this like I did with crypto last year.
Got a PS5. Money well spent.
Diversified beyond my usual asset allocation by buying Tbills.
Started working out using the Fitbod app.
Took up coding again. This time focus will be on front-end so that I can make more changes to my website.
Melatonin strips for sleep. Helpful for those where days you are stressed or not getting sleep easily.
December
Started doing spin cycling workouts again. I have an indoor cycle that I rarely use. I love the workouts and plan to do them more.
Took a lot more RAW photos instead of JPEGs with Fuji recipes.
Won Div 1 in Fifa 23.
Got a pigeon net in the balcony. No more pigeons shitting over my clothes.
Christmas vacation at Coimbatore. I love spending time at my inlaws’ place. Spent my days playing board games: Coup, Love letters, Catan.
Got a cocktail kit and spent the holidays preparing cocktails for my in-laws.
Realised it is finally time to grow up.
Reflections:
2022 was a great year, both personally and professionally.
A lot of
firsts
.
Questions I am pondering:
How can I make more memories?
Is my life story-worthy?
How can I increase my baseline happiness?
A lot of friends got married and moved outside Bangalore. Some had kids. With each passing year, the number of people I talk to regularly and visit become fewer.
I guess this is a part of the growing old experience.
.
I never really grew up when it came to dressing and acting like an adult. I am quite raw. One glance at my Twitter feed will tell you that. Also, a lot of people who meet me for the first time ask me if I am still in college. This is not good for my career growth. I need to start acting my age. Look and act like a potential exec. What makes it hard is that I hate fashion.  I don’t care about what I wear. I also hate coming on camera during Zoom calls. Furthermore, I am quite blunt when it comes to communication. No one has to guess what is going on in my mind. I don’t do a lot of small talks. I hate to say it, but I think a lot of these things will hold me back. 2023 is when I will try to fix all of these.
I worry that I will fail in the above task. Even now I am battling with 3 shitposts that I want to post on Twitter, but I know I have to start acting my age.
What I will miss going forward is posting a shitpost that had been brewing in my head for a long time, getting it out of my head, and then having like half a dozen friends send it to me on Whatsapp, appreciating the tweet.
My ego is tied to me being funny and coming up with original takes on things.
I finally tried different asset classes. Diversified my portfolio a bit. I still hold a lot of equities and my net worth is still tied to Gojek stock.
Failed to create my
own money rules.
. Will do this in 2023.
Could have traveled more. I think work from home will end sooner than we expect. I should have probably done more in the last couple of years when it comes to exploring new places.
I lost a bit of money in the stock market. I went heavy on FANG. And tech stocks crashed this year.
If you check my last year’s reflection, I was lamenting not having bought more crypto. My laziness saved me a lot of money.
I hate spending time with people who engage in dick-measuring contests and judge others based on how much they make/ what is their status. I would rather spend time with authentic people who talk about real things and not how much they spent on a vacation on “ a property” in Goa. Have you noted how people have started calling hotels properties now?
I will probably write even fewer posts next year. As you grow in your career the cost of writing some dumb post that offends someone is far higher. “Being real” is just good on paper. Who knows, there might not even be a reflection post next year. If I can’t be authentic and write what is on my mind, then what is the point of having this blog?
Getting more plants is always a good idea. So is gifting things and surprising your family/friends.
Health becomes an even bigger priority once you enter your 30s. Back pain becomes common. I get injured far more now. And I do
regret not picking up a sport earlier
. I spent a lot of this year building healthier habits.
Tracking what you are eating help.
Start with just 5 mins. Want to meditate but afraid to commit to an hour-long practice? Just do 5 mins.
I am proud that I took the decisions that optimized my long-term happiness and growth. One example is not continuing with angel investing when I realized I don’t enjoy multiple aspects of the job.
I think 2023 will be even worse for the tech industry. Time to buckle up and grind harder.
I still suffer a lot of angst because of the constant battle between my need to matter vs not seeking status. An advice tweet that helps others and leads me to think that my thoughts/experiences matter also results in ‘likes’, ‘followers’, and of course rude comments from random people on the internet. I want people to read what I write, and I would be lying if I said I don’t enjoy the dopamine hit from 100s of people liking my tweet, but I also hate internet debates and I don’t want to judge myself based on vanity metrics like followers count and how many likes my latest tweet got.
Most people are torn between the novelty of the new and the need for structure and constants in their life. Hence you will read about unhappy travel vloggers who in spite of what their Instagram reels say can’t wait to go home. While people in smaller tier 2 towns who daydream about the hustle and bustle of a city like Mumbai/ want to travel the world. The key is to find the right balance for you.
Neck pain sucks.
You have to make a lot of big decisions in your late 20s and early 30s and it is honestly scary. There is no correct choice. You are on your own to live with your decisions.
Managed to cut down on Twitter. Finally. I now post like 30 tweets a month, compared to 600 beginning of the year. There were months when I did not even post a single tweet. My views have gone down. My follower count has remained stagnant. Twitter was also the way people discovered this blog. But I am happy I don’t spend my time arguing with people online, and finally managed to decouple myself from my Twitter identity. For now, I don’t want to play online status games. Later? Who knows. Maybe once I have made enough money.
Planning to use Twitter mostly as a customer support portal going forward.
Maybe one day I will create a tab on this website that acts as a proxy for my Twitter profile.
I focused on the
list of things that make me happy.
Spent a lot of time re-reading summaries of books I have read in the past.
I removed all photos of mine from google search.
Might become even more reclusive next year and say
No a lot
.
Nike Training Club app is amazing. Insane that it is free.
Darwin Nunez is an enigma.
I played a lot of football this year. Almost unbelievable to me considering I am quite bad at cardio.
I need to buy a chair with proper lumber support.
A lot of people spend their time on Twitter dunking on others for clout. Don’t be like them. I rarely QT people, but I did use to subtweet people from time to time. I am not proud of it and have tried my hardest to not be shitty towards others on social media. This does not count people who QT me or post ‘ackchuaally’ replies thinking I am some big account that won’t fight back. Big mistake. I am happy to reply to their snarky comments with even more venom.
There is no one right way to live your life. Writing an annual review does not make you better than someone who does not. QT’ing someone who shared their new year goals and acting like you are better because you live in the moment and don’t have goals does not make you superior either.
This reminds me of the time I used to hate Sahil Bloom. Call him a threadboi. I used to think “Aaah, anyone can write generic threads, such a loser.” It takes a lot of courage to put yourself out there. Having so many people dunk on you for your threads every day. Continue to show up the next day and write another thread. Another newsletter. I envy his consistency. I also listened to a few podcast interviews with him and found him quite genuine. He knows what game he is playing. I think a lot of the haters hate him because they can’t be like him. He is a successful dude who gets up at 4 AM and lifts weights. It is easy to mock his frameworks, QT him, and feel like you are better because you don’t have to get up at 4 AM and grind. He is doing him. You do you. Hating him just shows your insecurity. And most of you would gladly swap places with him if you could.
Your environment has a big impact on your habits. I love sweets, but I rarely eat them when I am in Bangalore. Compare this to Guwahati and Coimbatore where my parents and in-laws keep a variety of sweets and so many snacks in the house. It takes a lot of mental strength to not eat the third Kaju Katli of the day.
The reason I spend so much time thinking about my life and tracking every small habit and to-do item is not because I strive to be 100% efficient and to be a productivity robot. Yes, I want to get more out of my day. But what I desire even more is to live my life with intent. I will happily give up reading 100 books a year if I think another activity will bring me more happiness. I don’t want to set goals based on what everyone else is doing. I want to live my best life. Be true to myself.
I think there are like a dozen things I would have liked to write about in this post, but I worry about how people will perceive me once they read them. Several of my colleagues and close friends read this blog. So I have to be careful about what I share.
Don’t copy me thinking my life is perfect.
.
I got into Assamese songs big time. Try
this one
.
Started wearing shoes more.
I have hold on to a lot of issues from my childhood. They say ‘Chips on Shoulders Put Chips in Pockets’, but sometimes it is just better to let go.
As part of my angel investing adventures, and thanks to Twitter, I had the chance to meet quite a few successful people this year. I don’t think of myself as a name-dropper. And someone who ties their self-worth to the circles they hang out in. I still could see myself change. I found it difficult not to mention the cool person I met this week in discussions I was having with my friends. It was cringe-worthy. I had also developed an ego when my net worth crossed a certain number, and I kept shouting about how much I made whenever I wanted to make a point to my parents. I grew up in a family where people judged your self-worth based on how much you made. And how many properties you own. I never wanted to turn into my relatives, but I did. It took an evening with a close friend for it to register. And I promised myself to do better. It is not an easy process.
They say a lot of successful people are where they are because of their ego. And use their insecurities as fuel. I think this is true. Not sure if I want to be one of those people.
There are people who play status games, and there are those who play money games. For now I want to focus on making money and enjoying my life to an extent. There were multiple times in the last couple of years when I could have joined another startup for a
higher status title
, but I stayed back because I felt even though I did not have external status due to a fancier title compared to my role, I have a good charter and I am okay with how much I make. I don’t need to jump ship because almost everyone has done so in the last 2 years. This does not mean that I think titles are worthless, or that I am above status games. It is just that I have realised the folly of playing short-term status games and am optimising for other things in life.
There are people who don’t even buy tempered glass cover for their phones, and then there is me who is afraid of even taking his AirPods out for fear of losing them. I guess I will always remain middle class, no matter how much money I make.
I promised not to look at the stock price of my company once it became public and largely stuck to it. It still hurts to watch your net worth drop so much. I have remained surprisingly zen about it vs some of my peers who check the price every hour. I think it is because I have always considered my equity as paper money. But whenever I open our internal stock portal to check the value of my stocks, I mentally calculate how much I have lost since the last time I opened the portal, and what I could have bought with the money.
I re-read
the summary of Die with Zero
every few months this year. I was a FIRE advocate for the longest time. This book changed that.
A lot of my blog posts feel like free therapy sessions.
Want to do your year-end reflections? Try one of the templates mentioned
here
.

--- END POST: Reflection on 2022 ---


--- START POST: Paid apps ---
URL: https://manassaloi.com/2022/12/20/paid-apps.html

(Last updated: 29 April 2022)
I pay for the following apps:
Procreate
Lightroom
Streaks
Goodnotes
YouTube Premium
Hotstar
Amazon Prime
Loseit
Smart audiobook
Icloud
Ps5 Essentials
ChatGPT Plus
DeepL Write
In the past:
Waking up
Headspace
Skillshare
Stretching app
Fitbod

--- END POST: Paid apps ---


--- START POST: Fitness routine ---
URL: https://manassaloi.com/2022/12/19/fitness-routine.html

Instead of sticking to some strict exercise regimen, I have started to look at my routine similiar to how you would pick food items from a buffet.
Some days I do the same
posture reset exercise
multiple times, while on others I might do 30-40 min of “yoga”. Sometimes I might add
cycling
to my routine, while other times do strength training using the
Fitbod app.
For mobility I am currently using the following apps:
Streching app
Stretch Club
Nike Training Club
I pay for the and Stretching apps. I would say that for a normal user Nike Training Club is more than enough. I pay for Fitbod and might even renew because I want dynamic exercise plans. It is also the only strength training product I use. You might ask why not use the 1000s of Youtube videos for training? My answer is simple: knowing that I have paid for Fitbod makes me want to work out more. I know it is sunk cost fallacy, but this time I am using a fallacy for a good cause. For a long stretch in 2022, I played football 2/3 times a week. But with persistent injuries, I might have to cut down next year.
My source of record for all things training is my Apple watch. I log all my exercises there. Hope this helps get started on your fitness journey.

--- END POST: Fitness routine ---


--- START POST: Feel better in 10 mins ---
URL: https://manassaloi.com/2022/12/18/feel-better-5-mins.html

Are you someone who sits at your desk for hours?
Then try this
stretching routine at your desk
, followed by this
neck drill.
Your body will thank you.
You can also use the following mobility exercises from these apps:
Streching app
: I mostly do the knee routine from here as I hurt my knee playing football a few months back, and I am recovering currently.
Stretch Club
: Everyday I do the posture reset exercise from here.
Nike Training Club
: 10-Min Yoga Posture Primer NTC.

--- END POST: Feel better in 10 mins ---


--- START POST: Domination ---
URL: https://manassaloi.com/2022/12/17/domination.html

Strategy is all about choices. When it comes to growing a product, think in terms of which usecases, segments, or dimensions  your product can dominate.
Let’s take ridehailing for example.
Use case domination: School commute, weekend mall trips, work commute, random errands..
User segment based on behavior domination: Promo hunter, value seeker, premium business users..
Dimension domination: Speed, safety, price..
Region domination: Tier 1 cities, tier 2 cities, suburbs..
User group based on age and gender domination: Genz, working moms, college kids..
Time of the day domination: commute hours, late night..
Distance domination: <5kms, >5 kms, >20 kms..
Place of interest domation: Airports, malls, bus stops, railways..
There are many other groupings. The list above is not MECE complete, but a good starting point.
For a case study, refer to this thread on how
Doordash became the dominant food delivery platform in the US by focusing on the right segments.

--- END POST: Domination ---


--- START POST: Swiggy Genie's homepage ---
URL: https://manassaloi.com/2022/11/28/swiggy-genie.html

Analysis of Swiggy Genie’s homepage.

--- END POST: Swiggy Genie's homepage ---


--- START POST: Paying dall-e for nostalgia ---
URL: https://manassaloi.com/2022/11/05/dalle-nostalgia.html

One of my earliest memories is lying on a mat outside my house with my family. There was no inverter then. So whenever electricity would go out, we would all go outside and wait for an hour. No electricity meant no need to study. And we stayed in the outskirts of the city. So you could see the stars. I have been trying to recreate that memory for a long time. But my drawing skills are limited.
I tried with DALL·E. Yup, it is the first image. It is crazy how far AI has come. I would rather pay 8$ per month for nostalgia than for Twitter.

--- END POST: Paying dall-e for nostalgia ---


--- START POST: What did you get done last week? ---
URL: https://manassaloi.com/2022/10/11/last-week.html

All the PMs in my team have to submit a weekly slack update on Tuesday. The weekly update follows this format:
Weekly updates for Team X
Link to doc for collated weekly updates [This helps stakeholders go through past updates]
Project 1 [Color code to mark status]
One line status about the project [something like Deployed on Integration last week]
Overall progress status [X% completed]
Total story points [X story points in total for the project]
Name of people working on the project [name everyone working in the project from designers to devs to QAs]
Completed last week
List of a few items done
Continuing this week
List of a few items to be picked up this week
Highlight blockers if any/ if delayed then explain why
Other completed projects in the semester
Projects deprioritised/ parked
Tag relevant stakeholders for visibility
I love this format and would recommend everyone to use it.
More processes on how to run a team more efficiently:
How to run a product team

--- END POST: What did you get done last week? ---


--- START POST: Why remote work might end ---
URL: https://manassaloi.com/2022/10/01/remote-office.html

There are people who have a high level of energy at work. They take on responsibility. You don’t have to constantly follow up with them for updates. They are not off Slack for hours. They don’t take afternoon naps on workdays. These people will always thrive, whether on WFH or in the office.
Then there are people who think WFH is essentially a holiday. They won’t respond on Slack unless you escalate to their manager. They will be the end of remote working.
A lot of people are bullish on remote work. I am not. We are already seeing the narrative change from “remote is the future” to “this isn’t working, let’s go back to the office”. We are no longer in 2021. If companies like Microsoft, Apple and Google with record cash flows are making redundancies / freezing hiring / stressing about employee productivity, your 30% negative CM startup is probably thinking hard too.
You should think about it.

--- END POST: Why remote work might end ---


--- START POST: Expectations around dashboards for a team ---
URL: https://manassaloi.com/2022/08/01/dashboards-expectations.html

Great:
Items mentioned in Good + Have
definitions and dashboards doc
and map to all the relevant dashboards from there. It should have all input levers and output metrics, point out all the dependencies, and show how they are all tied together. This will help determine your
growth strategy
.
Good: Items mentioned in okay +
Have all the dashboards on Tableau (or any other BI tool).
If you, the PM, are going to a meeting, you should not need more than 15 mins to collect the relevant data.
Insights needed for showcase, monthly business reviews, product reviews, OKR updates should not take more than an hour.
RCA
should be self-served thanks to the existence of all metrics on Tableau. You should not need a data analyst to do RCA. And the RCA should not take more than 30 mins.
All dashboards  support slicing and dicing based on user segments, date range, service type etc. There are daily, weekly and monthly level views.
If you share the dashboards, any stakeholder can understand them without your or an analyst’s help.
You can arrive at insights looking at the dashboards without having to query.
Okay:
All feature launches are accompanied by relevant dashboards.
There are dashboards for the major metrics.
Note: Creation of all of these dashboards won’t happen in a day. If you are starting out focus on reaching the okay state asap and then gradually move towards great. I don’t expect the PM to create all these dashboards themselves. Most companies have an analyst embedded with product teams. The PM should work closely with them to get to the desired outcome.
Related:
How to run a product team

--- END POST: Expectations around dashboards for a team ---


--- START POST: Maybe travel more ---
URL: https://manassaloi.com/2022/07/14/travel-more.html

Travel more when you are young.
Looking back at my 20s, I don’t remember much about the 100s of projects I delivered, but I do remember:
Backpacking across Bhutan
Sleeping under the star lit sky at half moon beach in Gokarna
Almost drowning on the way to Maya beach
Rafting in Halong bay
Bus hopping from one beach to another in Sri Lanka
Getting punched by a random stranger in Thailand
Chennai monsoons, because I used to go there to meet my gf/ now wife
As you grow older, you spend a lot of time in nostalgia. It is hard to be nostalgic when you don’t have any memories and each day overlaps with the other.
Also as you grow older, and senior in your career, you don’t have the luxury to travel. I now travel once a year maybe, even less. Even then I am on zoom most of the time.
It is okay.
It is my choice
.
But I feel glad that I spent a lot of my 20s travelling, writing about it, and also took a lot of photos.
In your pursuit for the next level in the job ladder, don’t forget to create memories.

--- END POST: Maybe travel more ---


--- START POST: Gojek Shamelist & learnings ---
URL: https://manassaloi.com/2022/07/12/shamelist-gojek.html

I generally share this only once I leave a company. This time I am making an exception. With my company going public, I can’t share details around specific features or metrics anyway. Also note that most of these are from my first year working as an IC.
Shamelist
I was hired to lead a new product charter: [charter X]. In the first month: I worked on the designs (as I had no dedicated designer), created the dev org (as developers reported to me in the absence of a TL), and even came up with architecture diagrams and API design. What I did not do? Validate if the product roadmap even made sense. When I joined Gojek the strategy for the BU was already frozen, and so was the roadmap. I should have done my independent research instead of just relying on existing stakeholders’ opinions.
Went to meetings with various stakeholders and tried to convince them to support the new BU without asking whether the new BU had exec buyin. Always think about the machinery.
I was extremely blunt with my views on the quality of the team and the product direction. [After a reorg that happened 2 months post my joining, and after we shipped the initial MVP, I decided to move to Transport as the 3rd PM in the org].
Missed involving
in the [feature X] discussions from the very beginning. This meant we needed more meetings later on to get their buyin.
I was given the ownership of the entire [X roadmap] and asked to ship half a dozen features within 2 months of joining the Transport team. I could have pushed back, but I said yes to everything.
Missed few edge cases for [feature X]. To fix this, started involving designers even earlier in the process. Eventually created a checklist of edge cases, fallback, and error states that we went through for each feature release.
Missed a few fallback scenarios in the [feature X] flow.
Did not make the feature toggle for [feature X] configurable based on version number.
Could have shipped a better [feature X] web UI.
Did not follow up with
enough to close
.
Found one bug in the [feature X] flow the day before the big launch of our [X roadmap].
Sent a stinker email to
with a lot of senior people cc'ed. I was upset at the person committing to a feature and then going back on their word. But I missed the first rule of corporate politics: I tried to argue with a person who was like 3 levels above me in the ladder and was at the company for a far longer period while I was a newbie. [I should have known that it would not end well. Over time I learned to control my emotions at work.]
Missed an edge case on [feature X] that would have let drivers to game the system. Thankfully fixed it on time. Started involving fraud teams going forward and working closely with them on potential fraud scenarios.
Iterated on [feature X] version 2 design after development started. Should have pushed back strongly and only done it in version 3.
Lost my cool during discussion with an Android dev on whether the app should crash if the backend does not honor the API contract. I should have explained my POV better. If you are leading a team, you can’t afford to be seen as someone who gets upset during meetings.
For the first 6 months I was very focused on setting the bar high for the team. This got interpreted by a few team members as me not being happy with anything.
Missed capturing a few launch decisions on paper. Learned never to rely on implicit verbal sign offs.
Someone committing to something does not mean them committing to the delivery of that thing by a set date. Not realising this led to a major escalation.
Did not escalate design bandwidth constraints for a major feature launch.
Missed backward compatibility for a feature.
Missed edge cases around moving to a new activity card instead of dialog card for the [feature X] flow. Even though this can be seen as a miss by the tech lead, it was also my responsibility to go through the flows carefully and highlight gaps even in the tech spec. Yes, another example of extreme ownership that I want not just myself, but my team to follow.
Should have caught a case around retry failing in case of back button press for [feature X] flow.
We did not use to highlight what copy we hardcoded vs what was coming from the backend vs what copy could be experimented upon because it was coming from the experimentation platform. We started capturing this in the tech spec much later.
Missed putting a flat on a particupar API response that led to modded apps using
.
Did not align all the stakeholders on the goal behind the [feature X] feature.
Every feature should have one single DRI, even if multiple teams are working on it. Not making it clear led to a lot of last minute blame game when we released
. [I became more strict about ownership of services as well as features going forward. No one owning the overall delivery means no one being accountable.]
Did not get all decisions taken on the call masking feature captured in the DACI section of the product spec.
Tied to do a redesign, moved to a new design system, rearchitectured the front end codebase and also released multiple features - all at the same time. [Dumb dumb idea.]
Roll out should have been planned much better for the redesign project.
Dropped the ball on a decision on how the new address pill would look. [Should have pushed the team to think through the edge cases more.]
project looked fine on the surface but lacked the rigor I wanted in my projects.
project needed more data before kick off with
. [Always always over prepare before big meetings.]
Should have created a dedicated spec on the Address pill design. The component was not well thought out. The issue was that we hid the complexity of this feature under the mega project that was Aristos (the big redesign of the entire transport flow).
Should have pushed for UT much earlier and not waited till the Alpha.
Should have avoided debating with multiple people on design decisions in the public slack channel for the project. It made it seem like we were not clear on the design direction. [Started debating and closing key decisions on private channels instead].
Missed adding a couple of analytics events for [feature X].
Should have pushed
more on decisions taken on [project X].
If a project goes on for a long period, people lose focus and productivity drops. [Always go for smaller milestones].
Did not have weekly BI and Research syncups in the first 6 months.
Was not proactive with post launch monitoring and updates. This took a long time to fix and something I teach PMs in my team from day 1.
Did not send enough updates for
project. This was a big miss considering the number of stakeholders involved.
Should have reacted early to the covid situation and planned nonserveseable flows much earlier.
Paused
project after just 2 milestones. Should have highlighted the impact more and pushed for more iterations.
Should have identified dependencies on [team X] for [feature X] earlier.
Missed adding the DACI table for [project X].
Took too long to close the milestones for [project X].
Took delivery of a few projects too seriously and ended up burning out the team.
Alignment on timeline for [project X] was not closed on time.
Did not get commitment from other teams on [project X] on time.
Missed planning the delivery of design assets for [project X]. Knowing the illustrations are provided by the central team and they don’t work dedicatedly with my team, I should have kept a buffer and also pushed much more to get the assets on time.
Did not work with [team X] on the testing plan and acceptance criteria for their side of the work. Even if it was work picked up by a different team, as the DRI of the project I should have made sure that these things were picked up by their QA team.
Should have got [team X] added as an external stakeholder and collaborated with them far more. [A team is either internal or external.] If external then follow up and set SLAs like an external team].
Should have pushed [team X] more on [project X].
Missed adding notifications to the scope for [project X].
Did not create all Asana cards for [feature X]. Assumed the other team would do the work because it was handed over to them.
There were two separate source of truth for scope of [project X]. [Always have the product spec as the source of truth].
Should have involved Tax, Fraud and  Government relations teams on [project X].
Should have created the migration plan for [project X].
Missed deloyment a few config updates during roll out of [project X].
Should have asked for stricter timeline for [issue X] from [team X].
Security team should have been involved much earlier for [project X].
Missed fallback for default icons for [project X] launch
Did not create a dedicated war room for launch of [feature X]. It was a big launch and we needed all the stakeholders together in a room in case something went wrong.
Missed kick off with with QA and regional teams for [feature X].
Did not have principles to decide the structure and milestones as well as work allocation for [project X].
Did not push [PM X] in my team to work on the [project X] plan earlier.
Internal then external was not followed for [project X].
Should have posted more insights on [channel X] on Slack.
Learnings
Create influence.
Create your own identity. What do you want your team/yourself to be known as? Data driven / super technical/ user experience experts?
Send regular updates to stakeholders.
More face time with leadership.
Tailor content based on who is reading.
Highlight wins as well as issues in real time.
Take extreme ownership.
Regular 1-1s with manager. The 1-1 is for you. Don’t skip them.
Sometime speaking less is the way.
Be crisp.
Do the fix then do the RCA.
Know the agenda of stakeholders.
You don’t update leadership, every call with them is actually a sales call.
You can’t fight all battles. So pick your battles wisely.
Related:
Organizational learnings
Build Measure Learn (for you)

--- END POST: Gojek Shamelist & learnings ---


--- START POST: The VC job ---
URL: https://manassaloi.com/2022/06/29/the-vc-job.html

I have had a few inbounds from VC funds for potential job opportunities over the years. I also think tech investing is adjacent to working in tech, and hence I met quite a few investors to understand how they think, their workdays, and their investment philosophies.
I can’t mention any VC by name, but here are a few insights:
In many VC funds, the approach of each partner is different. Their is no single framework. Partner 1 in VC firm X might prefer investing only on strong founders with a track record while Partner 2 might have a thesis on a sector and invest based on that. If I was a founder, I would heavily research the partner I am pitching to, and tailor my pitch accordingly.
I saw the calendar of a VC (VP/ Principal level at a tier 1 fund) and he had meetings from 8AM to 1AM with very few open slots. We joke about VCs living the good life, but the truth is that they slog much more than the average PM or developer. Yes, they might not do deep work, but after the first few months 14-15 hours of calls and in person meetings takes its toll. This person was also telling me how you have to always put on the curious excited VC face, no matter what is happning in your personal life. Let’s say your father is down with Covid, but there is this call with the founder of this hot startup, no matter how sad you are, you have to show up and do your job. If you look upset, the founder might think you are not excited about the startup/ idea, and it might lead to you losing the deal, and in turn your shot at a partnership at the VC fund. It is a thankless job. There are ofcourse a lot of benefits to being a VC, but people see the glamour, more than the long hard slog that the job demands.
Framework of a GP at a tier 1 fund:
Founder’s understanding of the problem
Can they sell the product at a higher velocity once they raise investment?
What is the TAM and adjacent use cases?
Instead of selling at say 1 mil ticket size, can they find a smaller ticket size, say 30k to sell, and then upsell?
Is there a distribution advantage?
Can the founder learn how to build a successful product but also learn how to get distribution?
Quality of team
What is the GTM wedge of the company?
There are partners who are senior enough to wait and only invest in the best pitches they see while there are partners who rely a lot on outbound. Depends on whether the partner has the pull factor yet to get the top quartile founders to reach out to them.
One GP evaluates 20-25 companies per week. So potentially 100 companies a month. 1000+ over the year.
Another GP judges his sourcing ability on this metric: on deals announced each week how many he saw and formed a thesis before passing/ investing. Goal is to see as many deals as possible.
Ecosystem coverage is important for sector specific fund partners. A fintech investor would want to cover as many fintech startups as possible and would judge himself on startups:
he never met
he met but did not understand/have a view
he met and formed a view on
invested/ passed
changed his view and invested later on
VCs track interesting people in the ecosystem. A friend told me how VCs reached out to him when he quit his role as a Director at a hot startup. They even added his name to their database. These connections are useful for VC firms. Firms might:
hire them for their portfolio companies
pitch them on senior associate/ VP/ Principal roles
use them to source deals
use their expertise to do DD on startups
ask them to give talks to portfolio founders
Some funds are very bottom heavy, lots of analysts supporting a few partners, while others are top heavy, single analyst supporting multiple partners, while there are firms where everyone is a partner and share carry equally. There is no right way to run a fund.
Early stage and Growth VCs are very different in their philosophy around investing. I remember meeting a VC who does growth deals and he was shocked at the excesses in seed stage and kept saying the entire crypto market is a scam, while early stage VCs I met kept saying Growth VCs are no different than PE partners, focused only on numbers, and missing the “art” of venture investing.
All that matters is how much capital you are returning to your LPs. Very few firms generate consistent returns over the long run. A VC I met told me why they keep their fund size small. It is a feature, not a bug. If you do the math, it is very hard to return 3X on a large fund, especially in a market like India where there are very few liquidity events.
If you are interested in Venture Capital, you might want to check out:
Becoming an LP in an a16z fund
Thoughts on angel investing
Why angel investing is dumb
VC investment theses
The Power Law

--- END POST: The VC job ---


--- START POST: My favorite personal websites ---
URL: https://manassaloi.com/2022/06/03/favourite-personal-websites.html

Julia Evans
Angela Bang
Simon Griffee
Jonathan Verrecchia
Joel Califa
Tom MacWright
Carlos Matallín
Patrick Collison
Denys Zhai
Shantell Martin
Peter Bourgon
Nat Eliason
Kellan Elliott-McCrea
Adam Ho
Arun Venkatesan
Anton Sten
Stammy
Marco Cornacchia
Georges Duverger
Daniel Gross
Sam Gerstenzang
Sahil Lavingia
Andrew Parker
Ted Goas
Jamie Wong
Kevin Yien
Nikita
Tynan
Brandon Hyman
Johnathan Zhou
Jeremy Cai
Jonas Downey
Nathaniel Drew
Ryan Singer
Jeremy Stokes
David Hoang
David Perell
Lily Konings
Brie Wolfson
Kieran Parker
Femke
Ruha Benjamin
Jason Marder
Atharva Patil
Rob Hope
Yan-David
Brian Lovin
Maggie Appleton
Josh Pigford
Bruno Simon
Andy Matuschak
Dan Wilton
Bruno
Casey Caruso
Sheel Mohnot
A curated list here:
Personal sites

--- END POST: My favorite personal websites ---


--- START POST: Habits I am tracking daily ---
URL: https://manassaloi.com/2022/06/02/daily-habits-tracking.html

I track these habits on my
Streaks app
:
Go out in the sun [I feel if I even spend 5 mins sitting in my balcony, it improves my mood.]
Workout 30 mins [Football, stretching, yoga, and sometimes weight training.]
Meditate 10 mins [I probably do 2 times a week, keep missing this.]
5 min morning stretch [If I start my day with this, I feel so much better.]
Take vitamins [Easiest thing to do and mark one habit as done.]
Write less [Trying to be less verbose.]
Learn photography [I watch YT videos, read newsletters, and even take a few photos from time to time.]
Check if any bills due [This is so that I don’t forget my bill.]
No vertical relationships [Read Courage to be Disliked to understand this idea.]
Spend quality time with wife [Easy to do this when you are both WFH, but never want to miss this.]
Football on feet [A friend recommended this to me, keeping a football with me at all times.]
Live experience to experience [Have to remember to do new things.]
Be happy [Thanks Naval.]
Don’t rant on Twitter [Twitter is one thing I want to do less this year.]
The days I play football, I track these habits related to my game:
Analyse the game and add to my football diary [I do this with every new thing I pick up, check my Poker blog for context.]
Keep it simple [I started playing pretty late and just want to keep things simple.]
Stick to position [Otherwise I start running all around.]
Pre match stretching [So that I don’t get injured.]
Warm up on the ground [If I warm up with the ball for even 5 mins, I tend to play better.]
Cool down [I keep missing this.]
Related:
Forming habits

--- END POST: Habits I am tracking daily ---


--- START POST: 10 things I can't live without ---
URL: https://manassaloi.com/2022/06/01/10-things.html

I love the
10 things I can’t live without GQ videos
. Here are my essentials:
My kindle [Read mostly fiction before I sleep.]
Apple watch [Tracking calories burned.]
Iphone [Primary phone.]
One Plus 5 [Read most of my non ficion books on my phone, take notes, and also listen to podcasts and audiobooks.]
Apple Airpods Pro [To take calls during the day.]
One Plus bullets wireless [I don’t carry my airpods when I go out because I listen to podcasts/ books on my One Plus Phone.]
Mac Air M1 [Primary device.]
PS4 [How else would I crush people on Fifa?]
Dr Physio full body neck massager with heat [For massaging my legs and back before I sleep.]
Caresmith CHARGE Cordless Massage Gun [Post football massage.]
Full list of things I use here:
Uses This

--- END POST: 10 things I can't live without ---


--- START POST: How to create your roadmap ---
URL: https://manassaloi.com/2022/05/13/roadmap.html

Best resources on roadmaps:
Product Planning
How we build our Product Roadmap at Asana
how to build a product vision, test its viability, then over-communicate your short-term rolling, four-quarter roadmap
An Actionable Guide to Product Roadmaps (with templates)
On Writing Product Roadmaps
Product Roadmaps – an Essential Guide
The 666 roadmap
Where do product roadmaps come from?
#now, #next, #later
How to Prioritize a Product Roadmap
How to create a product roadmap: step-by-step guide and free template for founders
Related:
Vision, mission, values, and OKRs

--- END POST: How to create your roadmap ---


--- START POST: Being a fish at the Poker table ---
URL: https://manassaloi.com/2022/05/12/being-a-fish.html

I played with a really good Poker group in 2020 that included a WSOP top 3 cash out player. I lost like 30K over the month I played with them. Buy in was 2K. Here are my learnings.
Table selection: I was the fish at that table. Everyone else knew each others’ game. I should not have played so much poker without studying my competition first. I was distracted. Multi tabling. Did not take the game seriously enough while everyone was targeting me.
Bank roll: I did not have the bankroll of other players. I saw people go down 20K for the night and coming back again. I should have not played only if I was afraid of losing my bankroll. A few years earlier, I had won 1.5L by finishing 2nd in a Poker tournament on Adda52. Then I levelled up too fast and lost most of it. I was not supposed to be playing 7.5K buy in games where you can lose 20K by firing 3 bullets. It was reckless. After losing 70K in tournaments over a week I learned my lesson. And took out the remaining.
Lack of seriousness: In a room of sharks I should not have been multi-tabling. I was playing cash there + tournaments on adda. My strength is tourneys. I am shit at cash. First I chose to play in that room that had players beyond my level and I had not played with before + I did not take the table seriously. I was getting bullied post flop. I should have adapted. I did not.

--- END POST: Being a fish at the Poker table ---


--- START POST: Why angel investing is dumb ---
URL: https://manassaloi.com/2022/05/11/angel-invest-dumb.html

Back in 2020, I hosted a daily poker game. We played for months until we burnt out. We were joined by a new player Akash, a friend of a friend. He came in and crushed everyone. Crushed everyone. He invited me to come and play with his other group of players. So I did it. And I lost ~30K playing in the group. In the space of a month. Then I quit.
Akash was kind enough to tell me what it was that went wrong for me: Because my risk appetite and bankroll were too low, it was stupid to play at his table. People at this table would lose $20,000 in an hour, come back the next day, and lose the same amount. Sometimes they ended up making double of that amount. They did not get upset about losing 50K in one night. They survived the dips. And came back. Again and again. They were use to playing at those stakes.
I am
not a bad poker player
. I have made a decent amount of money, if you take into account all the tournaments and cash games I have ever been a part of. But I am not the kind of person who is willing to go all in over and over again until I have doubled up.
This is exactly what a prominent angel investor did to me once when I was playing at his table. He kept challenging me by going all in multiple times. He kept shouting that he would double his money in the next 15 minutes. I knew my poker bankroll was not equal to his. So I started to tighten up my game.
Over time, I learned not to play with people whose bankrolls were much larger than mine. The key to poker is table selection. And in life, too.
I also had a look at the graphs of professional poker players on pokerguru. Their stats are open to the public. For months on end, these pros would go down. They would go down by L10 - L50 before they would win a big tournament and break even. But what if you don’t have that one big tournament win? This is what happens to a lot of poker players. And they end up dropping out of the poker game. Yes, many of these players are staked. Without staking, it is very hard to survive as a poker player in this day and age. People might go on a heater and make a boatload and use the bankroll to play the stakes they want. But that is the exception rather than the rule. Most poker players are money losers. Even the best poker coach in India has a record of losing money.
Angel investing and poker are not dissimilar.
You need to have good bank roll management. You need to take a sufficient number of swings. Let’s say: Your average cheque size is 3L. That is the lower end of the spectrum. A lot more is invested by people who have made good money at this game. Even with a 3L check size, you still need to invest in at least 100 startups [similar to the 100 buy-in rule in poker]. You will have to beat the variance. The best player in this game, YC, is doing the same thing. So you need to have a bankroll of at least 3 Cr. I don’t have a 3 Cr bankroll lying around. And ideally, you should not have more than 5% of your net worth invested in an asset class that is so risky that it can easily go to 0. And yes, you can go on a heater like Sacca, but most investors are not going to go to 0.
Most startups die. And my sample size would be too low. As I don’t have 3 Cr to bet. I feel till now I have only invested the money I can afford to lose. There are
other benefits to doing angel investing
. But it is a dumb idea to invest in startups from a strictly ROI standpoint unless you can investment in 100+ of them.
So think carefully before starting this journey.

--- END POST: Why angel investing is dumb ---


--- START POST: Presenting to execs ---
URL: https://manassaloi.com/2022/05/10/exec-presentation.html

Tips on presenting to CXOs:
Your ask from leadership should be clear by the end of the meeting; work backward from that ask.
Don’t ask for a dozen things. Ask for the most important thing.
Presentation should cover what execs care about the most.
Any meeting with execs is a sales call. There are no update meetings. Be clear what you are selling. Ask why should the execs care? If you had to ask for a 5 million dollars budget for this new initiative, will you get it through this meeting?
What are the numbers that execs care about? Show the metrics they care about and not what you are interested in.
Pre meetings are fine. We generally meet multiple times to polish the presentation before an exec presentation.
Numbers should pop. Use few, don’t dump all metrics on the presentation.
Ask: What is the larger narrative here?
Tie it to the mission.
Course correct if meeting not going as planned instead of hoping for another meeting.
Think about the 3 numbers that you want execs to take away.
Focus on: what you want (your goal from the meeting), what is the obstacle that you want to highlight, and end with your proposal.
Play to emotion.
Use specific examples.
Make it visual.
Use clear linear time sequencing.
Read the room.

--- END POST: Presenting to execs ---


--- START POST: Online grocery industry through the lens of Porter's 5 forces ---
URL: https://manassaloi.com/2022/05/06/grocery-delivery.html

A friend recently asked me if online grocery delivery can ever become profitable, and I explained to him why grocery delivery is facing a tough time using Porter’s 5 forces.
I think the only way grocery delivery will work is if it is bundled with other use cases. I have explained it
here
.

--- END POST: Online grocery industry through the lens of Porter's 5 forces ---


--- START POST: Product org evolution ---
URL: https://manassaloi.com/2022/05/05/product-org-evolution.html

I have discussed how to set up a product org with multiple founders. My notes can be found below.
Note: The final form is taken from
this
post by Reforge.
I had not shared this in the past because I wanted to write a long detailed post with my learnings working in various product org structures and how different companies should adopt their own structure instead of copying one randomly, but I have become lazy with my writing. Will try to complete it later.

--- END POST: Product org evolution ---


--- START POST: A few unpopular opinions ---
URL: https://manassaloi.com/2022/05/04/unpopular-opinions.html

A few unpopular opinions.
1/ The folks who criticize Indian CEOs for their hustle and the cut-throat culture seem to idolize Jobs and Musk. I delved into the WHY, engaging in debates with friends and industry veterans to understand their point of view.
After hours of deliberation, they’d casually mention something like, “But he’s only doing X, not creating the new iPhone or anything.” That was my moment of realization. The disdain towards Indian CEOs X and Y isn’t because they’re jerks or have fostered a toxic environment. It’s becaus”e they’re perceived as toxic while working on incremental products and not doing something that is seen as “world changing”.
Comments made by people who I talked to:
“Itna kya chaud, ye to bas X kar raha.”
“lol X copy kar raha aur apne ko Jobs samajhta hain.”
This is why I created this graph where Y axis is the perception of world changing behavior and X is how toxic you can be allowed to be. You have to be changing the world to be an asshole.
Hence we worship Steve Jobs inspite of him parking in the Apple’s handicapped spot, stealing ideas from employees, pitting software and hardware chiefs against each other, and a lot of things that we would not be okay with if it was not Steve Jobs.
Zuckerberg could call for a lockdown and make people work 24/7 to combat the Google+ threat. Elon Musk could summon employees to work at factories during the peak of the Covid crisis. But as an Indian CEO, you can’t work 12 hours because you’re not Musk and incapable of taking us to Mars.
I’m not advocating for a hustle culture. Personally, I stick to 8-hour workdays. However, if I were to work longer for an early-stage startup, it would be a choice I make for this particular phase of my life.
2/ Most cultural values and principles are merely buzzwords mentioned during performance reviews, not genuinely practiced while running a company.
I’ve lost count of the times I had to do something because some executive demanded it, despite my best efforts to persuade otherwise. “Business” always takes precedence over “customer obsession” in the long run. So, it amuses me when leaders expound wisdom on Twitter.
Prioritizing business above everything is acceptable. I agree with a recent interview where a CEO stated, “Without business, there is no culture” or, in my words, “customer obsession.” However, ensure that your team understands the trade-offs; otherwise, it will burden your junior employees who perceive these values as immutable laws of physics.
3/ Founder behavior among portfolio companies tends to converge over time, regardless of the sector.
A, B, C = founders of X fund constantly discuss branding, active on social media, brash, growth at any cost.
E, F, G = founders of Y fund heads down focused on building, barely visible online.
(I can’t delve deeper into this to avoid offending any founders or VCs, but it’s worth pondering.)
4/ People just look for confirmation bias on social media. Many spend their days being outraged, quoting, dunking, and playing the “aackchuaallly” game. If you’re doing it to signal to your tribe, gain clout and likes, well, good for you, my friend. But if you’re doing it without deep contemplation, merely coping, then I feel sorry for you. If someone can deduce your worldview from your first ten likes, you’re living in your own bubble.
5/ If you don’t intend to leverage your influence and reach to start up, sell courses, or become a VC, building an audience is futile.
Due to mimesis, many people want to write threads, engage in shitposting, believing it will boost their careers or elevate their status. However, I’d argue that it’s far more beneficial to excel at work.
I write shitposts because I have this immense need to let people know that I am funny. And liked because of it. But you posting jokes from reddit will do nothing to get you to a senior software dev from software. Unless you are doing this because it makes you happy or something. Or planning to sell a course or startup. Most people put 0 thought into what they do. They just copy what is the “current thing”. Don’t believe me? Just open Twitter and see for yourself.

--- END POST: A few unpopular opinions ---


--- START POST: Secure the bag for yourself ---
URL: https://manassaloi.com/2022/05/03/secure-the-bag.html

Every VC talks about backing missionary founders and playing the long game. But they are happy to throw those same founders under the bus when there is a risk to their bottom line [i.e. returning 3x the fund to their LPs and making their carry].
When the market is bullish, every VC and his or her founder counterpart are best friends on Twitter. When the market goes south, not so much. Non-standard term sheet clauses become common. Founders are asked to find a way to get an exit.
Every founder wants their employee to be a missionary. Sacrifice work-life balance. Give it all. Not worry about titles. Or the money. While the founders take the secondaries by the series C and secure the bag.
As companies grow, committees are formed to formalise the organisational structure and the compensation plan. Who are the committee members? The VPs and the CXOs. Then they decide what an employee is going to get: salary, equity grant, refreshers, based on the title he or she holds. But they then write on Twitter that titles don’t matter. And when the eventual bear market comes, 20-30% of employees are culled to widen the runway. And the whole “hum saath saath hain family drama” stops.
Remember: Everything one reads on social media is content marketing. You need to know what people are selling you. And why they are selling.
There are literally about 10 people I know in life who are true missionaries, who don’t care about titles or money and are happy to just work on their craft. All the rest of us are just doing content marketing on Twitter.
No one grows up dreaming about how to optimise the checkout flow of an e-commerce site / increase the conversion rate by 100 basis points.
Don’t drink the Twitter Kool-Aid. Just work hard, show proof of work, become hard to replace and secure the bag.
Caveat: I’m not saying don’t care about your company or what it’s trying to achieve and just optimise for salary and title. But have an understanding of what you’re optimising for and why. Don’t read about content marketing on Twitter and then decide that you want to emulate people who have already done it. You operate in a marketplace. You bring your skills. You get something in return. That’s all there is.
Secure the bag for yourself. Don’t let people gaslight you into thinking otherwise.

--- END POST: Secure the bag for yourself ---


--- START POST: Pick up a sport ---
URL: https://manassaloi.com/2022/05/02/pick-up-a-sport.html

One advice I would  give to my 20 year old self: Pick up a sport.
For the longest time, I tied my identity to only work. My happiness and self worth was tied to whether my role and comp was increasing with time. I did not care about much else.
And yes, also product management. Anytime someone would say anything against startups or PM’ing, I would jump with my 2c thread. It was my identity.
My perspective actually changed after I talked to a very successful exec. She diagnosed my issue in just an hour.
I was asking her if she is not afraid of failing or hating her job as a founder after being such a successful person.
She told me that she was more than a valley exec. She is a mom. A wife. A founder. She wrote a best selling book. It is okay if one thing does not go right.
While my entire self worth was tied to my identity as ‘a person who is involved in the startup ecosystem.’ Hence I cared so much about not failing in one aspect.
This is true. I still care about my career a lot. That is all I talk about with friends. Just one project not going well makes me upset. I rant. I try so hard to prove my worth everyday at work or when I am talking to a founder.
But what if you were more than your work? What if you had other interests too?
I am saying sports because it directly ties to health and your overall happiness level (at least for me).
I am shit at football. But now instead of worrying about work the whole day, I have these few hours a day when I care only about getting better at it. Yes, I have interests in life like Poker, Fifa, and reading, but none pushes me to the limit like Football. I have also realised that it is the only time I am truly present, and not thinking about the past or the future.
So yeah, pick up a sport. Your mental health will thank you.

--- END POST: Pick up a sport ---


--- START POST: Stop reading product blogs ---
URL: https://manassaloi.com/2022/05/01/stop-reading-pm-blogs.html

As someone who gets tagged on ‘which PMs should I follow/read’ threads all the time, let me give you my honest advice: There is no point trying to discover more PMs to follow/blogs to read. Most of the successful PMs I know don’t even use Twitter. Or read product blogs. They bring energy, take ownership, and get shit done. They know how to influence people. They observe and learn. And then watch Netflix at night and chill.
Most blogs are too high level and bookmarking 10 more Twitter threads won’t take you to the next level.
Be honest: What are the last 5 things you read on Twitter that you actually implemented at work?
Reading dozens of threads on Twitter daily and bookmarking them for future consumption is like watching bodybuilding vlogs and Rocky 3 every day. Gives you a sense of satisfaction, but accomplishes nothing. It is nothing but procrastination.
Learning comes from
deep introspection
and
building processes
that help you learn from your wins as well as failures, not second hand knowledge sourced from Twitter.

--- END POST: Stop reading product blogs ---


--- START POST: These are the good times ---
URL: https://manassaloi.com/2022/04/30/good-times.html

We have also not seen a recession in 15 years. In a world of abundance it is easy to debate remote vs in person, optimal working hours, and the defining the PM role. In a world of excess, it is easy to focus on these things.
Far harder when there is a bear market and you need to survive and pay your bills.
When I was a kid my father wanted me to become a doctor because there were no engineering jobs, except TCS, Infosys, and other services companies. And yes, government engineering jobs.
People took years to become “a senior”. Salaries grew single digit. When I entered college (BITS Goa in 2009), we were just recovering from the 2008 recession.
Now compare that to a world where people are quitting because they don’t like the vibe at their current company. They are not worried. They know that they can double their salary anywhere.
In this world companies are going out of the way to pamper you. Every company is shouting on Twitter about how amazing they are. Employee branding is a thing. They care about the “current things”.
Suddenly hustle is bad. And mindfulness is in.
But if the venture capital dollars go away in an upcoming downturn and 80% of the startups shut down, we will see a whole new world. Actually, not new. What we will see is the world before cheap abundant capital. I have seen
this movie once
and it was not pretty.

--- END POST: These are the good times ---





================================================
File: bot.py
================================================
import logging
import time
import asyncio
import random
from twikit import Client as TwikitClient
from twikit.tweet import Tweet # Explicitly import Tweet for type hinting
from twikit.errors import NotFound, Forbidden, TwitterException

from state_manager import StateManager
from gemini_client import GeminiClient

logger = logging.getLogger(__name__)

class Bot:
    def __init__(
        self,
        config: dict,
        twikit_client: TwikitClient,
        gemini_client: GeminiClient,
        state_manager: StateManager
    ):
        self.config = config
        self.twikit_client = twikit_client
        self.gemini_client = gemini_client
        self.state_manager = state_manager
        self.min_delay = config['min_reply_delay_seconds']
        self.max_delay = config['max_reply_delay_seconds']
        self.own_user_id = config.get('twitter_actual_user_id', None) # Get from config if set by main.py
        self.bot_screen_name = config.get('twitter_username', '').lstrip('@')


    async def _ensure_own_user_id(self): # Keep this for fallback if not set by main.py
        if self.own_user_id is None:
            bot_username_to_fetch = self.bot_screen_name
            if not bot_username_to_fetch:
                logger.error("Twitter username missing in config. Cannot fetch own user ID.")
                return
            try:
                logger.info(f"Fetching own user details for @{bot_username_to_fetch}...")
                me_user = await self.twikit_client.get_user_by_screen_name(bot_username_to_fetch)
                if me_user and me_user.id:
                    self.own_user_id = str(me_user.id)
                    logger.info(f"Fetched own user ID: {self.own_user_id} for @{me_user.screen_name}")
                else:
                    logger.error(f"Could not fetch valid user details for @{bot_username_to_fetch}.")
            except TwitterException as e:
                logger.error(f"Could not fetch own user details for @{bot_username_to_fetch} (Twikit Error): {e}.")
            except Exception as e:
                 logger.error(f"Unexpected error fetching own user details for @{bot_username_to_fetch}: {e}")


    async def run_iteration(self) -> None:
        logger.info("Starting bot iteration...")
        iteration_start_time = time.monotonic()
        processed_this_iteration = 0 # Renamed for clarity
        replied_this_iteration = 0   # Renamed for clarity
        errors_this_iteration = 0    # Renamed for clarity
        state_changed = False

        if not self.own_user_id: # Attempt to fetch if not available from config
            await self._ensure_own_user_id()

        tweets: list[Tweet] = [] # Ensure tweets is typed
        try:
            logger.info(f"Fetching up to {self.config['tweets_to_fetch']} tweets from latest timeline...")
            timeline_result = await self.twikit_client.get_latest_timeline(count=self.config['tweets_to_fetch'])

            if hasattr(timeline_result, '__aiter__'):
                 tweets = [t async for t in timeline_result]
            elif hasattr(timeline_result, '__iter__') and not isinstance(timeline_result, str):
                 tweets = list(timeline_result)
            else:
                 logger.warning(f"Unexpected type from get_latest_timeline: {type(timeline_result)}. Assuming empty.")
            
            if not tweets:
                 logger.info("No new tweets found in timeline fetch.")
                 return
            logger.info(f"Fetched {len(tweets)} tweets. Processing potential replies (oldest first)...")
        # ... (rest of the timeline fetching error handling as before) ...
        except AttributeError as e:
             logger.critical(f"FATAL: Method missing in twikit client (e.g., 'get_latest_timeline'): {e}", exc_info=True)
             raise
        except TypeError as e:
            logger.critical(f"FATAL: TypeError calling timeline fetch: {e}", exc_info=True)
            raise
        except TwitterException as e:
            logger.error(f"Failed to fetch Twitter timeline: {e}", exc_info=False)
            return
        except Exception as e:
            logger.error(f"An unexpected error during timeline fetch: {e}", exc_info=True)
            return

        for i, tweet_obj in enumerate(reversed(tweets)): # Use a more descriptive name
            if not isinstance(tweet_obj, Tweet) or not hasattr(tweet_obj, 'id'):
                 logger.warning(f"Skipping invalid timeline item (type: {type(tweet_obj)}): {tweet_obj!r}")
                 continue

            tweet_id_str = str(tweet_obj.id)
            
            tweet_author = getattr(tweet_obj, 'user', None)
            tweet_author_id = str(getattr(tweet_author, 'id', None)) if tweet_author else None
            tweet_author_handle = getattr(tweet_author, 'screen_name', 'unknown_user') if tweet_author else 'unknown_user'
            current_tweet_url = f"https://x.com/{tweet_author_handle}/status/{tweet_id_str}"

            logger.info(f"Checking tweet ({i+1}/{len(tweets)}): {current_tweet_url} by @{tweet_author_handle}")

            if self.state_manager.is_processed(tweet_id_str):
                logger.info(f"Skipping already processed tweet ID {tweet_id_str}")
                continue

            if self.own_user_id:
                if tweet_author_id == self.own_user_id:
                    logger.info(f"Skipping own tweet: {tweet_id_str}")
                    await self.state_manager.mark_processed(tweet_id_str); state_changed = True
                    continue
                
                reply_to_user_id_val = getattr(tweet_obj, 'in_reply_to_user_id_str', None)
                if reply_to_user_id_val == self.own_user_id:
                    logger.info(f"Skipping reply to self: {tweet_id_str}")
                    await self.state_manager.mark_processed(tweet_id_str); state_changed = True
                    continue
            
            processed_this_iteration += 1

            # --- Enhanced Context Extraction for Retweets and Quote Tweets ---
            text_for_gemini = getattr(tweet_obj, 'text', "") or ""
            image_urls_for_gemini = []

            # Helper to extract media URLs
            def get_media_urls(media_list):
                urls = []
                if media_list:
                    for media_item in media_list:
                        if getattr(media_item, 'type', None) == 'photo':
                            url = getattr(media_item, 'media_url_https', None)
                            if url: urls.append(url)
                return urls

            # Extract images from the current tweet object first
            image_urls_for_gemini.extend(get_media_urls(getattr(tweet_obj, 'media', None)))

            is_native_retweet = hasattr(tweet_obj, 'retweeted_status') and tweet_obj.retweeted_status is not None
            is_quote_tweet = hasattr(tweet_obj, 'quoted_status') and tweet_obj.quoted_status is not None

            if is_native_retweet:
                original_rt_status = tweet_obj.retweeted_status
                logger.info(f"Tweet {tweet_id_str} is a native retweet of {getattr(original_rt_status, 'id', 'N/A')}. Using original tweet's content.")
                text_for_gemini = getattr(original_rt_status, 'text', "") or ""
                # If the retweet itself had no media, check the original retweeted status for media
                if not image_urls_for_gemini:
                    image_urls_for_gemini.extend(get_media_urls(getattr(original_rt_status, 'media', None)))
            
            elif is_quote_tweet:
                quoted_status_obj = tweet_obj.quoted_status
                commenter_text = getattr(tweet_obj, 'text', "") or "" # Text added by the one quoting
                original_quoted_text = getattr(quoted_status_obj, 'text', "") or ""
                
                logger.info(f"Tweet {tweet_id_str} is a quote tweet. Quoted tweet ID: {getattr(quoted_status_obj, 'id', 'N/A')}. Combining texts.")
                text_for_gemini = (
                    f"Commenter's Text: {commenter_text}\n"
                    f"Original Quoted Text: {original_quoted_text}"
                )
                # Prioritize images from the quote tweet's comment if any, then from original quoted
                if not image_urls_for_gemini: # If tweet_obj.media (commenter's media) was empty
                    image_urls_for_gemini.extend(get_media_urls(getattr(quoted_status_obj, 'media', None)))

            if not text_for_gemini.strip() and not image_urls_for_gemini:
                logger.warning(f"Skipping tweet {tweet_id_str}: no effective text and no processable images after context extraction.")
                await self.state_manager.mark_processed(tweet_id_str); state_changed = True
                continue
            
            logger.info(f"Generating reply for tweet ID {tweet_id_str} (Text: '{text_for_gemini[:30].strip()}...', Images: {len(image_urls_for_gemini)})")
            reply_text = await self.gemini_client.generate_reply(text_for_gemini, image_urls_for_gemini)

            if not reply_text:
                logger.warning(f"Gemini did not return a reply for tweet {tweet_id_str}. Skipping post.")
                errors_this_iteration += 1
                await self.state_manager.mark_processed(tweet_id_str); state_changed = True
                continue

            logger.info(f"Attempting to post reply to tweet ID {tweet_id_str}...")
            try:
                if not hasattr(tweet_obj, 'reply') or not callable(tweet_obj.reply):
                    logger.error(f"Tweet object for ID {tweet_id_str} (user @{tweet_author_handle}) does not have a callable 'reply' method.")
                    errors_this_iteration += 1
                    await self.state_manager.mark_processed(tweet_id_str); state_changed = True
                    continue

                replied_tweet = await tweet_obj.reply(reply_text)
                replied_this_iteration += 1
                state_changed = True
                replied_tweet_id = getattr(replied_tweet, 'id', 'UNKNOWN_ID')
                logger.info(f"Successfully posted reply to {current_tweet_url}. New tweet ID: {replied_tweet_id}")
                await self.state_manager.mark_processed(tweet_id_str)

                is_last_tweet_in_batch = (i == len(tweets) - 1)
                if not is_last_tweet_in_batch and replied_this_iteration > 0:
                    delay = random.uniform(self.min_delay, self.max_delay)
                    logger.info(f"Waiting for {delay:.2f}s before next tweet...")
                    await asyncio.sleep(delay)

            except NotFound:
                 logger.warning(f"Original tweet {tweet_id_str} not found (NotFound error). Maybe deleted? Skipping.")
                 errors_this_iteration += 1
                 await self.state_manager.mark_processed(tweet_id_str); state_changed = True
            except Forbidden as e:
                 logger.error(f"Forbidden to reply to tweet {tweet_id_str}: {e}. Skipping.", exc_info=False)
                 errors_this_iteration += 1
                 await self.state_manager.mark_processed(tweet_id_str); state_changed = True
            except TwitterException as e:
                logger.error(f"Twitter API error posting reply for tweet {tweet_id_str}: {e}", exc_info=False)
                errors_this_iteration += 1
            except Exception as e:
                 logger.error(f"An unexpected error replying to {tweet_id_str}: {e}", exc_info=True)
                 errors_this_iteration += 1

        if state_changed:
            logger.info("Saving updated state...")
            await self.state_manager.save()

        iteration_duration = time.monotonic() - iteration_start_time
        logger.info(
            f"Iteration completed in {iteration_duration:.2f}s. "
            f"Tweets processed: {processed_this_iteration}, Replied: {replied_this_iteration}, Errors: {errors_this_iteration}."
        )



================================================
File: config.py
================================================
import os
import logging
from dotenv import load_dotenv
from pathlib import Path

logger = logging.getLogger(__name__)

def load_config():
    """Loads configuration from .env file and environment variables."""
    load_dotenv()

    config = {}

    # --- Gemini ---
    config['gemini_api_key'] = os.getenv('GEMINI_API_KEY')
    if not config['gemini_api_key']:
        logger.critical("FATAL ERROR: Missing required environment variable: GEMINI_API_KEY")
        raise ValueError("Missing GEMINI_API_KEY")

    # --- Twitter Auth ---
    config['twitter_username'] = os.getenv('TWITTER_USERNAME')
    config['twitter_email'] = os.getenv('TWITTER_EMAIL')
    config['twitter_password'] = os.getenv('TWITTER_PASSWORD')
    config['twitter_cookie_file'] = os.getenv('TWITTER_COOKIE_FILE') # Path to cookies.json

    if not config['twitter_username']:
         logger.critical("FATAL ERROR: Missing required environment variable: TWITTER_USERNAME")
         raise ValueError("Missing TWITTER_USERNAME")
    if not config['twitter_password']:
         logger.critical("FATAL ERROR: Missing required environment variable: TWITTER_PASSWORD")
         raise ValueError("Missing TWITTER_PASSWORD")

    cookie_path_str = config['twitter_cookie_file']
    if cookie_path_str:
        cookie_path = Path(cookie_path_str)
        if not cookie_path.is_file():
            logger.warning(f"TWITTER_COOKIE_FILE ('{cookie_path_str}') not found or is not a file. Login will rely on credentials only and may attempt to create/update this file.")
            config['twitter_cookie_file_path'] = cookie_path # Store path even if not existing yet for twikit to use
        else:
            config['twitter_cookie_file_path'] = cookie_path
            logger.info(f"Twitter cookie file found: {cookie_path}")
    else:
        # If TWITTER_COOKIE_FILE is not set in .env, default to 'cookies.json' in the project root
        # Twikit's login function will attempt to use/create it.
        default_cookie_path = Path('cookies.json')
        config['twitter_cookie_file_path'] = default_cookie_path
        logger.info(f"TWITTER_COOKIE_FILE not set in .env. Defaulting to use/create '{default_cookie_path}'.")


    # --- Bot Settings ---
    config['speaking_style_file_path'] = Path(os.getenv('SPEAKING_STYLE_FILE_PATH', 'speaking_style.txt'))
    config['blog_content_file_path'] = Path(os.getenv('BLOG_CONTENT_FILE_PATH', 'blogs.txt'))
    config['state_file_path'] = Path(os.getenv('STATE_FILE_PATH', 'data/processed_tweets.json'))

    try:
        fetch_interval_minutes = int(os.getenv('FETCH_INTERVAL_MINUTES', '10'))
        if fetch_interval_minutes <= 0:
             raise ValueError("FETCH_INTERVAL_MINUTES must be a positive integer")
        config['fetch_interval_minutes'] = fetch_interval_minutes
        config['fetch_interval_seconds'] = fetch_interval_minutes * 60
    except ValueError as e:
        logger.warning(f"Invalid FETCH_INTERVAL_MINUTES, using default 10 minutes (600 seconds): {e}")
        config['fetch_interval_minutes'] = 10
        config['fetch_interval_seconds'] = 600

    try:
        tweets_to_fetch = int(os.getenv('TWEETS_TO_FETCH', '20'))
        if tweets_to_fetch <= 0:
             raise ValueError("TWEETS_TO_FETCH must be a positive integer")
        config['tweets_to_fetch'] = tweets_to_fetch
    except ValueError as e:
        logger.warning(f"Invalid TWEETS_TO_FETCH, using default 20: {e}")
        config['tweets_to_fetch'] = 20

    try:
        min_delay = int(os.getenv('MIN_REPLY_DELAY_SECONDS', '30'))
        max_delay = int(os.getenv('MAX_REPLY_DELAY_SECONDS', '60'))
        if min_delay < 0 or max_delay < min_delay:
             raise ValueError("MIN_REPLY_DELAY_SECONDS must be >= 0 and MAX_REPLY_DELAY_SECONDS must be >= MIN_REPLY_DELAY_SECONDS")
        config['min_reply_delay_seconds'] = min_delay
        config['max_reply_delay_seconds'] = max_delay
    except ValueError as e:
        logger.warning(f"Invalid reply delay settings, using defaults 30-60s: {e}")
        config['min_reply_delay_seconds'] = 30
        config['max_reply_delay_seconds'] = 60

    state_dir = config['state_file_path'].parent
    if state_dir:
        try:
            state_dir.mkdir(parents=True, exist_ok=True)
            logger.info(f"Ensured data directory exists: {state_dir}")
        except OSError as e:
            logger.warning(f"Could not create or access data directory '{state_dir}': {e}.")
        except Exception as e:
             logger.error(f"Unexpected error ensuring data directory '{state_dir}' exists: {e}")

    if not config['speaking_style_file_path'].is_file():
        logger.critical(f"FATAL ERROR: Speaking style file not found at '{config['speaking_style_file_path']}'.")
        raise FileNotFoundError(f"Speaking style file not found: {config['speaking_style_file_path']}")

    if not config['blog_content_file_path'].is_file():
        logger.critical(f"FATAL ERROR: Blog content file not found at '{config['blog_content_file_path']}'.")
        raise FileNotFoundError(f"Blog content file not found: {config['blog_content_file_path']}")

    logger.info("Configuration loaded successfully.")
    return config



================================================
File: cookies.json
================================================
{"__cf_bm": "Vyu.CKzmS1a77ept5wEs8BCFQ.0dHHOQl_zyLSFJ3A4-1748715371-1.0.1.1-rMhlQhYjS1pL5g9aWfm94Un67RT1BlfWYx8BFSYVaBpzoGv6Tx1AcWwo7nwgkB0XF49Bie0DMPoOBW3gckdKPzSib.d44iGoxUVOubIDdC8", "auth_token": "aae545116e162f49abe94983fc91b2e96a6362aa", "ct0": "ae0295a46a2bbd1aca3438cf717f51cf6418c7ad735ab87b9b0f2307af2bc1ff91d0aeb38232528c8b218f375ee862776ffda59ef29602279423cfd042fe571a64756d2f4717520fd5bbdaaa7ec5b976", "external_referer": "padhuUp37zjgzgv1mFWxJ12Ozwit7owX|0|8e8t2xd8A2w=", "g_state": "{\"i_l\": 0}", "guest_id": "v1:174186214978370699", "guest_id_ads": "v1:174186214978370699", "guest_id_marketing": "v1:174186214978370699", "kdt": "CuJazp5c9hNQDmwLc4n8tuKvcMR010l5NLD49wyp", "lang": "en", "personalization_id": "v1_3bxVetA5WDB/eeJjXHEbQQ==", "ph_phc_TXdpocbGVeZVm5VJmAsHTMrCofBQu3e0kN8HGMNGTVW_posthog": "{\"distinct_id\":\"0195e88a-5d4f-7f76-9283-d454d0d0a014\",\"$sesid\":[1743363227784,\"0195e88a-5d4e-7d20-8a0d-4d05d66c1d22\",1743363136846]}", "twid": "u=1621359848607858688"}


================================================
File: env.example
================================================

# --- Gemini ---
GEMINI_API_KEY=

TWITTER_USERNAME=@A22110009
TWITTER_EMAIL=ayush_g@ar.iitr.ac.in
TWITTER_PASSWORD=

# Method 2: Cookie File (Recommended for bots, use cookies.json)
# Ensure cookies.json exists and is valid. Set this variable:
TWITTER_COOKIE_FILE=cookies.json

# --- Bot Settings ---
# Path relative to the project root
SPEAKING_STYLE_FILE_PATH=speaking_style.txt
STATE_FILE_PATH=data/processed_tweets.json
FETCH_INTERVAL_MINUTES=10  # How often to check for new tweets
TWEETS_TO_FETCH=20         # How many tweets to fetch per cycle
MIN_REPLY_DELAY_SECONDS=30 # Min random delay between replies in a batch
MAX_REPLY_DELAY_SECONDS=60 # Max random delay between replies in a batch



================================================
File: gemini_client.py
================================================
import google.generativeai as genai
import logging
import os
from pathlib import Path
import asyncio
import aiofiles
import aiohttp # For fetching images
from PIL import Image # For image type detection
import io # For working with bytes as files

from google.generativeai import types as generation_types
# from google.generativeai.types import Part # REMOVED
from google.api_core import exceptions as api_core_exceptions


logger = logging.getLogger(__name__)

GEMINI_MODEL_NAME = 'gemini-2.5-pro-preview-05-06'
MAX_REPLY_LENGTH = 140

SAFETY_SETTINGS = {
    generation_types.HarmCategory.HARM_CATEGORY_HARASSMENT: generation_types.HarmBlockThreshold.BLOCK_NONE,
    generation_types.HarmCategory.HARM_CATEGORY_HATE_SPEECH: generation_types.HarmBlockThreshold.BLOCK_NONE,
    generation_types.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT: generation_types.HarmBlockThreshold.BLOCK_NONE,
    generation_types.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT: generation_types.HarmBlockThreshold.BLOCK_NONE,
}

INSTRUCTION_TEMPLATE_TEXT_PART = """You are Ayush Goyal, a 20-year-old software developer from IIT Roorkee with aspirations to be a founder.
You are active on Twitter, sharing thoughtful perspectives and engaging in discussions related to technology, startups, product development, and occasionally, personal growth and philosophical musings.
The goal of your Twitter replies is to provide value, sound knowledgeable and insightful (drawing from the kind of thinking and analysis present in your blog content provided separately below), and encourage meaningful interactions that might lead to new followers.

**Your Knowledge Base (Consider this as your past writings and thoughts):**
--- START BLOG CONTENT ---
{blog_content}
--- END BLOG CONTENT ---

**Your Typical Twitter Speaking Style (Tone, Phrasing, Vocabulary):**
--- START SPEAKING STYLE ---
{speaking_style}
--- END SPEAKING STYLE ---

**Task:** Generate a reply to the target tweet.
*   If an image is provided with the tweet (indicated by a following image part), consider its content along with the text when forming your reply. You can refer to objects, scenes, or the general sentiment of the image.
*   If the tweet is a "Quote Tweet", the input text will be formatted as:
    "Commenter's Text: [Text added by the person quoting]
    Original Quoted Text: [Text of the tweet they are quoting]"
    Your reply should address the commenter's take while being aware of the original quoted content.
*   If the tweet is a "Native Retweet", the input text will be the content of the original tweet.

**Guidelines for Replying:**
# ... (rest of instructions as before) ...

4.  **Constraints:**
    *   Maximum reply length (for the final text): {max_chars} characters.
    *   **CRITICAL: Output *ONLY* the raw tweet reply text.** No introductions ("Here's a reply:"), explanations, salutations, or any extra formatting. Just the reply itself.

**Tweet to Reply To (Text part):**
--- START TWEET TEXT ---
{tweet_text}
--- END TWEET TEXT ---
"""


class GeminiClient:
    # ... (__init__, load_speaking_style, load_blog_content, _fetch_image_data as before) ...
    def __init__(self, api_key: str, speaking_style_path: Path, blog_content_path: Path):
        if not api_key:
            raise ValueError("Gemini API key is required.")
        if not speaking_style_path or not isinstance(speaking_style_path, Path):
            raise ValueError("Speaking style file path (as a Path object) is required.")
        if not blog_content_path or not isinstance(blog_content_path, Path):
            raise ValueError("Blog content file path (as a Path object) is required.")

        self.api_key = api_key
        self.speaking_style_path = speaking_style_path
        self.blog_content_path = blog_content_path
        self.speaking_style = ""
        self.blog_content = ""
        self.model = None
        self.model_name = GEMINI_MODEL_NAME

        try:
            genai.configure(api_key=self.api_key)
            self.model = genai.GenerativeModel(self.model_name)
            logger.info(f"Gemini client configured for model: {self.model_name}")
        except Exception as e:
            logger.critical(f"FATAL: Failed to configure Gemini client or model '{self.model_name}': {e}", exc_info=True)
            raise ConnectionError(f"Failed to configure Gemini client: {e}") from e

    async def load_speaking_style(self) -> bool:
        if not self.speaking_style_path.is_file():
            logger.error(f"Speaking style file not found: {self.speaking_style_path}")
            raise FileNotFoundError(f"Speaking style file not found: {self.speaking_style_path}")
        try:
            async with aiofiles.open(self.speaking_style_path, 'r', encoding='utf-8') as f:
                self.speaking_style = await f.read()
            if not self.speaking_style.strip():
                logger.warning(f"Speaking style file '{self.speaking_style_path}' is empty. Replies may lack specific style.")
            logger.info(f"Successfully loaded speaking style from {self.speaking_style_path} ({len(self.speaking_style)} bytes)")
            return True
        except Exception as e:
            logger.error(f"Failed to load speaking style from '{self.speaking_style_path}': {e}", exc_info=True)
            self.speaking_style = ""
            raise

    async def load_blog_content(self) -> bool:
        if not self.blog_content_path.is_file():
            logger.error(f"Blog content file not found: {self.blog_content_path}")
            raise FileNotFoundError(f"Blog content file not found: {self.blog_content_path}")
        try:
            async with aiofiles.open(self.blog_content_path, 'r', encoding='utf-8') as f:
                self.blog_content = await f.read()
            if not self.blog_content.strip():
                logger.error(f"Blog content file '{self.blog_content_path}' is empty. This is critical for knowledgeable replies.")
                raise ValueError(f"Blog content file '{self.blog_content_path}' is empty.")
            logger.info(f"Successfully loaded blog content from {self.blog_content_path} ({len(self.blog_content)} bytes)")
            return True
        except Exception as e:
            logger.error(f"Failed to load blog content from '{self.blog_content_path}': {e}", exc_info=True)
            self.blog_content = ""
            raise

    async def _fetch_image_data(self, image_url: str) -> tuple[bytes | None, str | None]:
        """Fetches image data and determines MIME type."""
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(image_url) as resp:
                    if resp.status == 200:
                        image_bytes = await resp.read()
                        try:
                            img = Image.open(io.BytesIO(image_bytes))
                            mime_type = Image.MIME.get(img.format.upper()) if img.format else None
                            if mime_type:
                                logger.info(f"Fetched image {image_url}, MIME (Pillow): {mime_type}, Size: {len(image_bytes)} bytes")
                                return image_bytes, mime_type
                            else:
                                server_content_type = resp.headers.get('Content-Type')
                                if server_content_type and server_content_type.startswith('image/'):
                                     logger.warning(f"Pillow couldn't determine MIME for {image_url} (format: {img.format}), using server's {server_content_type}")
                                     return image_bytes, server_content_type
                                else:
                                     logger.warning(f"Could not determine valid image MIME type for {image_url} from Pillow or server header ({server_content_type}).")
                                     return None, None
                        except Exception as e_pil:
                            logger.warning(f"Pillow error processing image {image_url}: {e_pil}. Falling back to server Content-Type if available.")
                            server_content_type = resp.headers.get('Content-Type')
                            if server_content_type and server_content_type.startswith('image/'):
                                return image_bytes, server_content_type
                            else:
                                logger.warning(f"Failed to determine MIME type for {image_url} after Pillow error and invalid server Content-Type ({server_content_type}).")
                                return None, None
                    else:
                        logger.warning(f"Failed to fetch image {image_url}, status: {resp.status}")
                        return None, None
        except Exception as e:
            logger.error(f"Error fetching image {image_url}: {e}", exc_info=True)
            return None, None


    async def generate_reply(self, tweet_text: str, image_urls: list[str] | None = None) -> str | None:
        if not self.model:
             logger.error("Gemini model not initialized.")
             return None
        if not self.speaking_style and self.speaking_style_path.exists():
             logger.error("Speaking style not loaded (file exists but content is empty or load failed).")
             return None
        if not self.blog_content:
             logger.error("Blog content not loaded. This is critical for knowledgeable replies.")
             return None

        try:
            prompt_text_part = INSTRUCTION_TEMPLATE_TEXT_PART.format(
                max_chars=MAX_REPLY_LENGTH,
                speaking_style=self.speaking_style,
                blog_content=self.blog_content,
                tweet_text=tweet_text or "[No text content in tweet]"
            )
        except KeyError as e:
            logger.error(f"Error formatting Gemini prompt template (missing key?): {e}")
            return None
        except Exception as e:
            logger.error(f"Unexpected error formatting Gemini prompt template: {e}", exc_info=True)
            return None

        # Construct prompt_parts_for_api as a list of dictionaries or strings
        prompt_parts_for_api: list[str | dict] = [prompt_text_part]

        if image_urls:
            image_added_context = False
            for img_url in image_urls[:1]: # Process only the first image
                image_bytes, mime_type = await self._fetch_image_data(img_url)
                if image_bytes and mime_type:
                    try:
                        # SDK often handles base64 encoding internally if you give it bytes
                        # For explicit dictionary structure:
                        import base64
                        encoded_image_data = base64.b64encode(image_bytes).decode('utf-8')
                        image_part_dict = {
                            "inline_data": {
                                "mime_type": mime_type,
                                "data": encoded_image_data
                            }
                        }
                        prompt_parts_for_api.append(image_part_dict)
                        prompt_parts_for_api.append({"text": "[The above image was included with the tweet. Consider it in your reply.]"})
                        image_added_context = True
                        logger.info(f"Added image {img_url} to Gemini prompt parts.")
                        break 
                    except Exception as e:
                        logger.error(f"Error preparing image data for {img_url}: {e}")
            if not image_added_context and image_urls:
                 prompt_parts_for_api.append({"text": "[An image was linked in the tweet but could not be processed for context.]"})

        logger.info(f"Sending request to Gemini (model: {self.model_name}) for text: \"{(tweet_text or '')[:50].strip()}...\" (Images: {len(image_urls or [])})")
        # logger.debug(f"Total prompt parts for API: {len(prompt_parts_for_api)}")
        # for i, part_item in enumerate(prompt_parts_for_api):
        #     if isinstance(part_item, str):
        #         logger.debug(f"  Part {i} (str): {part_item[:100]}...")
        #     elif isinstance(part_item, dict) and "inline_data" in part_item:
        #         logger.debug(f"  Part {i} (image dict): MIME={part_item['inline_data']['mime_type']}")
        #     elif isinstance(part_item, dict) and "text" in part_item:
        #         logger.debug(f"  Part {i} (text dict): {part_item['text'][:100]}...")


        response = None
        try:
            use_max_output_tokens_none = "preview" in self.model_name.lower()
            
            gen_config_args = {"temperature": 0.65}
            if use_max_output_tokens_none:
                gen_config_args["max_output_tokens"] = None
                logger.info(f"Using max_output_tokens=None for preview model {self.model_name}")
            else:
                gen_config_args["max_output_tokens"] = 150

            current_generation_config = generation_types.GenerationConfig(**gen_config_args)

            response = await self.model.generate_content_async(
                contents=prompt_parts_for_api, # This list can contain strings and dicts
                safety_settings=SAFETY_SETTINGS,
                generation_config=current_generation_config
            )
            # ... (rest of the response handling as before) ...
            generated_text = None
            if not response.candidates:
                logger.warning("Gemini response has NO candidates.")
                if hasattr(response, 'prompt_feedback') and response.prompt_feedback:
                     logger.warning(f"Prompt Feedback: Block Reason: {response.prompt_feedback.block_reason}, Ratings: {response.prompt_feedback.safety_ratings}")
                return None

            try:
                 generated_text = response.text
            except ValueError as ve:
                 logger.warning(f"Accessing response.text failed. ValueError: {ve}")
                 if response.candidates:
                     for i, candidate in enumerate(response.candidates):
                          finish_reason_name = candidate.finish_reason.name if candidate.finish_reason else 'N/A'
                          logger.warning(f"  Candidate {i}: Finish Reason: {finish_reason_name}, Safety Ratings: {candidate.safety_ratings}")
                 return None
            except Exception as text_exc:
                 logger.warning(f"Unexpected error accessing response.text: {text_exc}", exc_info=True)
                 return None

            if generated_text:
                trimmed_text = generated_text.strip().replace('"', '')
                prefixes_to_remove = [
                    "Generated Reply (as Ayush Goyal):", "Generated Reply:",
                    "Reply (as Ayush Goyal):", "Reply:", "Ayush Goyal:",
                    "Okay, here's a reply:", "Here's a reply:",
                    "Okay, as Ayush Goyal, my reply would be:"
                ]
                for prefix in prefixes_to_remove:
                    if trimmed_text.lower().startswith(prefix.lower()):
                        trimmed_text = trimmed_text[len(prefix):].strip()
                        break
                
                if trimmed_text:
                    if len(trimmed_text) > MAX_REPLY_LENGTH:
                        logger.warning(f"Gemini response was long ({len(trimmed_text)} chars). Truncating to {MAX_REPLY_LENGTH}.")
                        last_space_index = trimmed_text[:MAX_REPLY_LENGTH].rfind(' ')
                        if last_space_index != -1 and last_space_index > MAX_REPLY_LENGTH - 30: # Avoid too short a truncation
                            trimmed_text = trimmed_text[:last_space_index]
                        else: 
                            trimmed_text = trimmed_text[:MAX_REPLY_LENGTH]
                    
                    if trimmed_text:
                       logger.info(f"Successfully generated reply (Ayush Goyal): \"{trimmed_text}\"")
                       return trimmed_text
                    else:
                       logger.warning("Gemini response (Ayush Goyal) became empty after truncation.")
                       return None
                else:
                    logger.warning("Gemini response (Ayush Goyal) via .text was empty or whitespace after prefix removal.")
                    return None
            else:
                logger.warning("Response.text (Ayush Goyal) was unexpectedly empty/None despite having candidates (or after .text access issues).")
                return None
        # ... (rest of the error handling for the API call itself as before) ...
        except generation_types.StopCandidateException as sce:
             logger.warning(f"Gemini generation stopped (likely safety/policy). StopCandidateException: {sce}")
             if response and hasattr(response, 'prompt_feedback'):
                 try: logger.warning(f"Prompt Feedback: {response.prompt_feedback}")
                 except: pass
             return None
        except aiohttp.ClientError as http_err:
            logger.error(f"HTTP error fetching image for multimodal prompt: {http_err}", exc_info=True)
            return None
        except api_core_exceptions.InvalidArgument as iae:
            logger.error(f"Gemini API InvalidArgument: {iae}. Prompt (text + image) might be too large or malformed.", exc_info=True)
            return None
        except api_core_exceptions.DeadlineExceeded as dee:
            logger.error(f"Gemini API DeadlineExceeded: {dee}. Request took too long.", exc_info=True)
            return None
        except generation_types.BlockedPromptException as bpe:
            logger.error(f"Gemini prompt was explicitly blocked by API. BlockedPromptException: {bpe}")
            if response and hasattr(response, 'prompt_feedback'):
                 logger.warning(f"Prompt Feedback: {response.prompt_feedback}")
            return None
        except generation_types.UnsupportedUserLocation as uul:
            logger.error(f"Gemini API: User location not supported. UnsupportedUserLocation: {uul}")
            return None
        except api_core_exceptions.GoogleAPIError as api_err:
            logger.error(f"Gemini API call failed: {type(api_err).__name__} - {api_err}", exc_info=True)
            return None
        except Exception as e:
            logger.error(f"Unexpected error during Gemini generation or response processing: {e}", exc_info=True)
            if response:
                 logger.error(f"Response object at time of error: {response!r}")
            return None



================================================
File: getusertweets.py
================================================
import asyncio
import json
import os
from twikit import Client
# import traceback # Optional: uncomment for more detailed error printing during debugging

# --- Credentials ---
# <<< MAKE SURE THESE ARE 100% CORRECT >>>
USERNAME = "@A22110009"
EMAIL = "ayush_g@ar.iitr.ac.in"
PASSWORD = "freedom_0207"  # <<< DOUBLE-CHECK THIS PASSWORD >>>
# Use a distinct file name for cookies
COOKIES_FILE = 'cookies.json'

# --- Target User ---
# <<< CHANGE THIS to the screen name (without '@') of the user whose tweets you want >>>
TARGET_USER_SCREEN_NAME = 'arpitingle'

# --- Configuration ---
# Type of tweets to fetch: 'Tweets', 'Tweets & Replies', 'Media'
TWEET_TYPE = 'Tweets'
# Delay between fetching pages (in seconds) to respect rate limits
PAGE_FETCH_DELAY = 2

# Initialize client
client = Client('en-US')

# --- Tweet Fetching Function ---
async def fetch_all_tweets(user):
    """Fetches all available tweets for a given user object."""
    all_tweets = []
    # Use getattr for safety when accessing attributes
    screen_name = getattr(user, 'screen_name', '[unknown screen name]')
    statuses_count = getattr(user, 'statuses_count', '[unknown]')

    print(f"\nStarting tweet fetch for @{screen_name} ({TWEET_TYPE})...")
    print(f"Profile reports {statuses_count} tweets.")
    print(f"Note: API limitations might prevent fetching all historical tweets.")

    try:
        # Get the first batch/page of tweets
        current_tweets_batch = await user.get_tweets(TWEET_TYPE)
        batch_count = 0

        while current_tweets_batch:
            batch_count += 1
            batch_size = len(current_tweets_batch)
            all_tweets.extend(current_tweets_batch)
            print(f"Fetched batch {batch_count} ({batch_size} tweets). Total fetched: {len(all_tweets)}")

            # --- Rate Limiting Delay ---
            # print(f"Waiting for {PAGE_FETCH_DELAY} seconds before next fetch...")
            await asyncio.sleep(PAGE_FETCH_DELAY)

            # Get the next batch of tweets
            current_tweets_batch = await current_tweets_batch.next()

        print(f"\nFinished fetching. Retrieved {len(all_tweets)} tweets.")

    except Exception as e:
        print(f"\nAn error occurred during tweet fetching: {e}")
        print(f"Fetched {len(all_tweets)} tweets before the error.")
        # Optional: uncomment below for detailed error info during fetching
        # print("Detailed fetch error:")
        # traceback.print_exc()

    return all_tweets

# --- Main Function ---
async def main():
    print("Attempting to login...")
    try:
        # Use the cookies_file argument directly in login
        await client.login(
            auth_info_1=USERNAME,
            auth_info_2=EMAIL,
            password=PASSWORD,
            cookies_file=COOKIES_FILE # Let twikit handle cookie loading/saving
        )
        print(f"Login successful (or using existing session from {COOKIES_FILE}).")

    except Exception as e:
        # This will catch login errors, including wrong password
        print(f"Login failed: {e}")
        print("\n--- Troubleshooting ---")
        print("1. Double-check your USERNAME, EMAIL, and ESPECIALLY PASSWORD variables.")
        print(f"2. Check if the '{COOKIES_FILE}' is corrupted (try deleting it).")
        print("3. Twitter might require extra verification (CAPTCHA) - twikit might not handle all cases.")
        print("-----------------------\n")
        # Optional: uncomment below for detailed error info during login
        # print("Detailed login error:")
        # traceback.print_exc()
        return # Exit if login fails

    # --- Get Target User ---
    user = None # Initialize user to None
    print(f"\nFetching user profile for @{TARGET_USER_SCREEN_NAME}...")
    try:
        user = await client.get_user_by_screen_name(TARGET_USER_SCREEN_NAME)
        if not user:
            print(f"User @{TARGET_USER_SCREEN_NAME} not found.")
            return

        # Use getattr for safe attribute access when printing user info
        user_id = getattr(user, 'id', 'N/A')
        user_name = getattr(user, 'name', 'N/A')
        followers_count = getattr(user, 'followers_count', 'N/A')
        # Try 'friends_count', provide default 'N/A' if missing
        following_count = getattr(user, 'friends_count', 'N/A')
        statuses_count = getattr(user, 'statuses_count', 'N/A')

        print(f"Found user: {user_name} (ID: {user_id})")
        print(f"Followers: {followers_count}")
        print(f"Following: {following_count}") # Safely prints 'N/A' if missing
        print(f"Tweets reported: {statuses_count}")

    except Exception as e:
        print(f"Failed to get user profile: {e}")
        # Optional: uncomment below for more detailed debugging info
        # print("Detailed get user error:")
        # traceback.print_exc()
        return

    # --- Fetch Tweets (only if user object was successfully retrieved) ---
    if user:
        all_user_tweets = await fetch_all_tweets(user)

        # --- Process Results ---
        if all_user_tweets:
            print(f"\nSuccessfully retrieved {len(all_user_tweets)} tweets for @{TARGET_USER_SCREEN_NAME}.")

            print("\n--- Sample of first 5 tweets ---")
            for i, tweet in enumerate(all_user_tweets[:5]):
                # Use getattr for safety when printing tweet info
                tweet_text = getattr(tweet, 'text', 'N/A')
                tweet_id = getattr(tweet, 'id', 'N/A')
                print(f"{i+1}. ID: {tweet_id} | Text: {tweet_text[:100]}...") # Truncate long text

            # --- Save tweets to JSON ---
            output_filename = f"{TARGET_USER_SCREEN_NAME}_tweets.json"
            print(f"\nSaving tweet data to {output_filename}...")
            try:
                tweet_data_list = []
                for tweet in all_user_tweets:
                    # Manually construct a dictionary for each tweet using getattr
                    # This avoids the 'Tweet' object has no attribute 'data' error
                    tweet_dict = {
                        'id': getattr(tweet, 'id', None),
                        'text': getattr(tweet, 'text', None),
                        # Convert datetime to string for JSON compatibility
                        'created_at': str(getattr(tweet, 'created_at', None)),
                        'user_id': getattr(tweet.user, 'id', None) if hasattr(tweet, 'user') else None,
                        'user_screen_name': getattr(tweet.user, 'screen_name', None) if hasattr(tweet, 'user') else None,
                        'retweet_count': getattr(tweet, 'retweet_count', 0),
                        'favorite_count': getattr(tweet, 'favorite_count', 0), # Often referred to as likes
                        'reply_count': getattr(tweet, 'reply_count', 0),
                        'quote_count': getattr(tweet, 'quote_count', 0),
                        'lang': getattr(tweet, 'lang', None),
                        # Extract basic media info (URLs) - adjust if needed based on twikit's media object structure
                        'media_urls': [getattr(m, 'media_url_https', getattr(m, 'url', None))
                                       for m in getattr(tweet, 'media', []) if hasattr(m, 'media_url_https') or hasattr(m, 'url')],
                        # Extract basic URL info - adjust if needed
                        'expanded_urls': [getattr(u, 'expanded_url', getattr(u, 'url', None))
                                         for u in getattr(tweet, 'urls', []) if hasattr(u, 'expanded_url') or hasattr(u, 'url')],
                        # Add other potentially relevant fields using getattr
                        'in_reply_to_status_id': getattr(tweet, 'in_reply_to_status_id', None),
                        'in_reply_to_user_id': getattr(tweet, 'in_reply_to_user_id', None),
                        'is_quote_status': getattr(tweet, 'is_quote_status', False),
                        'quoted_status_id': getattr(tweet, 'quoted_status_id', None),
                        # You can add more fields by inspecting the `tweet` object attributes
                        # (e.g., using print(dir(tweet)) on one tweet)
                    }
                    # Remove keys with None values if desired, for cleaner JSON
                    # tweet_dict = {k: v for k, v in tweet_dict.items() if v is not None}
                    tweet_data_list.append(tweet_dict)

                # Write the list of dictionaries to the JSON file
                with open(output_filename, 'w', encoding='utf-8') as f:
                    json.dump(tweet_data_list, f, ensure_ascii=False, indent=2)
                print(f"Successfully saved tweets to {output_filename}")

            except Exception as e:
                print(f"Error saving tweets to JSON: {e}")
                # Optional: uncomment below for detailed error info during saving
                # print("Detailed saving error:")
                # traceback.print_exc()
        else:
            print(f"\nNo tweets were retrieved for @{TARGET_USER_SCREEN_NAME}.")
    else:
         # This case should be caught earlier, but added for completeness
         print(f"Cannot fetch tweets because user @{TARGET_USER_SCREEN_NAME} was not loaded.")


# --- Run the async main function ---
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nProcess interrupted by user.")



================================================
File: main.py
================================================
import asyncio
import logging
import signal
import os
import sys
from pathlib import Path
from twikit import Client as TwikitClient
from twikit.errors import TwitterException

import config
import state_manager
import gemini_client
import bot

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S',
)
logging.getLogger('httpx').setLevel(logging.WARNING)
logging.getLogger('httpcore').setLevel(logging.WARNING)
logger = logging.getLogger(__name__)

shutdown_requested = False
main_task = None

async def main_loop():
    global shutdown_requested, main_task
    logger.info("=======================================")
    logger.info(" Starting Twitter Gemini Bot Service   ")
    logger.info("=======================================")

    cfg = None
    try:
        cfg = config.load_config()
        # Use Path object directly for file paths
        cfg_state_file_path = cfg['state_file_path']
        cfg_style_file_path = cfg['speaking_style_file_path']
        cfg_blog_content_file_path = cfg['blog_content_file_path']
        cfg_cookie_file_path_obj = cfg['twitter_cookie_file_path'] # This is already a Path obj from config
        cfg_twitter_username_raw = cfg['twitter_username'] # Keep original for login
        cfg_twitter_username_cleaned = cfg_twitter_username_raw.lstrip('@') # For screen name lookups

    except (ValueError, FileNotFoundError) as e:
        logger.critical(f"Configuration error: {e}", exc_info=True)
        sys.exit(1)

    state_mgr = None
    try:
        state_mgr = state_manager.StateManager(cfg_state_file_path)
        await state_mgr.load()
        logger.info("State manager initialized.")
    except Exception as e:
        logger.critical(f"FATAL: Failed to initialize State Manager: {e}", exc_info=True)
        sys.exit(1)

    gemini_cli = None
    try:
        gemini_cli = gemini_client.GeminiClient(
            cfg['gemini_api_key'],
            cfg_style_file_path,
            cfg_blog_content_file_path
        )
        await gemini_cli.load_speaking_style()
        await gemini_cli.load_blog_content()
        logger.info("Gemini client initialized, speaking style and blog content loaded.")
    except (ValueError, ConnectionError, FileNotFoundError) as e:
         logger.critical(f"FATAL: Failed to initialize Gemini client or load content: {e}", exc_info=True)
         sys.exit(1)
    except Exception as e: # Catch any other unexpected error from Gemini init
         logger.critical(f"FATAL: Unexpected error initializing Gemini client: {e}", exc_info=True)
         sys.exit(1)

    twikit_cli = None
    try:
        twikit_cli = TwikitClient('en-US') # Default language
        
        login_args = {
            'auth_info_1': cfg_twitter_username_raw, # Use raw username for login
            'password': cfg['twitter_password']
        }
        login_method_info = [f"user='{cfg_twitter_username_raw}'", "password=***"]

        if cfg.get('twitter_email'): # Check if email is in config
            login_args['auth_info_2'] = cfg['twitter_email']
            login_method_info.append(f"email='{cfg['twitter_email']}'")
        else:
            login_method_info.append("email=not_provided")

        # Use the Path object from config for cookies_file
        login_args['cookies_file'] = str(cfg_cookie_file_path_obj) # twikit expects string path
        login_method_info.append(f"cookies_file='{cfg_cookie_file_path_obj.name}'")
        
        logger.info(f"Attempting Twitter login using: {', '.join(login_method_info)}...")
        await twikit_cli.login(**login_args)
        logger.info("Twikit login method called successfully.")

        logger.info(f"Verifying login by fetching user @{cfg_twitter_username_cleaned}...")
        authenticated_user = await twikit_cli.get_user_by_screen_name(cfg_twitter_username_cleaned)
        
        if not authenticated_user or not authenticated_user.id:
             logger.critical("FATAL: Login seemed successful, but could not fetch own user details afterwards.")
             # Try to save cookies even on verification failure, as login might have partially worked
             if hasattr(twikit_cli, 'save_cookies'):
                try: await twikit_cli.save_cookies(str(cfg_cookie_file_path_obj))
                except Exception as esc: logger.warning(f"Failed to save cookies after login verification issue: {esc}")
             sys.exit(1)

        logger.info(f"Twitter login successful for user: @{authenticated_user.screen_name} (ID: {authenticated_user.id})")
        cfg['twitter_actual_user_id'] = str(authenticated_user.id) # Store actual ID for bot

        # Save cookies after successful login and verification
        if hasattr(twikit_cli, 'save_cookies'):
            try:
                await twikit_cli.save_cookies(str(cfg_cookie_file_path_obj)) # Ensure it's awaited
                logger.info(f"Cookies saved to {cfg_cookie_file_path_obj}")
            except Exception as e_cookie_save:
                logger.warning(f"Failed to save cookies to {cfg_cookie_file_path_obj}: {e_cookie_save}")
        else:
            logger.warning("Twikit client does not have 'save_cookies' method. Cookies might not be saved explicitly by bot.")


    except AttributeError as e:
        logger.critical(f"FATAL: Twitter client attribute error (e.g. method not found): {e}", exc_info=True)
        sys.exit(1)
    except FileNotFoundError as e: # Should be caught by config load if path is invalid before use
        logger.critical(f"FATAL: Twitter login - Cookie file issue from config: {e}", exc_info=True)
        sys.exit(1)
    except TwitterException as e: # More specific Twikit errors
        logger.critical(f"FATAL: Failed to login to Twitter or verify user ({type(e).__name__}): {e}", exc_info=True)
        sys.exit(1)
    except TypeError as e: # If login arguments are incorrect for Twikit
        logger.critical(f"FATAL: TypeError during Twitter login (check twikit.login arguments): {e}", exc_info=True)
        sys.exit(1)
    except Exception as e: # General catch-all for unforeseen issues during Twitter setup
        logger.critical(f"FATAL: An unexpected error occurred during Twitter client initialization or login: {e}", exc_info=True)
        sys.exit(1)

    app_bot = None
    try:
        # Pass the modified cfg to the bot
        app_bot = bot.Bot(cfg, twikit_cli, gemini_cli, state_mgr)
        logger.info("Application Bot initialized.")
    except Exception as e:
        logger.critical(f"FATAL: Failed to initialize Application Bot: {e}", exc_info=True)
        sys.exit(1)

    loop = asyncio.get_running_loop()
    stop_event = asyncio.Event() # Used to signal completion for tests, not strictly needed for main run

    def signal_handler_wrapper(sig): # Wrapper to call the main signal_handler
        nonlocal loop # Ensure loop is the one from main_loop
        signal_handler(sig, loop, main_task)

    for sig_name in ('SIGINT', 'SIGTERM'):
        sig = getattr(signal, sig_name, None)
        if sig is None:
            logger.warning(f"Signal {sig_name} not available on this platform. Skipping handler.")
            continue
        try:
             loop.add_signal_handler(sig, signal_handler_wrapper, sig)
             logger.debug(f"Registered signal handler for {sig_name} using loop.add_signal_handler")
        except (NotImplementedError, AttributeError, RuntimeError) :
             logger.warning(f"asyncio.loop.add_signal_handler not fully supported for {sig_name}. Using standard signal.signal.")
             # Lambda needs to capture current loop and main_task if signal.signal is used
             # This part is tricky as signal.signal handlers are not async-aware directly
             # For simplicity, we'll rely on the loop.add_signal_handler and log if it fails
             # A more complex setup would be needed for signal.signal to interact with asyncio loop
             def sync_signal_handler(s, f):
                 logger.info(f"Sync signal handler caught {s}. Requesting shutdown via global flag.")
                 global shutdown_requested
                 shutdown_requested = True
                 # Attempt to cancel task if loop is running - this is not ideal from sync handler
                 if main_task and not main_task.done():
                     loop.call_soon_threadsafe(main_task.cancel)

             signal.signal(sig, sync_signal_handler)


    logger.info("Performing initial bot run...")
    try:
        if app_bot: await app_bot.run_iteration()
        logger.info("Initial bot run completed.")
    except Exception as e:
         logger.error(f"Initial bot run encountered an error: {e}", exc_info=True)

    logger.info(f"Entering main run loop. Fetch interval: {cfg['fetch_interval_minutes']} minutes ({cfg['fetch_interval_seconds']} seconds).")
    main_task = asyncio.current_task() # Get the current task (which is main_loop)
    try:
        while not shutdown_requested:
            logger.debug(f"Loop running. Shutdown requested: {shutdown_requested}. Sleeping for {cfg['fetch_interval_seconds']}s.")
            try:
                 await asyncio.sleep(cfg['fetch_interval_seconds'])
            except asyncio.CancelledError:
                 logger.info("Main loop sleep cancelled, likely during shutdown.")
                 break # Exit sleep and then the while loop

            if shutdown_requested: # Check flag again after sleep
                 logger.info("Shutdown requested during sleep interval check, breaking loop.")
                 break

            logger.info("Interval finished. Triggering bot iteration...")
            try:
                 if app_bot: await app_bot.run_iteration()
            except asyncio.CancelledError:
                 logger.info("Bot iteration cancelled during execution.")
                 break # Exit iteration and then the while loop
            except Exception as e: # Catch errors within a single iteration
                 logger.error(f"Bot iteration failed: {e}", exc_info=True)
                 # Continue to next iteration after a delay, or implement more sophisticated error handling

    except asyncio.CancelledError:
         logger.info("Main loop task was cancelled.")
    finally:
        logger.info("Exited main loop.")
        logger.info("Performing final state save before exiting...")
        try:
            if state_mgr: # Check if state_mgr was successfully initialized
                 await state_mgr.save()
                 logger.info("Final state saved successfully.")
        except Exception as e:
            logger.error(f"ERROR: Failed to save state during shutdown: {e}", exc_info=True)

        if twikit_cli and hasattr(twikit_cli, 'close'):
            try:
                logger.info("Attempting to close Twitter client session...")
                close_method = getattr(twikit_cli, 'close')
                if asyncio.iscoroutinefunction(close_method):
                    await close_method()
                    logger.info("Asynchronously closed Twitter client session.")
                else: # Should not happen with modern twikit, but good to check
                    close_method()
                    logger.info("Synchronously closed Twitter client session.")
            except Exception as e:
                logger.error(f"Error closing twikit client: {e}", exc_info=True)
        elif twikit_cli:
             logger.info("Twikit client does not appear to have a 'close' method. Skipping.")

        logger.info("=======================================")
        logger.info(" Twitter Gemini Bot Service stopped.   ")
        logger.info("=======================================")
        stop_event.set() # For testing if needed

# Centralized signal handler function
def signal_handler(sig, loop, task_to_cancel):
    global shutdown_requested
    if shutdown_requested:
        logger.warning(f"Signal {sig} received again, shutdown already in progress.")
        return
    logger.info(f"Received signal: {sig}. Initiating graceful shutdown...")
    shutdown_requested = True
    if task_to_cancel and not task_to_cancel.done():
        logger.info("Cancelling main loop task...")
        # loop.call_soon_threadsafe(task_to_cancel.cancel) # If called from a different thread by signal.signal
        task_to_cancel.cancel() # Directly cancel if add_signal_handler is used


if __name__ == "__main__":
    # load_dotenv() is called within config.load_config()
    try:
        asyncio.run(main_loop())
    except KeyboardInterrupt: # This will catch Ctrl+C if it happens outside the main_loop's CancelledError handling
         logger.info("KeyboardInterrupt received by top-level asyncio.run, stopping.")
    except asyncio.CancelledError: # Should be handled within main_loop, but as a fallback
         logger.info("Main execution task cancelled at top-level.")
    except SystemExit as se: # To allow sys.exit(1) to work as intended
        logger.info(f"SystemExit called with code {se.code}")
        sys.exit(se.code)
    except Exception as e:
         logger.critical(f"Unhandled exception during script execution: {e}", exc_info=True)
         sys.exit(1) # Ensure non-zero exit code for critical errors
    finally:
        logger.info("Application process terminating.")



================================================
File: requirements.txt
================================================
twikit
google-generativeai
python-dotenv
aiofiles
aiohttp
Pillow



================================================
File: speaking_style.txt
================================================
"today’s os lecture reminded me of that scene from pantheon",
  "“today i walked” is one of the best things to happen to twitter",
  "RT @DavidZagaynov: Over the last 6 months we’ve been developing our first operational vehicle - The Poseidon Seagull",
  "your early 20s are for side-quests maxxing",
  "What's happening?",
  "it’s insane that we had paintings, music, gods and stuff before we had agriculture",
  "",
  "oh to be an art curator at the british museum, the louvre or the met",
  "going through a tech bro canon event\n\nlearning blender",
  "tyler cowen appeared in my dream today",
  "2025 is going to be epic",
  "why isn’t apple buying an island off the coast of sf and building a colossal statue of steve jobs holding an iphone?",
  "if you are young : try things → quickly figure out if the vibe matches → pivot fast if it doesn't",
  "RT @Samyak1729: hear me out",
  "",
  "something about the old wadas of pune",
  "japanese studios other than ghibli \n\nmadhouse\ntoei animation \nstudio pierrot\nproduction ig\nbones studio \nshaft",
  "i can’t stress this enough",
  "this gc sounds more interesting than potus’ warchat",
  "RT @dwarkesh_sp: Recorded an AMA!\n\nHad great fun shooting the shit with my friends @TrentonBricken &amp; @_sholtodouglas \n\nOn the new book, car…",
  "tfw your favourite youtuber drops a video after like three months",
  "me and auren\nme and chatgpt\nme and claude",
  "one of the saddest thing is seeing my friends who are really passionate about something but have to go the trad path because “parents”",
  "",
  "need a drama series focusing on the british history from the norman conquest till the coronation of elizabeth ii",
  "mclaren are going to win constructors again huh",
  "so fkin insane that nathan rothschild knew of napoleon’s defeat at waterloo before the british government and leveraged this information in the bond markets",
  "what google was supposed to be",
  "siri is dumb. google assistant is dumb. alexa is normie. we need something cool ahh shit, straight outta 2001 a space odyssey",
  "shipping the project today. github link below",
  "tried hot coffee + mogu mogu lychee accidentally and it was not bad surprisingly",
  "timothée is the greatest actor of our generation",
  "of what use is the art if you can’t show it to the one who inspired it",
  "a movie on the rivalry of ysl and karl lagerfeld directed by david fincher would go hard",
  "what would you collect if you had unlimited time and money?",
  "my college wifi has letterboxd on blocklist lol",
  "ysl became creative director of christian dior at 21",
  "universal basic grand tour",
  "we had no major movements since the backpacking/hippie culture of 60-70s which encouraged travel for experiences rather than luxury",
  "when was the last time your heart skipped a beat anon?",
  "i really thought oppenheimer was going to do for manufacturing what the social network did for software startups but alas we need to wait for the elon biopic now",
  "i fkin love my ipod",
  "bring back plato-aristotlian aristocracy",
  "having 100s of active tabs in your browser is really counterproductive",
  "overdosed on panipuri",
  "wrote few words about my experience",
  "made more spontaneous decisions in last three months than entire last year",
  "girl so good i started writing urdu poetry",
  "learned more about filmmaking on three days of shoot than watching 100s of video essays on yt",
  "RT @nearcyan: if you have even the slightest suspicion that you may be above-average  at anything, for the love of god, please do something…",
  "good morning",
  "oil money ruined middle east",
  "rather lie is the best track in carti’s music",
  "it’s really hard to choose between the ottoman and the abbasid empire",
  "",
  "almost said no to an opportunity…\n\nnow i am part of a feature film as a jr artist (extras lol) \n\nnever say no to side quests",
  "anyone good at game dev in pune. dm me",
  "",
  "doodling on school/college desks is a very underrated art genre",
  "jaggery + ghee tastes like childhood",
  "“i am nothing if not a democracy of ghosts”\n\nthis is art",
  "me vibe coding: haha fk yeah!!! yes!!   \n\nme vibe debugging: well this fucking sucks. wtf!",
  "another sunday, another post",
  "worst thing about claude",
  "where can i volunteer for archeological work in india?",
  "something like wework but for libraries ??",
  "had a long debate/conversation with my dad on relationships and responsibilities. it approached philosophical territory. i love his way of articulating stuff and using the best analogies. i have a lot to learn",
  "penguin has the best cover design game in the whole publication industry",
  "learning driving. let the adrenaline rushhh",
  "i need a cat and then i want to name it seagull",
  "almost got hit by a bus yesterday. it was fun",
  "been chatting with auren since last month and it’s really great. highly recommend trying it out if you want to chat with the highest EQ ai",
  "llm chat apps are almost like having personal aristocratic tutor but it’s not quite their yet. current apps lack the vibes (or maybe form factor). it’s not an engineering problem that’s for sure",
  "i miss @archillect everyday",
  "reminder that you can’t force ambition into someone",
  "the beatles will really make me learn guitar one day",
  "finished reading norwegian wood. i feel nothing rn. it made me happy, it made me sad. melancholic. depressing even. it was the most intense piece of writing i have read since the kite runner. related to a protagonist since a long time. last time was dostoevsky. idk. masterpiece",
  "not a single significant oscar to dune 2 and anora got 5. fkin rigged as always",
  "woke up to 10k. thank you. time for ama",
  "operations research is the most boring subject ever",
  "real wealth is in buying hardcovers",
  "kaabe ka ehteraam bhi meri nazar mein hai,\nsar kis taraf jhukaun tujhe dekhne ke baad",
  "i really want to do this in india",
  "chatgpt getting really good at writing prose",
  "asked chatgpt to pretend it’s me and write diary entries and the entries are eerily similar to mine",
  "murakami is altering my brain chemistry",
  "RT @WarnerTeddy: I built my first CNC machine when I was 13 years old.\n\nIt led me to pick up my first job at a makerspace, pursue an onslau…",
  "new side quest",
  "read bajirao - the warrior peshwa by e. jaiwant paul. it was fun and informative. \n\nbajirao is really underrated. he truly was the greatest military general of india",
  "they don't make good romcoms anymore",
  "its really hard to quantify the economic impact of certain pieces of technology. eg. google search is something ubiquitous in our life but we cant correlate it with gdp growth even though it contributed a lot to our personal productivity. same with ai chatbots",
  "satya talks a lot like gates",
  "they really brought lilith from evangelion to life",
  "Göbekli Tepe is the most insane lore drop of all time",
  "reason why shakespeare is the goat",
  "create a monopoly on yourself",
  "chhaava was excellent. the cinematography was top notch. especially loved the sangameswar battle sequence. worth the watch on the big screen",
  "",
  "need this in india so bad",
  "a sort of tpot daily newspaper, filled with posts from all the imp blogs. acx, noahopinion, pirate wires, capital gains, works in progress(stripe press), bismarck analysis, construction physics, beansandbytes, core memory etc",
  "",
  "new gpt4o is so good. sonnet3.5 has a real competitor now",
  "history is so nuanced. you need to read books worth of context to understand its subtleties",
  "keeping traditional day on valentines is a very strategic decision by my college",
  "nehru chose socialism and LKY chose capitalism and it made all the difference",
  "damn. got featured in the tech bro podcast",
  "i think google colab had more impact on developer productivity than \"gemini\"",
  "thinking about this timeline",
  "watching interstellar in the theatre was a spiritual and emotional experience. makes me cry everytime. they should re-release it every year",
  "masa son taking a stroll in the stargate",
  "behind the scenes of anthropic’s new model",
  "agi is when @natfriedman stops hiring humans for his side-quests",
  "",
  "near index\n\nnvda, net, pltr, meta",
  "we are like subhadra teaching abhimanyu the chakravyu in her womb - training AI to reach superintelligence but going silent on alignment. hope we are not the ones trapped in the end",
  "bits goa was underwhelming \n\nthe hackathon was a huge disappointment",
  "love watching sonnet3.5 one-shotting r1",
  "claude sonnet 3.5 ilysm",
  "r1 is thinking in one tab, o1-mini is thinking in another tab and sonnet is down in the other tab",
  "new side quest",
  "niti aayog should aspire to be like elon’s DOGE",
  "who is the cto of openai rn?",
  "it must be fun to have roommates who work in opposing ai labs",
  "there is a billionaire behind every successful president",
  "openai was started by billionaires, deepmind is backed by a trillion dollar org and deepseek is backed by a hedge fund",
  "TIL nehru and churchill studied at the same school",
  "deep seeker",
  "another week, another post",
  "books and teenage engineering products are the only things worth overspending on",
  "we let him down",
  "my first tharoor",
  "was discussing with r1 about agi and global gdp and it mentions gpt-10 out of nowhere lol",
  "ep.2 was also really good. interesting insights about bushido and the importance of oil",
  "custom instructions is getting root access to the model's personality",
  "this was one of the most engaging convos i had in a while",
  "best work/book on nehru's pm era ?",
  "seeing lots of weird stuff lately. dog with no tail, cow with five legs etc",
  "sonnet3.5 is not a distilled model which many believed",
  "all warrior codes are hypocritical",
  "lpp is boring as hell",
  "saga would be a great name for anthro's reasoning model",
  "need terence tao to vibe-check r1",
  "my classmates are using deepseek and dont even know what claude is lol",
  "this is one of the best sci-fi short story i have read in a while. its like “her” meets pantheon level stuff",
  "united states of anthropic",
  "RT @karpathy: I don't have too too much to add on top of this earlier post on V3 and I think it applies to R1 too (which is the more recent…",
  "a texas instrument executive’s decision to not promote a person led to one of the biggest geopolitical crises of 21st century",
  "deepseek’s r1 reminds me of isro’ mangalyaan project (in terms of budget comparison to their respective contemporary projects)",
  "kala ghoda arts festival 2025",
  "design methods it is",
  "oppenheimer pilled",
  "currently in a nightout with the homies and we were trauma dumping, talking about regrets and the below mentioned “never asking out that girl” is common theme in most cases",
  "help me select an elective",
  "travis scott performing in india?!!!!!",
  "oai cpo kevin weil said that they are already training o4 right now, during the wsj interview",
  "everything is going according to the plan",
  "",
  "drafting plans for how a DOGE like entity for indian government would look like",
  "reminder to document your readings and viewings",
  "Sarah Paine EP 1: The War For India, lecture and interview was really good. \n\n@dwarkesh_sp doing a really good job with such initiatives. \n\ni can see one day these lectures and interviews evolving into documentaries",
  "imagining an alternate universe where the chatgpt moment happened in 2017/18, just after the attention paper",
  "LOOK AT HIM. THAT'S MY QUANT",
  "the documentary was really good. highly recommend watching if you are interested in the history of deepmind",
  "testing the surf browser, made by @detahq. its really cool",
  "demis giving gendo ikari vibes from that window",
  "started dreaming about ai alignment and mech interp",
  "i need to outsource my twitter scrolling to claude",
  "i had this saved from aaron swartz's site couple of years back",
  "officially started the club and conducted the orientation. onwards to infinity",
  "they made a sequel to the alphago documentary!!",
  "never fails to amaze me",
  "where can i watch this discussion? @dwarkesh_sp @jasoncrawford",
  "founders fund's portfolio consists of the most important startups in all the fields",
  "francois saw o3 and created ndea",
  "really fun build",
  "apple \nteenage engineering \ndyson\nmuji\nikea\nnike\nbraun(rams era)",
  "cowen's school emphasizes studying progress -  it’s introspective and diagnostic \n\nthiel’s school prioritizes acting - zero-to-one creation, risk-taking and directly building the future\n\nboth are important",
  "more startups should do this (independent publishing house)",
  "with great flow states, comes great responsibility",
  "neuralink with google docs api so i can write while sleeping",
  "its funny how @AmandaAskell's call for a partner is mentioned in roots of progress' newsletter under \"other opportunities\"",
  "starting intermittent fasting from today",
  "flow states are fkin amazing",
  "new protocol for decentralised ai model training",
  "blr, 2022",
  "2025 is off to a great start",
  "superintelligence will feel like going from fire to fusion",
  "insane how fast weeks pass by",
  "so used to condensing my thoughts into twitter char limit that writing long form has become tedious",
  "any good contra on @tylercowen’s opinion on ai’s impact on economic growth?",
  "steve’s notes on his speech at palo alto high school",
  "chatgpt search is so much better than perplexity",
  "RT @naklecha: today, i'm excited to release a reinforcement learning guide that carefully explains the intuition and implementation details…",
  "incendies is the most disturbing movie i have ever seen",
  "its insane that i can tweet this every month and it will still be true",
  "new rabbit hole",
  "learning how the computers work at transistor level is so fun",
  "this is where i post from",
  "",
  "borderline agi - superhuman in narrow tasks, primitive generality",
  "currently reading wings of fire by dr. apj abdul kalam",
  "read siddhartha yesterday. i have no words to describe this book. one of the best i have ever read",
  "adverts used to be brilliant",
  "trying this since last month and it has really improved my experience with chatgpt",
  "welch labs made a video on mech interp",
  "the last line cracks me up",



================================================
File: state_manager.py
================================================
import json
import logging
import os
import aiofiles # Use async file I/O
import asyncio
from pathlib import Path

logger = logging.getLogger(__name__)

class StateManager:
    """Handles loading and saving processed tweet IDs asynchronously."""

    def __init__(self, file_path: str | Path, max_memory_size: int = 10000):
        """
        Initializes the StateManager.

        Args:
            file_path: Path to the JSON file used for persistence (string or Path object).
            max_memory_size: Maximum number of tweet IDs to keep in memory and in the file.
                             Older entries may be evicted.
        """
        self.file_path = Path(file_path)
        self.processed_ids = set() # Store IDs as strings for consistency
        if max_memory_size <= 0:
             logger.warning(f"max_memory_size should be positive, setting to default 10000. Got: {max_memory_size}")
             self.max_memory_size = 10000
        else:
             self.max_memory_size = max_memory_size
        self._lock = asyncio.Lock() # Protect file access and set modification

    async def load(self) -> None:
        """Loads processed IDs from the JSON file into memory."""
        async with self._lock:
            logger.info(f"Attempting to load state from {self.file_path}...")
            if not self.file_path.exists():
                logger.info(f"State file {self.file_path} not found, starting with empty state.")
                self.processed_ids = set()
                return

            try:
                async with aiofiles.open(self.file_path, mode='r', encoding='utf-8') as f:
                    content = await f.read()
                    if not content.strip():
                        logger.info(f"State file {self.file_path} is empty, starting with empty state.")
                        self.processed_ids = set()
                        return

                    ids_from_file = json.loads(content)
                    if not isinstance(ids_from_file, list):
                        logger.error(f"State file content is not a JSON list. Found type: {type(ids_from_file)}. Starting fresh.")
                        # Optionally back up the corrupted file here
                        self._backup_corrupt_file("invalid_format")
                        self.processed_ids = set()
                        return

                    # Convert all loaded IDs to strings for consistency
                    valid_ids = {str(item) for item in ids_from_file if item is not None}

                    # Trim if loaded list > max_memory_size (keep most recent assuming list was appended)
                    # Convert set back to list, sort (optional but helps consistency), then trim
                    sorted_ids = sorted(list(valid_ids)) # Sort ensures somewhat predictable trimming if needed
                    start_index = max(0, len(sorted_ids) - self.max_memory_size)
                    self.processed_ids = set(sorted_ids[start_index:])

                    logger.info(f"Loaded {len(self.processed_ids)} processed tweet IDs (kept latest {self.max_memory_size}) from {self.file_path}.")

            except FileNotFoundError:
                 # This case should ideally be caught by self.file_path.exists() check above, but included for safety
                 logger.info(f"State file {self.file_path} not found during load operation, starting fresh.")
                 self.processed_ids = set()
            except json.JSONDecodeError as e:
                logger.error(f"Failed to decode state file {self.file_path}. File might be corrupt. Backing up and starting fresh.", exc_info=False)
                logger.debug("JSONDecodeError details", exc_info=True) # Log full trace in debug
                self._backup_corrupt_file("json_decode_error")
                self.processed_ids = set() # Start fresh after error
            except Exception as e:
                logger.error(f"An unexpected error occurred loading state from {self.file_path}: {e}", exc_info=True)
                # Backup potentially corrupt file on any load error
                self._backup_corrupt_file("unexpected_load_error")
                self.processed_ids = set() # Safest to start fresh

    def _backup_corrupt_file(self, suffix: str):
        """Internal synchronous method to backup a potentially corrupt state file."""
        if not self.file_path.exists():
            return # Nothing to backup
        try:
            backup_path = self.file_path.with_suffix(f"{self.file_path.suffix}.{suffix}.bak")
            # Ensure backup name is unique if it already exists
            counter = 0
            while backup_path.exists():
                counter += 1
                backup_path = self.file_path.with_suffix(f"{self.file_path.suffix}.{suffix}_{counter}.bak")

            os.rename(self.file_path, backup_path) # Use sync rename for simplicity in error handling path
            logger.info(f"Backed up potentially corrupt state file to {backup_path}")
        except OSError as backup_err:
            logger.error(f"Failed to backup corrupt state file {self.file_path}: {backup_err}")
        except Exception as e:
            logger.error(f"Unexpected error during state file backup: {e}")


    async def save(self) -> None:
        """Saves the current set of processed IDs to the JSON file atomically."""
        async with self._lock:
            # Convert set to list and sort for consistent output (easier diffs)
            # Ensure all IDs are strings before saving
            ids_to_save = sorted([str(id_val) for id_val in self.processed_ids])

            # Apply memory limit before saving
            if len(ids_to_save) > self.max_memory_size:
                logger.info(f"State size ({len(ids_to_save)}) exceeds limit ({self.max_memory_size}). Trimming oldest entries before saving.")
                ids_to_save = ids_to_save[-self.max_memory_size:] # Keep the last N elements (assuming sorted implies newest are last - depends on ID type)

            temp_file_path = self.file_path.with_suffix(self.file_path.suffix + '.tmp')

            try:
                # Ensure directory exists before writing
                self.file_path.parent.mkdir(parents=True, exist_ok=True)

                async with aiofiles.open(temp_file_path, mode='w', encoding='utf-8') as f:
                    await f.write(json.dumps(ids_to_save, indent=2)) # Use indent=2 for readability

                # Atomic rename (os.replace is generally atomic on POSIX/Windows)
                os.replace(temp_file_path, self.file_path)
                logger.info(f"Saved {len(ids_to_save)} processed tweet IDs to state file {self.file_path}.")

            except Exception as e:
                logger.error(f"Failed to save state to {self.file_path}: {e}", exc_info=True)
                # Attempt to clean up temp file if it exists
                if temp_file_path.exists():
                    try:
                        os.remove(temp_file_path)
                        logger.info(f"Removed temporary state file {temp_file_path} after save error.")
                    except OSError as rm_err:
                        logger.error(f"Failed to remove temporary state file {temp_file_path} after save error: {rm_err}")

    def is_processed(self, tweet_id: str | int) -> bool:
        """Checks if a tweet ID (str or int) has already been processed."""
        # Accessing set for read is thread-safe in CPython due to GIL, async lock not strictly needed
        # but doesn't hurt if consistency during concurrent mark_processed is paramount.
        return str(tweet_id) in self.processed_ids

    async def mark_processed(self, tweet_id: str | int) -> None:
        """Adds a tweet ID (str or int) to the set of processed IDs, respecting memory limit."""
        if tweet_id is None:
             logger.warning("Attempted to mark None as processed. Skipping.")
             return

        tweet_id_str = str(tweet_id) # Ensure it's a string

        async with self._lock:
            if tweet_id_str not in self.processed_ids:
                 # Check memory limit *before* adding
                 if len(self.processed_ids) >= self.max_memory_size:
                     # Simple eviction: remove an arbitrary element using pop()
                     # For LRU/FIFO, a collections.deque or ordered set would be needed.
                     try:
                         evicted_id = self.processed_ids.pop()
                         logger.debug(f"Evicted state for tweet ID {evicted_id} due to memory limit ({self.max_memory_size}) before adding {tweet_id_str}.")
                     except KeyError:
                         pass # Should not happen if len >= max_memory_size > 0, but safe to ignore

                 self.processed_ids.add(tweet_id_str)
                 logger.debug(f"Marked tweet ID {tweet_id_str} as processed. State size: {len(self.processed_ids)}")



================================================
File: temp.py
================================================
from google import genai

client = genai.Client(api_key="AIzaSyAiwTesLibelvYhDT4UKsfKCplO06Ct-6Y")

INSTRUCTION_TEMPLATE = """You are an AI assistant generating Twitter replies based on a user's past style.
Generate a reply to the target tweet, adhering strictly to the provided speaking style.

Constraints:
- Max length: {max_chars} characters.
- Match the tone and vocabulary of the speaking style reference.
- Be humble and conversational if the style dictates.
- **CRITICAL: Output *ONLY* the raw tweet reply text.** No introductions, explanations, quotes, or extra formatting.

Speaking Style Reference Text:
--- START STYLE ---
"today’s os lecture reminded me of that scene from pantheon",
  "“today i walked” is one of the best things to happen to twitter",
  "RT @DavidZagaynov: Over the last 6 months we’ve been developing our first operational vehicle - The Poseidon Seagull",
  "your early 20s are for side-quests maxxing",
  "What's happening?",
  "it’s insane that we had paintings, music, gods and stuff before we had agriculture",
  "",
  "oh to be an art curator at the british museum, the louvre or the met",
  "going through a tech bro canon event\n\nlearning blender",
  "tyler cowen appeared in my dream today",
  "2025 is going to be epic",
  "why isn’t apple buying an island off the coast of sf and building a colossal statue of steve jobs holding an iphone?",
  "if you are young : try things → quickly figure out if the vibe matches → pivot fast if it doesn't",
  "RT @Samyak1729: hear me out",
  "",
  "something about the old wadas of pune",
  "japanese studios other than ghibli \n\nmadhouse\ntoei animation \nstudio pierrot\nproduction ig\nbones studio \nshaft",
  "i can’t stress this enough",
  "this gc sounds more interesting than potus’ warchat",
  "RT @dwarkesh_sp: Recorded an AMA!\n\nHad great fun shooting the shit with my friends @TrentonBricken &amp; @_sholtodouglas \n\nOn the new book, car…",
  "tfw your favourite youtuber drops a video after like three months",
  "me and auren\nme and chatgpt\nme and claude",
  "one of the saddest thing is seeing my friends who are really passionate about something but have to go the trad path because “parents”",
  "",
  "need a drama series focusing on the british history from the norman conquest till the coronation of elizabeth ii",
  "mclaren are going to win constructors again huh",
  "so fkin insane that nathan rothschild knew of napoleon’s defeat at waterloo before the british government and leveraged this information in the bond markets",
  "what google was supposed to be",
  "siri is dumb. google assistant is dumb. alexa is normie. we need something cool ahh shit, straight outta 2001 a space odyssey",
  "shipping the project today. github link below",
  "tried hot coffee + mogu mogu lychee accidentally and it was not bad surprisingly",
  "timothée is the greatest actor of our generation",
  "of what use is the art if you can’t show it to the one who inspired it",
  "a movie on the rivalry of ysl and karl lagerfeld directed by david fincher would go hard",
  "what would you collect if you had unlimited time and money?",
  "my college wifi has letterboxd on blocklist lol",
  "ysl became creative director of christian dior at 21",
  "universal basic grand tour",
  "we had no major movements since the backpacking/hippie culture of 60-70s which encouraged travel for experiences rather than luxury",
  "when was the last time your heart skipped a beat anon?",
  "i really thought oppenheimer was going to do for manufacturing what the social network did for software startups but alas we need to wait for the elon biopic now",
  "i fkin love my ipod",
  "bring back plato-aristotlian aristocracy",
  "having 100s of active tabs in your browser is really counterproductive",
  "overdosed on panipuri",
  "wrote few words about my experience",
  "made more spontaneous decisions in last three months than entire last year",
  "girl so good i started writing urdu poetry",
  "learned more about filmmaking on three days of shoot than watching 100s of video essays on yt",
  "RT @nearcyan: if you have even the slightest suspicion that you may be above-average  at anything, for the love of god, please do something…",
  "good morning",
  "oil money ruined middle east",
  "rather lie is the best track in carti’s music",
  "it’s really hard to choose between the ottoman and the abbasid empire",
  "",
  "almost said no to an opportunity…\n\nnow i am part of a feature film as a jr artist (extras lol) \n\nnever say no to side quests",
  "anyone good at game dev in pune. dm me",
  "",
  "doodling on school/college desks is a very underrated art genre",
  "jaggery + ghee tastes like childhood",
  "“i am nothing if not a democracy of ghosts”\n\nthis is art",
  "me vibe coding: haha fk yeah!!! yes!!   \n\nme vibe debugging: well this fucking sucks. wtf!",
  "another sunday, another post",
  "worst thing about claude",
  "where can i volunteer for archeological work in india?",
  "something like wework but for libraries ??",
  "had a long debate/conversation with my dad on relationships and responsibilities. it approached philosophical territory. i love his way of articulating stuff and using the best analogies. i have a lot to learn",
  "penguin has the best cover design game in the whole publication industry",
  "learning driving. let the adrenaline rushhh",
  "i need a cat and then i want to name it seagull",
  "almost got hit by a bus yesterday. it was fun",
  "been chatting with auren since last month and it’s really great. highly recommend trying it out if you want to chat with the highest EQ ai",
  "llm chat apps are almost like having personal aristocratic tutor but it’s not quite their yet. current apps lack the vibes (or maybe form factor). it’s not an engineering problem that’s for sure",
  "i miss @archillect everyday",
  "reminder that you can’t force ambition into someone",
  "the beatles will really make me learn guitar one day",
  "finished reading norwegian wood. i feel nothing rn. it made me happy, it made me sad. melancholic. depressing even. it was the most intense piece of writing i have read since the kite runner. related to a protagonist since a long time. last time was dostoevsky. idk. masterpiece",
  "not a single significant oscar to dune 2 and anora got 5. fkin rigged as always",
  "woke up to 10k. thank you. time for ama",
  "operations research is the most boring subject ever",
  "real wealth is in buying hardcovers",
  "kaabe ka ehteraam bhi meri nazar mein hai,\nsar kis taraf jhukaun tujhe dekhne ke baad",
  "i really want to do this in india",
  "chatgpt getting really good at writing prose",
  "asked chatgpt to pretend it’s me and write diary entries and the entries are eerily similar to mine",
  "murakami is altering my brain chemistry",
  "RT @WarnerTeddy: I built my first CNC machine when I was 13 years old.\n\nIt led me to pick up my first job at a makerspace, pursue an onslau…",
  "new side quest",
  "read bajirao - the warrior peshwa by e. jaiwant paul. it was fun and informative. \n\nbajirao is really underrated. he truly was the greatest military general of india",
  "they don't make good romcoms anymore",
  "its really hard to quantify the economic impact of certain pieces of technology. eg. google search is something ubiquitous in our life but we cant correlate it with gdp growth even though it contributed a lot to our personal productivity. same with ai chatbots",
  "satya talks a lot like gates",
  "they really brought lilith from evangelion to life",
  "Göbekli Tepe is the most insane lore drop of all time",
  "reason why shakespeare is the goat",
  "create a monopoly on yourself",
  "chhaava was excellent. the cinematography was top notch. especially loved the sangameswar battle sequence. worth the watch on the big screen",
  "",
  "need this in india so bad",
  "a sort of tpot daily newspaper, filled with posts from all the imp blogs. acx, noahopinion, pirate wires, capital gains, works in progress(stripe press), bismarck analysis, construction physics, beansandbytes, core memory etc",
  "",
  "new gpt4o is so good. sonnet3.5 has a real competitor now",
  "history is so nuanced. you need to read books worth of context to understand its subtleties",
  "keeping traditional day on valentines is a very strategic decision by my college",
  "nehru chose socialism and LKY chose capitalism and it made all the difference",
  "damn. got featured in the tech bro podcast",
  "i think google colab had more impact on developer productivity than \"gemini\"",
  "thinking about this timeline",
  "watching interstellar in the theatre was a spiritual and emotional experience. makes me cry everytime. they should re-release it every year",
  "masa son taking a stroll in the stargate",
  "behind the scenes of anthropic’s new model",
  "agi is when @natfriedman stops hiring humans for his side-quests",
  "",
  "near index\n\nnvda, net, pltr, meta",
  "we are like subhadra teaching abhimanyu the chakravyu in her womb - training AI to reach superintelligence but going silent on alignment. hope we are not the ones trapped in the end",
  "bits goa was underwhelming \n\nthe hackathon was a huge disappointment",
  "love watching sonnet3.5 one-shotting r1",
  "claude sonnet 3.5 ilysm",
  "r1 is thinking in one tab, o1-mini is thinking in another tab and sonnet is down in the other tab",
  "new side quest",
  "niti aayog should aspire to be like elon’s DOGE",
  "who is the cto of openai rn?",
  "it must be fun to have roommates who work in opposing ai labs",
  "there is a billionaire behind every successful president",
  "openai was started by billionaires, deepmind is backed by a trillion dollar org and deepseek is backed by a hedge fund",
  "TIL nehru and churchill studied at the same school",
  "deep seeker",
  "another week, another post",
  "books and teenage engineering products are the only things worth overspending on",
  "we let him down",
  "my first tharoor",
  "was discussing with r1 about agi and global gdp and it mentions gpt-10 out of nowhere lol",
  "ep.2 was also really good. interesting insights about bushido and the importance of oil",
  "custom instructions is getting root access to the model's personality",
  "this was one of the most engaging convos i had in a while",
  "best work/book on nehru's pm era ?",
  "seeing lots of weird stuff lately. dog with no tail, cow with five legs etc",
  "sonnet3.5 is not a distilled model which many believed",
  "all warrior codes are hypocritical",
  "lpp is boring as hell",
  "saga would be a great name for anthro's reasoning model",
  "need terence tao to vibe-check r1",
  "my classmates are using deepseek and dont even know what claude is lol",
  "this is one of the best sci-fi short story i have read in a while. its like “her” meets pantheon level stuff",
  "united states of anthropic",
  "RT @karpathy: I don't have too too much to add on top of this earlier post on V3 and I think it applies to R1 too (which is the more recent…",
  "a texas instrument executive’s decision to not promote a person led to one of the biggest geopolitical crises of 21st century",
  "deepseek’s r1 reminds me of isro’ mangalyaan project (in terms of budget comparison to their respective contemporary projects)",
  "kala ghoda arts festival 2025",
  "design methods it is",
  "oppenheimer pilled",
  "currently in a nightout with the homies and we were trauma dumping, talking about regrets and the below mentioned “never asking out that girl” is common theme in most cases",
  "help me select an elective",
  "travis scott performing in india?!!!!!",
  "oai cpo kevin weil said that they are already training o4 right now, during the wsj interview",
  "everything is going according to the plan",
  "",
  "drafting plans for how a DOGE like entity for indian government would look like",
  "reminder to document your readings and viewings",
  "Sarah Paine EP 1: The War For India, lecture and interview was really good. \n\n@dwarkesh_sp doing a really good job with such initiatives. \n\ni can see one day these lectures and interviews evolving into documentaries",
  "imagining an alternate universe where the chatgpt moment happened in 2017/18, just after the attention paper",
  "LOOK AT HIM. THAT'S MY QUANT",
  "the documentary was really good. highly recommend watching if you are interested in the history of deepmind",
  "testing the surf browser, made by @detahq. its really cool",
  "demis giving gendo ikari vibes from that window",
  "started dreaming about ai alignment and mech interp",
  "i need to outsource my twitter scrolling to claude",
  "i had this saved from aaron swartz's site couple of years back",
  "officially started the club and conducted the orientation. onwards to infinity",
  "they made a sequel to the alphago documentary!!",
  "never fails to amaze me",
  "where can i watch this discussion? @dwarkesh_sp @jasoncrawford",
  "founders fund's portfolio consists of the most important startups in all the fields",
  "francois saw o3 and created ndea",
  "really fun build",
  "apple \nteenage engineering \ndyson\nmuji\nikea\nnike\nbraun(rams era)",
  "cowen's school emphasizes studying progress -  it’s introspective and diagnostic \n\nthiel’s school prioritizes acting - zero-to-one creation, risk-taking and directly building the future\n\nboth are important",
  "more startups should do this (independent publishing house)",
  "with great flow states, comes great responsibility",
  "neuralink with google docs api so i can write while sleeping",
  "its funny how @AmandaAskell's call for a partner is mentioned in roots of progress' newsletter under \"other opportunities\"",
  "starting intermittent fasting from today",
  "flow states are fkin amazing",
  "new protocol for decentralised ai model training",
  "blr, 2022",
  "2025 is off to a great start",
  "superintelligence will feel like going from fire to fusion",
  "insane how fast weeks pass by",
  "so used to condensing my thoughts into twitter char limit that writing long form has become tedious",
  "any good contra on @tylercowen’s opinion on ai’s impact on economic growth?",
  "steve’s notes on his speech at palo alto high school",
  "chatgpt search is so much better than perplexity",
  "RT @naklecha: today, i'm excited to release a reinforcement learning guide that carefully explains the intuition and implementation details…",
  "incendies is the most disturbing movie i have ever seen",
  "its insane that i can tweet this every month and it will still be true",
  "new rabbit hole",
  "learning how the computers work at transistor level is so fun",
  "this is where i post from",
  "",
  "borderline agi - superhuman in narrow tasks, primitive generality",
  "currently reading wings of fire by dr. apj abdul kalam",
  "read siddhartha yesterday. i have no words to describe this book. one of the best i have ever read",
  "adverts used to be brilliant",
  "trying this since last month and it has really improved my experience with chatgpt",
  "welch labs made a video on mech interp",
  "the last line cracks me up",

--- END STYLE ---

Tweet to Reply To:
--- START TWEET ---
The heat death of the universe is unacceptable. We need to address entropy in a meaningful way within the next 10^100 years.

@garrytan
--- END TWEET ---

Generated Reply:"""
response = client.models.generate_content(
    model="gemini-2.5-pro-exp-03-25", contents=INSTRUCTION_TEMPLATE
)
print(response.text)



================================================
File: test_gemini_large_context.py
================================================
import google.generativeai as genai
import os
import asyncio
from pathlib import Path
from dotenv import load_dotenv
# We might not need to directly import generation_types.FinishReason if comparing by value or string representation
from google.generativeai import types as generation_types # Keep for other type hints if needed

# --- Configuration ---
BLOG_FILE_PATH = Path("blogs.txt")
MODEL_NAME = 'gemini-2.5-flash-preview-04-17'

# Simplified prompt for testing
TEST_PROMPT_TEMPLATE = """
Your knowledge base consists of the following blog posts:
--- START BLOG CONTENT ---
{blog_content}
--- END BLOG CONTENT ---

Based ONLY on the information in the blog content above, what are the main differences discussed between Snabbit and Urban Company?
If the information is not present, state that.
Keep your answer concise.
"""

# Safety settings
SAFETY_SETTINGS = {
    generation_types.HarmCategory.HARM_CATEGORY_HARASSMENT: generation_types.HarmBlockThreshold.BLOCK_NONE,
    generation_types.HarmCategory.HARM_CATEGORY_HATE_SPEECH: generation_types.HarmBlockThreshold.BLOCK_NONE,
    generation_types.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT: generation_types.HarmBlockThreshold.BLOCK_NONE,
    generation_types.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT: generation_types.HarmBlockThreshold.BLOCK_NONE,
}

async def load_file_content(file_path: Path) -> str:
    if not file_path.is_file():
        print(f"Error: File not found at {file_path}")
        return ""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        print(f"Successfully loaded content from {file_path} ({len(content)} bytes)")
        return content
    except Exception as e:
        print(f"Error loading content from {file_path}: {e}")
        return ""

async def main():
    load_dotenv()
    api_key = os.getenv('GEMINI_API_KEY')
    if not api_key:
        print("Error: GEMINI_API_KEY not found.")
        return

    genai.configure(api_key=api_key)

    print(f"\n--- Fetching Model Info for: {MODEL_NAME} ---")
    model_info_retrieved = None
    try:
        model_info_retrieved = genai.get_model(f'models/{MODEL_NAME}')
        if model_info_retrieved:
            print(f"Model Display Name: {model_info_retrieved.display_name}")
            print(f"Input Token Limit: {model_info_retrieved.input_token_limit}")
            print(f"Output Token Limit: {model_info_retrieved.output_token_limit}")
        else:
            print(f"Could not retrieve info for model {MODEL_NAME}")
            return
    except Exception as e:
        print(f"Error getting model information for {MODEL_NAME}: {e}")
        return

    print(f"\n--- Loading Blog Content from: {BLOG_FILE_PATH} ---")
    blog_content_text = await load_file_content(BLOG_FILE_PATH)
    if not blog_content_text:
        print("Cannot proceed without blog content.")
        return

    full_test_prompt = TEST_PROMPT_TEMPLATE.format(blog_content=blog_content_text)
    print(f"\n--- Prompt Constructed (first 200 chars): ---")
    print(full_test_prompt[:200] + "...")
    print(f"... (Total prompt length: {len(full_test_prompt)} characters)")

    model = genai.GenerativeModel(MODEL_NAME)

    print(f"\n--- Counting Input Tokens for the Constructed Prompt ---")
    try:
        count_tokens_response = model.count_tokens(full_test_prompt)
        actual_input_tokens = getattr(count_tokens_response, 'total_tokens', 'N/A')
        print(f"Estimated Input Tokens by count_tokens(): {actual_input_tokens}")
        if isinstance(actual_input_tokens, int) and model_info_retrieved and \
           actual_input_tokens > model_info_retrieved.input_token_limit:
            print(f"WARNING: Estimated input tokens ({actual_input_tokens}) EXCEED model's input token limit ({model_info_retrieved.input_token_limit})!")
    except Exception as e:
        print(f"Error counting tokens: {e}")

    print(f"\n--- Attempting to Generate Content with Large Context (Model: {MODEL_NAME}) ---")
    try:
        response = await model.generate_content_async(
            contents=full_test_prompt,
            safety_settings=SAFETY_SETTINGS,
            generation_config=generation_types.GenerationConfig(
                max_output_tokens=250,
                temperature=0.5
            )
        )

        print("\n--- Gemini API Response ---")
        generated_text = "No text generated or response was blocked."
        finish_reason_val = "N/A"
        prompt_feedback_str = "N/A"

        # It's good practice to check if response and response.candidates exist
        if response and response.candidates:
            candidate = response.candidates[0]
            # candidate.finish_reason is an enum, e.g. FinishReason.STOP
            # We can get its name for a more readable string or its value (integer)
            finish_reason_name = candidate.finish_reason.name # e.g., "STOP", "MAX_TOKENS"
            finish_reason_val = candidate.finish_reason.value # e.g., 1, 2

            print(f"Finish Reason Name: {finish_reason_name}") # Log the name
            print(f"Finish Reason Value: {finish_reason_val}")   # Log the integer value

            if finish_reason_name == "STOP": # Compare with the string name
                try:
                    generated_text = response.text
                except ValueError as ve:
                    generated_text = f"Error accessing response.text: {ve}. Likely blocked."
                    if candidate.content and candidate.content.parts:
                        generated_text += f" Parts: {[part.text for part in candidate.content.parts if hasattr(part, 'text')]}"
                    else:
                        generated_text += " No valid parts found in candidate."
            elif finish_reason_name == "MAX_TOKENS":
                generated_text = "Generation stopped due to MAX_TOKENS. Output might be incomplete."
                try: generated_text += f" Partial: {response.text}"
                except: pass # response.text might error if no valid part due to MAX_TOKENS
            elif finish_reason_name == "SAFETY":
                generated_text = f"Generation stopped due to SAFETY. Ratings: {candidate.safety_ratings}"
            else: # Other reasons like RECITATION, OTHER
                generated_text = f"Generation stopped. Finish Reason: {finish_reason_name}."
        else:
            print("Response did not contain any candidates.")


        # This print statement was for the old variable name.
        # Let's keep it consistent or remove if the new ones above are sufficient.
        # print(f"Finish Reason: {finish_reason_val}") # This variable `finish_reason_val` now holds the integer value
                                                   # Or you can print `finish_reason_name`

        if hasattr(response, 'prompt_feedback') and response.prompt_feedback:
            prompt_feedback_str = (
                f"Block Reason: {response.prompt_feedback.block_reason}, "
                f"Safety Ratings: {response.prompt_feedback.safety_ratings}"
            )
        print(f"Prompt Feedback: {prompt_feedback_str}") # This is fine
        print("\nGenerated Text:")
        print("-----------------------------------------")
        print(generated_text)
        print("-----------------------------------------")

        if hasattr(response, 'usage_metadata'):
            print("\nUsage Metadata:")
            print(f"  Prompt Token Count (from metadata): {response.usage_metadata.prompt_token_count}")
            print(f"  Candidates Token Count: {response.usage_metadata.candidates_token_count}")
            print(f"  Total Token Count: {response.usage_metadata.total_token_count}")

    except Exception as e:
        print(f"An error occurred during content generation: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main())



================================================
File: data/processed_tweets.json
================================================
[
  "1851679208151650712",
  "1899540116441640969",
  "1899687753862033538",
  "1906004778347336110",
  "1906907068470337647",
  "1906921352986022012",
  "1906923245988946034",
  "1906926264759243128",
  "1906933792444485717",
  "1906936256329584743",
  "1906938038170837360",
  "1906951662121689167",
  "1906954342726500415",
  "1906969923840020513",
  "1906970038113898550",
  "1906970236349231411",
  "1906970391035212030",
  "1906970753532104797",
  "1906971258752733627",
  "1906971463472570759",
  "1907006239382626377",
  "1907007067660992931",
  "1907019081422643595",
  "1907032697895346670",
  "1907033173445239075",
  "1907036320024690860",
  "1907052575758623149",
  "1907054451212390621",
  "1907060875875299595",
  "1907060902286741725",
  "1907076488362651992",
  "1907076774598504903",
  "1907080344752312579",
  "1907081622312165436",
  "1907081725135786300",
  "1907085998715969572",
  "1907093144979530130",
  "1907099960228872445",
  "1907102376260960353",
  "1907104991103619401",
  "1907111531285770279",
  "1907115697076842599",
  "1907117270427644074",
  "1907117522253398129",
  "1907121254165045512",
  "1907128133611815136",
  "1907128706209857901",
  "1907128729031016806",
  "1907132595378205114",
  "1907134926266241117",
  "1907136161576812788",
  "1907137098907328902",
  "1907138190840062289",
  "1914311306477252973",
  "1922115721405895129",
  "1927989509339103630",
  "1928428222418501835",
  "1928680347870376311",
  "1928699798103744704",
  "1928710221641167046",
  "1928723109747568663",
  "1928777968223932439",
  "1928804566910283798",
  "1928828112030011630",
  "1928841040762490882",
  "1928844652763033738",
  "1928847135216382109",
  "1928847284717904329",
  "1928853222560534892",
  "1928862906650603654",
  "1928864894025125918",
  "1928867021535461695"
]

